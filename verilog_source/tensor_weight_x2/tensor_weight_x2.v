// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tensor_weight_x2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.846000,HLS_SYN_LAT=2234506,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=54,HLS_SYN_FF=1224,HLS_SYN_LUT=1242,HLS_VERSION=2018_2}" *)

module tensor_weight_x2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond_flatten_fu_214_p2;
wire   [0:0] tmp_2_fu_234_p3;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_823;
reg   [0:0] tmp_2_reg_834;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg    Output_1_V_V_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_6_reg_906;
reg    Output_2_V_V_blk_n;
reg   [18:0] indvar_flatten_reg_146;
reg   [10:0] c_reg_158;
reg  signed [47:0] buf_val_0_val_V_2_s_reg_169;
reg  signed [47:0] buf_val_0_val_V_2_1_reg_181;
reg  signed [47:0] tmp_val_2_V_3_reg_193;
reg    ap_predicate_op33_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] c_mid2_fu_226_p3;
reg   [10:0] c_mid2_reg_827;
reg   [31:0] tmp_V_5_reg_839;
reg  signed [47:0] tmp_val_0_V_1_load_reg_844;
reg    ap_predicate_op45_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage1_11001;
reg  signed [47:0] tmp_val_1_V_1_load_reg_849;
reg  signed [47:0] tmp_val_2_V_load_reg_854;
reg  signed [47:0] tmp_val_2_V_load_reg_854_pp0_iter1_reg;
wire   [18:0] indvar_flatten_next_fu_251_p2;
reg   [18:0] indvar_flatten_next_reg_859;
wire   [15:0] tmp_3_fu_272_p1;
reg   [15:0] tmp_3_reg_864;
reg   [15:0] tmp_4_reg_869;
reg   [31:0] tmp_V_7_reg_874;
reg    ap_predicate_op48_read_state4;
reg    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] tmp_V_8_reg_879;
reg    ap_predicate_op51_read_state5;
reg    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage3_11001;
wire   [0:0] or_cond_fu_306_p2;
reg   [0:0] or_cond_reg_884;
wire   [47:0] loc_V_2_fu_330_p3;
reg    ap_predicate_op55_read_state6;
reg    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage4_11001;
wire   [65:0] p_Val2_36_2_fu_341_p2;
reg   [65:0] p_Val2_36_2_reg_896;
wire   [65:0] p_Val2_36_2_1_fu_351_p2;
reg   [65:0] p_Val2_36_2_1_reg_901;
wire   [0:0] tmp_6_fu_357_p2;
wire   [10:0] c_1_fu_362_p2;
reg   [10:0] c_1_reg_910;
reg  signed [47:0] tmp_val_2_V_1_load_1_reg_915;
reg  signed [47:0] tmp_val_1_V_load_1_reg_920;
reg   [15:0] tmp_7_reg_925;
reg   [31:0] loc_V_5_reg_930;
reg   [47:0] tmp_16_reg_936;
reg   [15:0] tmp_9_reg_941;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp0_stage4_subdone;
reg   [18:0] ap_phi_mux_indvar_flatten_phi_fu_150_p4;
reg   [10:0] ap_phi_mux_c_phi_fu_162_p4;
reg  signed [47:0] ap_phi_mux_buf_val_0_val_V_2_s_phi_fu_173_p4;
wire   [47:0] loc_V_1_fu_319_p3;
wire  signed [47:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_169;
reg  signed [47:0] ap_phi_mux_buf_val_0_val_V_2_1_phi_fu_185_p4;
wire   [47:0] loc_V_fu_312_p3;
wire  signed [47:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_181;
wire  signed [47:0] ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_193;
reg  signed [47:0] ap_phi_reg_pp0_iter1_tmp_val_2_V_3_reg_193;
reg   [47:0] tmp_val_2_V_1_fu_102;
reg   [47:0] tmp_val_1_V_fu_106;
reg   [47:0] tmp_val_0_V_fu_110;
reg   [47:0] tmp_val_0_V_1_fu_114;
reg   [47:0] tmp_val_1_V_1_fu_118;
reg   [47:0] tmp_val_2_V_fu_122;
wire   [31:0] loc_V_3_fu_493_p1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] loc_V_4_fu_623_p3;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
wire   [31:0] loc_V_6_fu_762_p1;
reg    ap_block_pp0_stage3_01001;
wire   [31:0] loc_V_7_fu_778_p3;
reg    ap_block_pp0_stage4_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
wire   [0:0] exitcond_fu_220_p2;
wire   [9:0] tmp_8_fu_291_p4;
wire   [0:0] icmp_fu_300_p2;
wire   [0:0] rev_fu_286_p2;
wire   [15:0] tmp_5_fu_326_p1;
wire  signed [47:0] p_Val2_36_2_fu_341_p0;
wire  signed [47:0] p_Val2_36_2_1_fu_351_p0;
wire  signed [47:0] p_Val2_s_fu_370_p0;
wire   [65:0] p_Val2_s_fu_370_p2;
wire  signed [47:0] OP1_V_1_cast_fu_386_p0;
wire  signed [47:0] p_Val2_36_1_fu_390_p0;
wire   [65:0] p_Val2_36_1_fu_390_p2;
wire   [46:0] tmp_s_fu_376_p4;
wire   [65:0] tmp_fu_400_p3;
wire  signed [66:0] tmp_19_1_fu_408_p1;
wire  signed [79:0] p_Val2_36_1_cast_fu_396_p1;
wire   [80:0] tmp_203_1_fu_416_p1;
wire   [80:0] tmp_19_1_cast2_fu_412_p1;
wire   [80:0] p_Val2_37_1_fu_420_p2;
wire   [47:0] tmp_14_fu_429_p4;
wire   [66:0] tmp_19_2_fu_439_p3;
wire  signed [79:0] p_Val2_36_2_cast_fu_426_p1;
wire   [80:0] tmp_203_2_fu_451_p1;
wire   [80:0] tmp_19_2_cast8_fu_447_p1;
wire   [80:0] p_Val2_37_2_fu_455_p2;
wire   [47:0] acc_val_0_V_fu_461_p4;
wire   [47:0] p_Val2_s_13_fu_471_p3;
wire  signed [47:0] p_Val2_36_0_1_fu_512_p0;
wire   [65:0] p_Val2_36_0_1_fu_512_p2;
wire  signed [47:0] p_Val2_36_1_1_fu_531_p0;
wire   [65:0] p_Val2_36_1_1_fu_531_p2;
wire   [46:0] tmp_10_fu_518_p4;
wire   [65:0] tmp_12_fu_541_p3;
wire  signed [66:0] tmp_19_1_1_fu_549_p1;
wire  signed [79:0] p_Val2_36_1_1_cast_fu_537_p1;
wire   [80:0] tmp_203_1_1_fu_557_p1;
wire   [80:0] tmp_19_1_1_cast4_fu_553_p1;
wire   [80:0] p_Val2_37_1_1_fu_561_p2;
wire   [47:0] tmp_15_fu_570_p4;
wire   [66:0] tmp_19_2_1_fu_580_p3;
wire  signed [79:0] p_Val2_36_2_1_cast_fu_567_p1;
wire   [80:0] tmp_203_2_1_fu_592_p1;
wire   [80:0] tmp_19_2_1_cast_fu_588_p1;
wire   [80:0] p_Val2_37_2_1_fu_596_p2;
wire   [47:0] acc_val_1_V_fu_602_p4;
wire   [47:0] p_Val2_6_fu_612_p3;
wire   [15:0] tmp_18_fu_619_p1;
wire  signed [47:0] p_Val2_36_0_2_fu_645_p0;
wire   [65:0] p_Val2_36_0_2_fu_645_p2;
wire  signed [47:0] p_Val2_36_1_2_fu_664_p0;
wire   [65:0] p_Val2_36_1_2_fu_664_p2;
wire   [46:0] tmp_11_fu_651_p4;
wire   [65:0] tmp_13_fu_674_p3;
wire  signed [66:0] tmp_19_1_2_fu_682_p1;
wire  signed [79:0] p_Val2_36_1_2_cast_fu_670_p1;
wire   [80:0] tmp_203_1_2_fu_690_p1;
wire   [80:0] tmp_19_1_2_cast6_fu_686_p1;
wire   [80:0] p_Val2_37_1_2_fu_694_p2;
wire  signed [47:0] p_Val2_36_2_2_fu_714_p0;
wire   [65:0] p_Val2_36_2_2_fu_714_p2;
wire   [66:0] tmp_19_2_2_fu_724_p3;
wire  signed [79:0] p_Val2_36_2_2_cast_fu_720_p1;
wire   [80:0] tmp_203_2_2_fu_735_p1;
wire   [80:0] tmp_19_2_2_cast_fu_731_p1;
wire   [80:0] p_Val2_37_2_2_fu_739_p2;
wire   [47:0] acc_val_2_V_fu_745_p4;
wire   [47:0] p_Val2_7_fu_755_p3;
wire    ap_CS_fsm_state12;
reg   [6:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_273;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_273)) begin
        if (((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_2_V_3_reg_193 <= loc_V_2_fu_330_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_2_V_3_reg_193 <= ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_193;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_273)) begin
        if (((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0))) begin
            buf_val_0_val_V_2_1_reg_181 <= loc_V_fu_312_p3;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_0_val_V_2_1_reg_181 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_181;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_273)) begin
        if (((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0))) begin
            buf_val_0_val_V_2_s_reg_169 <= loc_V_1_fu_319_p3;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_0_val_V_2_s_reg_169 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_169;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_reg_158 <= c_1_reg_910;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_reg_158 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_146 <= indvar_flatten_next_reg_859;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_146 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        c_1_reg_910 <= c_1_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_mid2_reg_827 <= c_mid2_fu_226_p3;
        tmp_2_reg_834 <= c_mid2_fu_226_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_823 <= exitcond_flatten_fu_214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten_next_reg_859 <= indvar_flatten_next_fu_251_p2;
        tmp_val_0_V_1_fu_114 <= tmp_val_0_V_fu_110;
        tmp_val_1_V_1_fu_118 <= tmp_val_1_V_fu_106;
        tmp_val_2_V_fu_122 <= tmp_val_2_V_1_fu_102;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        loc_V_5_reg_930 <= {{p_Val2_6_fu_612_p3[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_cond_reg_884 <= or_cond_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (or_cond_reg_884 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_Val2_36_2_1_reg_901[65 : 1] <= p_Val2_36_2_1_fu_351_p2[65 : 1];
        p_Val2_36_2_reg_896[65 : 1] <= p_Val2_36_2_fu_341_p2[65 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_884 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_16_reg_936 <= {{p_Val2_37_1_2_fu_694_p2[66:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op45_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_3_reg_864 <= tmp_3_fu_272_p1;
        tmp_4_reg_869 <= {{Input_1_V_V[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_6_reg_906 <= tmp_6_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_7_reg_925 <= {{p_Val2_s_13_fu_471_p3[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_9_reg_941 <= {{p_Val2_7_fu_755_p3[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_5_reg_839 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op48_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_V_7_reg_874 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op51_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_V_8_reg_879 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_val_0_V_1_load_reg_844 <= tmp_val_0_V_1_fu_114;
        tmp_val_1_V_1_load_reg_849 <= tmp_val_1_V_1_fu_118;
        tmp_val_2_V_load_reg_854 <= tmp_val_2_V_fu_122;
        tmp_val_2_V_load_reg_854_pp0_iter1_reg <= tmp_val_2_V_load_reg_854;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_val_0_V_fu_110 <= buf_val_0_val_V_2_1_reg_181;
        tmp_val_1_V_fu_106 <= buf_val_0_val_V_2_s_reg_169;
        tmp_val_2_V_1_fu_102 <= ap_phi_reg_pp0_iter1_tmp_val_2_V_3_reg_193;
        tmp_val_2_V_3_reg_193 <= ap_phi_reg_pp0_iter1_tmp_val_2_V_3_reg_193;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_884 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_val_1_V_load_1_reg_920 <= tmp_val_1_V_fu_106;
        tmp_val_2_V_1_load_1_reg_915 <= tmp_val_2_V_1_fu_102;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op51_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op48_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op45_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op55_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_2_fu_234_p3 == 1'd0) & (exitcond_flatten_fu_214_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_6_reg_906 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Output_1_V_V = loc_V_7_fu_778_p3;
        end else if (((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Output_1_V_V = loc_V_6_fu_762_p1;
        end else if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Output_1_V_V = loc_V_5_reg_930;
        end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Output_1_V_V = loc_V_4_fu_623_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Output_1_V_V = loc_V_3_fu_493_p1;
        end else begin
            Output_1_V_V = 'bx;
        end
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_6_reg_906 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Output_2_V_V = loc_V_7_fu_778_p3;
        end else if (((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Output_2_V_V = loc_V_6_fu_762_p1;
        end else if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Output_2_V_V = loc_V_5_reg_930;
        end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Output_2_V_V = loc_V_4_fu_623_p3;
        end else if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Output_2_V_V = loc_V_3_fu_493_p1;
        end else begin
            Output_2_V_V = 'bx;
        end
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_6_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_6_reg_906 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_reg_823 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        ap_phi_mux_buf_val_0_val_V_2_1_phi_fu_185_p4 = loc_V_fu_312_p3;
    end else begin
        ap_phi_mux_buf_val_0_val_V_2_1_phi_fu_185_p4 = 48'd0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        ap_phi_mux_buf_val_0_val_V_2_s_phi_fu_173_p4 = loc_V_1_fu_319_p3;
    end else begin
        ap_phi_mux_buf_val_0_val_V_2_s_phi_fu_173_p4 = 48'd0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_c_phi_fu_162_p4 = c_1_reg_910;
    end else begin
        ap_phi_mux_c_phi_fu_162_p4 = c_reg_158;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_823 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_150_p4 = indvar_flatten_next_reg_859;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_150_p4 = indvar_flatten_reg_146;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((exitcond_flatten_reg_823 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((exitcond_flatten_reg_823 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_1_cast_fu_386_p0 = tmp_val_0_V_fu_110;

assign acc_val_0_V_fu_461_p4 = {{p_Val2_37_2_fu_455_p2[66:19]}};

assign acc_val_1_V_fu_602_p4 = {{p_Val2_37_2_1_fu_596_p2[66:19]}};

assign acc_val_2_V_fu_745_p4 = {{p_Val2_37_2_2_fu_739_p2[66:19]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op45_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op45_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op45_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op48_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op48_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op48_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op55_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op55_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op55_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state11_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_io = (((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = (((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op33_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op45_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op48_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op55_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_io = (((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = (((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = (((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_6_reg_906 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_273 = ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_181 = 48'd0;

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_169 = 48'd0;

assign ap_phi_reg_pp0_iter0_tmp_val_2_V_3_reg_193 = 48'd0;

always @ (*) begin
    ap_predicate_op33_read_state2 = ((tmp_2_fu_234_p3 == 1'd0) & (exitcond_flatten_fu_214_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_read_state3 = ((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0));
end

always @ (*) begin
    ap_predicate_op48_read_state4 = ((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0));
end

always @ (*) begin
    ap_predicate_op51_read_state5 = ((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0));
end

always @ (*) begin
    ap_predicate_op55_read_state6 = ((tmp_2_reg_834 == 1'd0) & (exitcond_flatten_reg_823 == 1'd0));
end

assign c_1_fu_362_p2 = (c_mid2_reg_827 + 11'd1);

assign c_mid2_fu_226_p3 = ((exitcond_fu_220_p2[0:0] === 1'b1) ? 11'd0 : ap_phi_mux_c_phi_fu_162_p4);

assign exitcond_flatten_fu_214_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_150_p4 == 19'd446900) ? 1'b1 : 1'b0);

assign exitcond_fu_220_p2 = ((ap_phi_mux_c_phi_fu_162_p4 == 11'd1025) ? 1'b1 : 1'b0);

assign icmp_fu_300_p2 = ((tmp_8_fu_291_p4 != 10'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_251_p2 = (indvar_flatten_reg_146 + 19'd1);

assign loc_V_1_fu_319_p3 = {{tmp_V_7_reg_874}, {tmp_4_reg_869}};

assign loc_V_2_fu_330_p3 = {{tmp_5_fu_326_p1}, {tmp_V_8_reg_879}};

assign loc_V_3_fu_493_p1 = p_Val2_s_13_fu_471_p3[31:0];

assign loc_V_4_fu_623_p3 = {{tmp_18_fu_619_p1}, {tmp_7_reg_925}};

assign loc_V_6_fu_762_p1 = p_Val2_7_fu_755_p3[31:0];

assign loc_V_7_fu_778_p3 = {{16'd0}, {tmp_9_reg_941}};

assign loc_V_fu_312_p3 = {{tmp_3_reg_864}, {tmp_V_5_reg_839}};

assign or_cond_fu_306_p2 = (rev_fu_286_p2 & icmp_fu_300_p2);

assign p_Val2_36_0_1_fu_512_p0 = tmp_val_1_V_1_load_reg_849;

assign p_Val2_36_0_1_fu_512_p2 = ($signed(p_Val2_36_0_1_fu_512_p0) * $signed('h2982A));

assign p_Val2_36_0_2_fu_645_p0 = tmp_val_2_V_load_reg_854_pp0_iter1_reg;

assign p_Val2_36_0_2_fu_645_p2 = ($signed(p_Val2_36_0_2_fu_645_p0) * $signed('h2982A));

assign p_Val2_36_1_1_cast_fu_537_p1 = $signed(p_Val2_36_1_1_fu_531_p2);

assign p_Val2_36_1_1_fu_531_p0 = tmp_val_1_V_load_1_reg_920;

assign p_Val2_36_1_1_fu_531_p2 = ($signed(p_Val2_36_1_1_fu_531_p0) * $signed('h2CF76));

assign p_Val2_36_1_2_cast_fu_670_p1 = $signed(p_Val2_36_1_2_fu_664_p2);

assign p_Val2_36_1_2_fu_664_p0 = tmp_val_2_V_1_load_1_reg_915;

assign p_Val2_36_1_2_fu_664_p2 = ($signed(p_Val2_36_1_2_fu_664_p0) * $signed('h2CF76));

assign p_Val2_36_1_cast_fu_396_p1 = $signed(p_Val2_36_1_fu_390_p2);

assign p_Val2_36_1_fu_390_p0 = OP1_V_1_cast_fu_386_p0;

assign p_Val2_36_1_fu_390_p2 = ($signed(p_Val2_36_1_fu_390_p0) * $signed('h2CF76));

assign p_Val2_36_2_1_cast_fu_567_p1 = $signed(p_Val2_36_2_1_reg_901);

assign p_Val2_36_2_1_fu_351_p0 = ap_phi_mux_buf_val_0_val_V_2_s_phi_fu_173_p4;

assign p_Val2_36_2_1_fu_351_p2 = ($signed(p_Val2_36_2_1_fu_351_p0) * $signed('h2982A));

assign p_Val2_36_2_2_cast_fu_720_p1 = $signed(p_Val2_36_2_2_fu_714_p2);

assign p_Val2_36_2_2_fu_714_p0 = tmp_val_2_V_3_reg_193;

assign p_Val2_36_2_2_fu_714_p2 = ($signed(p_Val2_36_2_2_fu_714_p0) * $signed('h2982A));

assign p_Val2_36_2_cast_fu_426_p1 = $signed(p_Val2_36_2_reg_896);

assign p_Val2_36_2_fu_341_p0 = ap_phi_mux_buf_val_0_val_V_2_1_phi_fu_185_p4;

assign p_Val2_36_2_fu_341_p2 = ($signed(p_Val2_36_2_fu_341_p0) * $signed('h2982A));

assign p_Val2_37_1_1_fu_561_p2 = (tmp_203_1_1_fu_557_p1 + tmp_19_1_1_cast4_fu_553_p1);

assign p_Val2_37_1_2_fu_694_p2 = (tmp_203_1_2_fu_690_p1 + tmp_19_1_2_cast6_fu_686_p1);

assign p_Val2_37_1_fu_420_p2 = (tmp_203_1_fu_416_p1 + tmp_19_1_cast2_fu_412_p1);

assign p_Val2_37_2_1_fu_596_p2 = (tmp_203_2_1_fu_592_p1 + tmp_19_2_1_cast_fu_588_p1);

assign p_Val2_37_2_2_fu_739_p2 = (tmp_203_2_2_fu_735_p1 + tmp_19_2_2_cast_fu_731_p1);

assign p_Val2_37_2_fu_455_p2 = (tmp_203_2_fu_451_p1 + tmp_19_2_cast8_fu_447_p1);

assign p_Val2_6_fu_612_p3 = ((or_cond_reg_884[0:0] === 1'b1) ? acc_val_1_V_fu_602_p4 : 48'd0);

assign p_Val2_7_fu_755_p3 = ((or_cond_reg_884[0:0] === 1'b1) ? acc_val_2_V_fu_745_p4 : 48'd0);

assign p_Val2_s_13_fu_471_p3 = ((or_cond_reg_884[0:0] === 1'b1) ? acc_val_0_V_fu_461_p4 : 48'd0);

assign p_Val2_s_fu_370_p0 = tmp_val_0_V_1_load_reg_844;

assign p_Val2_s_fu_370_p2 = ($signed(p_Val2_s_fu_370_p0) * $signed('h2982A));

assign rev_fu_286_p2 = (tmp_2_reg_834 ^ 1'd1);

assign tmp_10_fu_518_p4 = {{p_Val2_36_0_1_fu_512_p2[65:19]}};

assign tmp_11_fu_651_p4 = {{p_Val2_36_0_2_fu_645_p2[65:19]}};

assign tmp_12_fu_541_p3 = {{tmp_10_fu_518_p4}, {19'd0}};

assign tmp_13_fu_674_p3 = {{tmp_11_fu_651_p4}, {19'd0}};

assign tmp_14_fu_429_p4 = {{p_Val2_37_1_fu_420_p2[66:19]}};

assign tmp_15_fu_570_p4 = {{p_Val2_37_1_1_fu_561_p2[66:19]}};

assign tmp_18_fu_619_p1 = p_Val2_6_fu_612_p3[15:0];

assign tmp_19_1_1_cast4_fu_553_p1 = $unsigned(tmp_19_1_1_fu_549_p1);

assign tmp_19_1_1_fu_549_p1 = $signed(tmp_12_fu_541_p3);

assign tmp_19_1_2_cast6_fu_686_p1 = $unsigned(tmp_19_1_2_fu_682_p1);

assign tmp_19_1_2_fu_682_p1 = $signed(tmp_13_fu_674_p3);

assign tmp_19_1_cast2_fu_412_p1 = $unsigned(tmp_19_1_fu_408_p1);

assign tmp_19_1_fu_408_p1 = $signed(tmp_fu_400_p3);

assign tmp_19_2_1_cast_fu_588_p1 = tmp_19_2_1_fu_580_p3;

assign tmp_19_2_1_fu_580_p3 = {{tmp_15_fu_570_p4}, {19'd0}};

assign tmp_19_2_2_cast_fu_731_p1 = tmp_19_2_2_fu_724_p3;

assign tmp_19_2_2_fu_724_p3 = {{tmp_16_reg_936}, {19'd0}};

assign tmp_19_2_cast8_fu_447_p1 = tmp_19_2_fu_439_p3;

assign tmp_19_2_fu_439_p3 = {{tmp_14_fu_429_p4}, {19'd0}};

assign tmp_203_1_1_fu_557_p1 = $unsigned(p_Val2_36_1_1_cast_fu_537_p1);

assign tmp_203_1_2_fu_690_p1 = $unsigned(p_Val2_36_1_2_cast_fu_670_p1);

assign tmp_203_1_fu_416_p1 = $unsigned(p_Val2_36_1_cast_fu_396_p1);

assign tmp_203_2_1_fu_592_p1 = $unsigned(p_Val2_36_2_1_cast_fu_567_p1);

assign tmp_203_2_2_fu_735_p1 = $unsigned(p_Val2_36_2_2_cast_fu_720_p1);

assign tmp_203_2_fu_451_p1 = $unsigned(p_Val2_36_2_cast_fu_426_p1);

assign tmp_2_fu_234_p3 = c_mid2_fu_226_p3[32'd10];

assign tmp_3_fu_272_p1 = Input_1_V_V[15:0];

assign tmp_5_fu_326_p1 = Input_1_V_V[15:0];

assign tmp_6_fu_357_p2 = ((c_mid2_reg_827 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_8_fu_291_p4 = {{c_mid2_reg_827[10:1]}};

assign tmp_fu_400_p3 = {{tmp_s_fu_376_p4}, {19'd0}};

assign tmp_s_fu_376_p4 = {{p_Val2_s_fu_370_p2[65:19]}};

always @ (posedge ap_clk) begin
    p_Val2_36_2_reg_896[0] <= 1'b0;
    p_Val2_36_2_1_reg_901[0] <= 1'b0;
end

endmodule //tensor_weight_x2
