// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gradient_weight_y_3,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.967643,HLS_SYN_LAT=899075,HLS_SYN_TPT=none,HLS_SYN_MEM=14,HLS_SYN_DSP=21,HLS_SYN_FF=269,HLS_SYN_LUT=946,HLS_VERSION=2018_2}" *)

module gradient_weight_y_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond_flatten_fu_291_p2;
wire   [0:0] tmp_mid2_fu_329_p3;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_646;
reg   [0:0] tmp_mid2_reg_660;
reg    Output_1_V_V_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] or_cond_mid2_reg_664;
reg   [0:0] or_cond_mid2_reg_664_pp0_iter1_reg;
reg   [0:0] tmp_2_mid2_reg_668;
reg   [0:0] tmp_2_mid2_reg_668_pp0_iter1_reg;
reg   [18:0] indvar_flatten_reg_228;
reg   [8:0] r_reg_239;
reg   [10:0] col_assign_reg_250;
reg    ap_predicate_op53_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_predicate_op99_write_state4;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [18:0] indvar_flatten_next_fu_297_p2;
reg   [18:0] indvar_flatten_next_reg_650;
wire   [10:0] col_assign_mid2_fu_309_p3;
reg   [10:0] col_assign_mid2_reg_655;
wire   [0:0] or_cond_mid2_fu_349_p3;
wire   [0:0] tmp_2_mid2_fu_369_p3;
wire   [8:0] r_mid2_fu_377_p3;
reg   [8:0] r_mid2_reg_672;
wire   [63:0] tmp_5_fu_385_p1;
reg   [63:0] tmp_5_reg_677;
reg   [9:0] buf_val_1_V_addr_reg_684;
reg   [9:0] buf_val_2_V_addr_reg_689;
reg   [9:0] buf_val_3_V_addr_reg_694;
reg   [9:0] buf_val_4_V_addr_reg_699;
reg   [9:0] buf_val_5_V_addr_reg_705;
reg    ap_predicate_op69_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_predicate_op123_write_state5;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage1_11001;
reg   [9:0] buf_val_6_V_addr_reg_710;
reg   [31:0] tmp_9_reg_720;
wire   [10:0] c_fu_527_p2;
reg   [10:0] c_reg_725;
reg   [31:0] tmp_V_1_reg_730;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
wire   [9:0] buf_val_0_V_address0;
reg    buf_val_0_V_ce0;
reg    buf_val_0_V_we0;
reg   [9:0] buf_val_1_V_address0;
reg    buf_val_1_V_ce0;
reg    buf_val_1_V_we0;
wire   [31:0] buf_val_1_V_q0;
reg   [9:0] buf_val_2_V_address0;
reg    buf_val_2_V_ce0;
reg    buf_val_2_V_we0;
wire   [31:0] buf_val_2_V_q0;
reg   [9:0] buf_val_3_V_address0;
reg    buf_val_3_V_ce0;
reg    buf_val_3_V_we0;
wire   [31:0] buf_val_3_V_q0;
wire   [9:0] buf_val_4_V_address0;
reg    buf_val_4_V_ce0;
wire   [31:0] buf_val_4_V_q0;
reg    buf_val_4_V_ce1;
reg    buf_val_4_V_we1;
reg   [9:0] buf_val_5_V_address0;
reg    buf_val_5_V_ce0;
reg    buf_val_5_V_we0;
wire   [31:0] buf_val_5_V_q0;
reg   [9:0] buf_val_6_V_address0;
reg    buf_val_6_V_ce0;
reg    buf_val_6_V_we0;
wire   [31:0] buf_val_6_V_q0;
reg   [18:0] ap_phi_mux_indvar_flatten_phi_fu_232_p4;
reg   [8:0] ap_phi_mux_r_phi_fu_243_p4;
reg   [10:0] ap_phi_mux_col_assign_phi_fu_254_p4;
wire  signed [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_261;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_261;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [0:0] tmp_1_fu_279_p2;
wire   [0:0] tmp_fu_273_p2;
wire   [0:0] exitcond_fu_303_p2;
wire   [8:0] r_s_fu_317_p2;
wire   [0:0] tmp_mid1_fu_323_p2;
wire   [0:0] tmp_1_mid1_fu_337_p2;
wire   [0:0] or_cond_mid1_fu_343_p2;
wire   [0:0] or_cond_fu_285_p2;
wire   [0:0] tmp_2_mid1_fu_357_p2;
wire   [0:0] tmp_s_fu_363_p2;
wire  signed [31:0] OP1_V_cast_fu_393_p0;
wire  signed [31:0] p_Val2_2_fu_397_p0;
wire   [48:0] p_Val2_2_fu_397_p2;
wire  signed [31:0] OP1_V_1_cast_fu_413_p0;
wire  signed [31:0] p_Val2_2_1_fu_417_p0;
wire   [29:0] tmp_7_fu_403_p4;
wire   [48:0] tmp_3_fu_423_p3;
wire   [49:0] p_Val2_2_1_fu_417_p2;
wire  signed [49:0] tmp_21_1_cast_fu_431_p1;
wire  signed [31:0] OP1_V_2_cast_fu_441_p0;
wire  signed [31:0] p_Val2_2_2_fu_445_p0;
wire   [49:0] p_Val2_3_1_fu_435_p2;
wire   [30:0] tmp_2_fu_451_p4;
wire   [49:0] tmp_6_fu_461_p3;
wire   [49:0] p_Val2_2_2_fu_445_p2;
wire  signed [50:0] tmp_221_2_cast_fu_473_p1;
wire  signed [50:0] tmp_21_2_fu_469_p1;
wire  signed [31:0] OP1_V_3_cast_fu_483_p0;
wire  signed [31:0] p_Val2_2_3_fu_487_p0;
wire   [50:0] p_Val2_3_2_fu_477_p2;
wire   [31:0] tmp_8_fu_493_p4;
wire   [50:0] p_Val2_2_3_fu_487_p2;
wire   [50:0] tmp_21_3_fu_503_p3;
wire   [50:0] p_Val2_3_3_fu_511_p2;
wire  signed [31:0] OP1_V_4_cast_fu_532_p0;
wire  signed [31:0] p_Val2_2_4_fu_536_p0;
wire   [49:0] p_Val2_2_4_fu_536_p2;
wire  signed [50:0] tmp_221_4_cast_fu_549_p1;
wire   [50:0] tmp_21_4_fu_542_p3;
wire  signed [31:0] OP1_V_5_cast_fu_559_p0;
wire  signed [31:0] p_Val2_2_5_fu_563_p0;
wire   [50:0] p_Val2_3_4_fu_553_p2;
wire   [31:0] tmp_10_fu_569_p4;
wire   [49:0] p_Val2_2_5_fu_563_p2;
wire  signed [50:0] tmp_221_5_cast_fu_587_p1;
wire   [50:0] tmp_21_5_fu_579_p3;
wire  signed [31:0] p_Val2_2_6_fu_601_p0;
wire   [50:0] p_Val2_3_5_fu_591_p2;
wire   [31:0] tmp_11_fu_607_p4;
wire   [48:0] p_Val2_2_6_fu_601_p2;
wire  signed [50:0] tmp_221_6_cast_fu_625_p1;
wire   [50:0] tmp_21_6_fu_617_p3;
wire   [50:0] p_Val2_3_6_fu_629_p2;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_178;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

gradient_weight_ybkb #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_0_V_address0),
    .ce0(buf_val_0_V_ce0),
    .we0(buf_val_0_V_we0),
    .d0(buf_val_1_V_q0)
);

gradient_weight_ycud #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_1_V_address0),
    .ce0(buf_val_1_V_ce0),
    .we0(buf_val_1_V_we0),
    .d0(buf_val_2_V_q0),
    .q0(buf_val_1_V_q0)
);

gradient_weight_ycud #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_2_V_address0),
    .ce0(buf_val_2_V_ce0),
    .we0(buf_val_2_V_we0),
    .d0(buf_val_3_V_q0),
    .q0(buf_val_2_V_q0)
);

gradient_weight_ycud #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_3_V_address0),
    .ce0(buf_val_3_V_ce0),
    .we0(buf_val_3_V_we0),
    .d0(buf_val_4_V_q0),
    .q0(buf_val_3_V_q0)
);

gradient_weight_yfYi #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_4_V_address0),
    .ce0(buf_val_4_V_ce0),
    .q0(buf_val_4_V_q0),
    .address1(buf_val_4_V_addr_reg_699),
    .ce1(buf_val_4_V_ce1),
    .we1(buf_val_4_V_we1),
    .d1(buf_val_5_V_q0)
);

gradient_weight_ycud #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_5_V_address0),
    .ce0(buf_val_5_V_ce0),
    .we0(buf_val_5_V_we0),
    .d0(buf_val_6_V_q0),
    .q0(buf_val_5_V_q0)
);

gradient_weight_ycud #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_6_V_address0),
    .ce0(buf_val_6_V_ce0),
    .we0(buf_val_6_V_we0),
    .d0(ap_phi_reg_pp0_iter1_storemerge_reg_261),
    .q0(buf_val_6_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((or_cond_mid2_reg_664_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op123_write_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((or_cond_mid2_reg_664 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((or_cond_mid2_reg_664_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == Output_1_V_V_ap_ack)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == Output_1_V_V_ap_ack) & (ap_predicate_op123_write_state5 == 1'b1)) | ((or_cond_mid2_reg_664 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_predicate_op99_write_state4 == 1'b1)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_178)) begin
        if (((tmp_mid2_reg_660 == 1'd1) & (exitcond_flatten_reg_646 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_261 <= Input_1_V_V;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_261 <= ap_phi_reg_pp0_iter0_storemerge_reg_261;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_reg_250 <= c_reg_725;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_assign_reg_250 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_228 <= indvar_flatten_next_reg_650;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_228 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_239 <= r_mid2_reg_672;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_239 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_V_addr_reg_684 <= tmp_5_fu_385_p1;
        buf_val_2_V_addr_reg_689 <= tmp_5_fu_385_p1;
        buf_val_3_V_addr_reg_694 <= tmp_5_fu_385_p1;
        buf_val_4_V_addr_reg_699 <= tmp_5_fu_385_p1;
        col_assign_mid2_reg_655 <= col_assign_mid2_fu_309_p3;
        or_cond_mid2_reg_664 <= or_cond_mid2_fu_349_p3;
        tmp_2_mid2_reg_668 <= tmp_2_mid2_fu_369_p3;
        tmp_5_reg_677[10 : 0] <= tmp_5_fu_385_p1[10 : 0];
        tmp_mid2_reg_660 <= tmp_mid2_fu_329_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_5_V_addr_reg_705 <= tmp_5_reg_677;
        buf_val_6_V_addr_reg_710 <= tmp_5_reg_677;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_reg_725 <= c_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_646 <= exitcond_flatten_fu_291_p2;
        or_cond_mid2_reg_664_pp0_iter1_reg <= or_cond_mid2_reg_664;
        tmp_2_mid2_reg_668_pp0_iter1_reg <= tmp_2_mid2_reg_668;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next_reg_650 <= indvar_flatten_next_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_291_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_mid2_reg_672 <= r_mid2_fu_377_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_mid2_reg_664 == 1'd1) & (exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_9_reg_720 <= {{p_Val2_3_3_fu_511_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_mid2_reg_664 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_1_reg_730 <= {{p_Val2_3_6_fu_629_p2[50:19]}};
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op53_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_mid2_reg_660 == 1'd1) & (exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_mid2_fu_329_p3 == 1'd1) & (exitcond_flatten_fu_291_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_mid2_reg_664_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Output_1_V_V = tmp_V_1_reg_730;
    end else if (((or_cond_mid2_reg_664 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Output_1_V_V = {{p_Val2_3_6_fu_629_p2[50:19]}};
    end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op123_write_state5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state4 == 1'b1)))) begin
        Output_1_V_V = 32'd0;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((or_cond_mid2_reg_664_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op123_write_state5 == 1'b1)) | ((or_cond_mid2_reg_664 == 1'd1) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op99_write_state4 == 1'b1)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_2_mid2_reg_668_pp0_iter1_reg == 1'd1) & (or_cond_mid2_reg_664_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (or_cond_mid2_reg_664_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_2_mid2_reg_668 == 1'd1) & (or_cond_mid2_reg_664 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_mid2_reg_664 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_291_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_col_assign_phi_fu_254_p4 = c_reg_725;
    end else begin
        ap_phi_mux_col_assign_phi_fu_254_p4 = col_assign_reg_250;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_232_p4 = indvar_flatten_next_reg_650;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_232_p4 = indvar_flatten_reg_228;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_phi_fu_243_p4 = r_mid2_reg_672;
    end else begin
        ap_phi_mux_r_phi_fu_243_p4 = r_reg_239;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_0_V_ce0 = 1'b1;
    end else begin
        buf_val_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_0_V_we0 = 1'b1;
    end else begin
        buf_val_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            buf_val_1_V_address0 = buf_val_1_V_addr_reg_684;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf_val_1_V_address0 = tmp_5_fu_385_p1;
        end else begin
            buf_val_1_V_address0 = 'bx;
        end
    end else begin
        buf_val_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_1_V_ce0 = 1'b1;
    end else begin
        buf_val_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_1_V_we0 = 1'b1;
    end else begin
        buf_val_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            buf_val_2_V_address0 = buf_val_2_V_addr_reg_689;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf_val_2_V_address0 = tmp_5_fu_385_p1;
        end else begin
            buf_val_2_V_address0 = 'bx;
        end
    end else begin
        buf_val_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_2_V_ce0 = 1'b1;
    end else begin
        buf_val_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_2_V_we0 = 1'b1;
    end else begin
        buf_val_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            buf_val_3_V_address0 = buf_val_3_V_addr_reg_694;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf_val_3_V_address0 = tmp_5_fu_385_p1;
        end else begin
            buf_val_3_V_address0 = 'bx;
        end
    end else begin
        buf_val_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_3_V_ce0 = 1'b1;
    end else begin
        buf_val_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_3_V_we0 = 1'b1;
    end else begin
        buf_val_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_V_ce0 = 1'b1;
    end else begin
        buf_val_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_V_ce1 = 1'b1;
    end else begin
        buf_val_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_V_we1 = 1'b1;
    end else begin
        buf_val_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_val_5_V_address0 = buf_val_5_V_addr_reg_705;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_val_5_V_address0 = tmp_5_reg_677;
    end else begin
        buf_val_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_5_V_ce0 = 1'b1;
    end else begin
        buf_val_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_646 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_V_we0 = 1'b1;
    end else begin
        buf_val_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_val_6_V_address0 = buf_val_6_V_addr_reg_710;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_val_6_V_address0 = tmp_5_reg_677;
    end else begin
        buf_val_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_6_V_ce0 = 1'b1;
    end else begin
        buf_val_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_V_we0 = 1'b1;
    end else begin
        buf_val_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_291_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_291_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_1_cast_fu_413_p0 = buf_val_2_V_q0;

assign OP1_V_2_cast_fu_441_p0 = buf_val_3_V_q0;

assign OP1_V_3_cast_fu_483_p0 = buf_val_4_V_q0;

assign OP1_V_4_cast_fu_532_p0 = buf_val_5_V_q0;

assign OP1_V_5_cast_fu_559_p0 = buf_val_6_V_q0;

assign OP1_V_cast_fu_393_p0 = buf_val_1_V_q0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_read_state2 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op53_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op69_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_io = (((or_cond_mid2_reg_664 == 1'd1) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op99_write_state4 == 1'b1)));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = (((or_cond_mid2_reg_664_pp0_iter1_reg == 1'd1) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op123_write_state5 == 1'b1)));
end

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_178 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_reg_261 = 32'd0;

always @ (*) begin
    ap_predicate_op123_write_state5 = ((tmp_2_mid2_reg_668_pp0_iter1_reg == 1'd1) & (or_cond_mid2_reg_664_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op53_read_state2 = ((tmp_mid2_fu_329_p3 == 1'd1) & (exitcond_flatten_fu_291_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_read_state3 = ((tmp_mid2_reg_660 == 1'd1) & (exitcond_flatten_reg_646 == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_write_state4 = ((tmp_2_mid2_reg_668 == 1'd1) & (or_cond_mid2_reg_664 == 1'd0));
end

assign buf_val_0_V_address0 = tmp_5_reg_677;

assign buf_val_4_V_address0 = tmp_5_fu_385_p1;

assign c_fu_527_p2 = (col_assign_mid2_reg_655 + 11'd1);

assign col_assign_mid2_fu_309_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? 11'd0 : ap_phi_mux_col_assign_phi_fu_254_p4);

assign exitcond_flatten_fu_291_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_232_p4 == 19'd449536) ? 1'b1 : 1'b0);

assign exitcond_fu_303_p2 = ((ap_phi_mux_col_assign_phi_fu_254_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_297_p2 = (ap_phi_mux_indvar_flatten_phi_fu_232_p4 + 19'd1);

assign or_cond_fu_285_p2 = (tmp_fu_273_p2 & tmp_1_fu_279_p2);

assign or_cond_mid1_fu_343_p2 = (tmp_mid1_fu_323_p2 & tmp_1_mid1_fu_337_p2);

assign or_cond_mid2_fu_349_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? or_cond_mid1_fu_343_p2 : or_cond_fu_285_p2);

assign p_Val2_2_1_fu_417_p0 = OP1_V_1_cast_fu_413_p0;

assign p_Val2_2_1_fu_417_p2 = ($signed(p_Val2_2_1_fu_417_p0) * $signed('h11062));

assign p_Val2_2_2_fu_445_p0 = OP1_V_2_cast_fu_441_p0;

assign p_Val2_2_2_fu_445_p2 = ($signed(p_Val2_2_2_fu_445_p0) * $signed('h17EC5));

assign p_Val2_2_3_fu_487_p0 = OP1_V_3_cast_fu_483_p0;

assign p_Val2_2_3_fu_487_p2 = ($signed(p_Val2_2_3_fu_487_p0) * $signed('h25288));

assign p_Val2_2_4_fu_536_p0 = OP1_V_4_cast_fu_532_p0;

assign p_Val2_2_4_fu_536_p2 = ($signed(p_Val2_2_4_fu_536_p0) * $signed('h17EC5));

assign p_Val2_2_5_fu_563_p0 = OP1_V_5_cast_fu_559_p0;

assign p_Val2_2_5_fu_563_p2 = ($signed(p_Val2_2_5_fu_563_p0) * $signed('h11062));

assign p_Val2_2_6_fu_601_p0 = ap_phi_reg_pp0_iter1_storemerge_reg_261;

assign p_Val2_2_6_fu_601_p2 = ($signed(p_Val2_2_6_fu_601_p0) * $signed('h9A9F));

assign p_Val2_2_fu_397_p0 = OP1_V_cast_fu_393_p0;

assign p_Val2_2_fu_397_p2 = ($signed(p_Val2_2_fu_397_p0) * $signed('h9A9F));

assign p_Val2_3_1_fu_435_p2 = ($signed(p_Val2_2_1_fu_417_p2) + $signed(tmp_21_1_cast_fu_431_p1));

assign p_Val2_3_2_fu_477_p2 = ($signed(tmp_221_2_cast_fu_473_p1) + $signed(tmp_21_2_fu_469_p1));

assign p_Val2_3_3_fu_511_p2 = (p_Val2_2_3_fu_487_p2 + tmp_21_3_fu_503_p3);

assign p_Val2_3_4_fu_553_p2 = ($signed(tmp_221_4_cast_fu_549_p1) + $signed(tmp_21_4_fu_542_p3));

assign p_Val2_3_5_fu_591_p2 = ($signed(tmp_221_5_cast_fu_587_p1) + $signed(tmp_21_5_fu_579_p3));

assign p_Val2_3_6_fu_629_p2 = ($signed(tmp_221_6_cast_fu_625_p1) + $signed(tmp_21_6_fu_617_p3));

assign r_mid2_fu_377_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? r_s_fu_317_p2 : ap_phi_mux_r_phi_fu_243_p4);

assign r_s_fu_317_p2 = (ap_phi_mux_r_phi_fu_243_p4 + 9'd1);

assign tmp_10_fu_569_p4 = {{p_Val2_3_4_fu_553_p2[50:19]}};

assign tmp_11_fu_607_p4 = {{p_Val2_3_5_fu_591_p2[50:19]}};

assign tmp_1_fu_279_p2 = ((ap_phi_mux_r_phi_fu_243_p4 > 9'd5) ? 1'b1 : 1'b0);

assign tmp_1_mid1_fu_337_p2 = ((r_s_fu_317_p2 > 9'd5) ? 1'b1 : 1'b0);

assign tmp_21_1_cast_fu_431_p1 = $signed(tmp_3_fu_423_p3);

assign tmp_21_2_fu_469_p1 = $signed(tmp_6_fu_461_p3);

assign tmp_21_3_fu_503_p3 = {{tmp_8_fu_493_p4}, {19'd0}};

assign tmp_21_4_fu_542_p3 = {{tmp_9_reg_720}, {19'd0}};

assign tmp_21_5_fu_579_p3 = {{tmp_10_fu_569_p4}, {19'd0}};

assign tmp_21_6_fu_617_p3 = {{tmp_11_fu_607_p4}, {19'd0}};

assign tmp_221_2_cast_fu_473_p1 = $signed(p_Val2_2_2_fu_445_p2);

assign tmp_221_4_cast_fu_549_p1 = $signed(p_Val2_2_4_fu_536_p2);

assign tmp_221_5_cast_fu_587_p1 = $signed(p_Val2_2_5_fu_563_p2);

assign tmp_221_6_cast_fu_625_p1 = $signed(p_Val2_2_6_fu_601_p2);

assign tmp_2_fu_451_p4 = {{p_Val2_3_1_fu_435_p2[49:19]}};

assign tmp_2_mid1_fu_357_p2 = ((r_s_fu_317_p2 > 9'd2) ? 1'b1 : 1'b0);

assign tmp_2_mid2_fu_369_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? tmp_2_mid1_fu_357_p2 : tmp_s_fu_363_p2);

assign tmp_3_fu_423_p3 = {{tmp_7_fu_403_p4}, {19'd0}};

assign tmp_5_fu_385_p1 = col_assign_mid2_fu_309_p3;

assign tmp_6_fu_461_p3 = {{tmp_2_fu_451_p4}, {19'd0}};

assign tmp_7_fu_403_p4 = {{p_Val2_2_fu_397_p2[48:19]}};

assign tmp_8_fu_493_p4 = {{p_Val2_3_2_fu_477_p2[50:19]}};

assign tmp_fu_273_p2 = ((ap_phi_mux_r_phi_fu_243_p4 < 9'd436) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_323_p2 = ((r_s_fu_317_p2 < 9'd436) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_329_p3 = ((exitcond_fu_303_p2[0:0] === 1'b1) ? tmp_mid1_fu_323_p2 : tmp_fu_273_p2);

assign tmp_s_fu_363_p2 = ((ap_phi_mux_r_phi_fu_243_p4 > 9'd2) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_5_reg_677[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //gradient_weight_y_3
