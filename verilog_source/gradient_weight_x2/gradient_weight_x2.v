// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gradient_weight_x2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.730643,HLS_SYN_LAT=895546,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=21,HLS_SYN_FF=371,HLS_SYN_LUT=809,HLS_VERSION=2018_2}" *)

module gradient_weight_x2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond_flatten_fu_186_p2;
wire   [0:0] tmp_3_fu_237_p3;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_568;
reg   [0:0] tmp_3_reg_582;
reg    Output_1_V_V_blk_n;
reg   [0:0] or_cond_reg_586;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_1_reg_590;
reg    Output_2_V_V_blk_n;
reg   [18:0] indvar_flatten_reg_134;
reg   [10:0] c_reg_145;
reg  signed [31:0] buf_val_0_y_V_4_lo_reg_563;
reg    ap_predicate_op41_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_predicate_op100_write_state4;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [18:0] indvar_flatten_next_fu_192_p2;
reg   [18:0] indvar_flatten_next_reg_572;
wire   [10:0] c_mid2_fu_229_p3;
reg   [10:0] c_mid2_reg_577;
wire   [0:0] or_cond_fu_257_p2;
wire   [0:0] tmp_1_fu_263_p2;
reg   [31:0] tmp_7_reg_594;
reg   [31:0] tmp_V_reg_599;
reg    ap_predicate_op68_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_predicate_op73_write_state3;
reg    ap_predicate_op93_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage1_11001;
wire   [10:0] c_1_fu_522_p2;
reg   [10:0] c_1_reg_605;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
reg   [18:0] ap_phi_mux_indvar_flatten_phi_fu_138_p4;
reg   [10:0] ap_phi_mux_c_phi_fu_149_p4;
reg  signed [31:0] ap_phi_mux_buf_val_0_y_V_6_phi_fu_160_p4;
reg   [31:0] buf_val_0_y_V_5_fu_88;
reg   [31:0] buf_val_0_y_V_0_fu_92;
reg   [31:0] buf_val_0_y_V_1_fu_96;
reg   [31:0] buf_val_0_y_V_2_fu_100;
reg   [31:0] buf_val_0_y_V_3_fu_104;
reg   [31:0] buf_val_0_y_V_4_fu_108;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
wire   [0:0] exitcond_fu_223_p2;
wire   [0:0] tmp_s_fu_251_p2;
wire   [0:0] rev_fu_245_p2;
wire  signed [31:0] OP1_V_cast_fu_269_p0;
wire  signed [31:0] p_Val2_3_fu_273_p0;
wire   [48:0] p_Val2_3_fu_273_p2;
wire  signed [31:0] OP1_V_1_cast_fu_289_p0;
wire  signed [31:0] p_Val2_3_1_fu_293_p0;
wire   [29:0] tmp_5_fu_279_p4;
wire   [48:0] tmp_fu_299_p3;
wire   [49:0] p_Val2_3_1_fu_293_p2;
wire  signed [49:0] tmp_13_1_cast_fu_307_p1;
wire  signed [31:0] OP1_V_2_cast_fu_317_p0;
wire  signed [31:0] p_Val2_3_2_fu_321_p0;
wire   [49:0] p_Val2_4_1_fu_311_p2;
wire   [30:0] tmp_4_fu_327_p4;
wire   [49:0] tmp_10_fu_337_p3;
wire   [49:0] p_Val2_3_2_fu_321_p2;
wire  signed [50:0] tmp_148_2_cast_fu_349_p1;
wire  signed [50:0] tmp_13_2_fu_345_p1;
wire  signed [31:0] OP1_V_3_cast_fu_359_p0;
wire  signed [31:0] p_Val2_3_3_fu_363_p0;
wire   [50:0] p_Val2_4_2_fu_353_p2;
wire   [31:0] tmp_6_fu_369_p4;
wire   [50:0] p_Val2_3_3_fu_363_p2;
wire   [50:0] tmp_13_3_fu_379_p3;
wire   [50:0] p_Val2_4_3_fu_387_p2;
wire  signed [31:0] p_Val2_3_4_fu_411_p0;
wire   [49:0] p_Val2_3_4_fu_411_p2;
wire  signed [50:0] tmp_148_4_cast_fu_424_p1;
wire   [50:0] tmp_13_4_fu_417_p3;
wire  signed [31:0] OP1_V_5_cast_fu_434_p0;
wire  signed [31:0] p_Val2_3_5_fu_438_p0;
wire   [50:0] p_Val2_4_4_fu_428_p2;
wire   [31:0] tmp_8_fu_444_p4;
wire   [49:0] p_Val2_3_5_fu_438_p2;
wire  signed [50:0] tmp_148_5_cast_fu_462_p1;
wire   [50:0] tmp_13_5_fu_454_p3;
wire  signed [31:0] p_Val2_3_6_fu_476_p0;
wire   [50:0] p_Val2_4_5_fu_466_p2;
wire   [31:0] tmp_9_fu_482_p4;
wire   [48:0] p_Val2_3_6_fu_476_p2;
wire  signed [50:0] tmp_148_6_cast_fu_500_p1;
wire   [50:0] tmp_13_6_fu_492_p3;
wire   [50:0] p_Val2_4_6_fu_504_p2;
wire    ap_CS_fsm_state5;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op93_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op73_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_reg_586 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack) & (ap_predicate_op93_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack) & (ap_predicate_op73_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_predicate_op100_write_state4 == 1'b1)) | ((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op93_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op73_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_reg_586 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == Output_2_V_V_ap_ack) & (ap_predicate_op93_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == Output_2_V_V_ap_ack) & (ap_predicate_op73_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_2_V_V_ap_ack) & (ap_predicate_op100_write_state4 == 1'b1)) | ((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_2_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_568 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_reg_145 <= c_1_reg_605;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_145 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_568 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_134 <= indvar_flatten_next_reg_572;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_134 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_0_y_V_0_fu_92 <= buf_val_0_y_V_1_fu_96;
        buf_val_0_y_V_1_fu_96 <= buf_val_0_y_V_2_fu_100;
        buf_val_0_y_V_2_fu_100 <= buf_val_0_y_V_3_fu_104;
        buf_val_0_y_V_3_fu_104 <= buf_val_0_y_V_4_fu_108;
        buf_val_0_y_V_4_fu_108 <= buf_val_0_y_V_5_fu_88;
        indvar_flatten_next_reg_572 <= indvar_flatten_next_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_0_y_V_4_lo_reg_563 <= buf_val_0_y_V_4_fu_108;
        exitcond_flatten_reg_568 <= exitcond_flatten_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_0_y_V_5_fu_88 <= ap_phi_mux_buf_val_0_y_V_6_phi_fu_160_p4;
        c_1_reg_605 <= c_1_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_mid2_reg_577 <= c_mid2_fu_229_p3;
        or_cond_reg_586 <= or_cond_fu_257_p2;
        tmp_3_reg_582 <= c_mid2_fu_229_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_257_p2 == 1'd0) & (exitcond_flatten_fu_186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_590 <= tmp_1_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_257_p2 == 1'd1) & (exitcond_flatten_fu_186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_7_reg_594 <= {{p_Val2_4_3_fu_387_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op93_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_V_reg_599 <= {{p_Val2_4_6_fu_504_p2[50:19]}};
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op68_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op41_read_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_3_reg_582 == 1'd0) & (exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_3_fu_237_p3 == 1'd0) & (exitcond_flatten_fu_186_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Output_1_V_V = tmp_V_reg_599;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op93_write_state3 == 1'b1))) begin
        Output_1_V_V = {{p_Val2_4_6_fu_504_p2[50:19]}};
    end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op73_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_write_state4 == 1'b1)))) begin
        Output_1_V_V = 32'd0;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op93_write_state3 == 1'b1)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op73_write_state3 == 1'b1)) | ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_write_state4 == 1'b1)) | ((or_cond_reg_586 == 1'd1) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_590 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (or_cond_reg_586 == 1'd0) & (exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_1_reg_590 == 1'd1) & (or_cond_reg_586 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Output_2_V_V = tmp_V_reg_599;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op93_write_state3 == 1'b1))) begin
        Output_2_V_V = {{p_Val2_4_6_fu_504_p2[50:19]}};
    end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op73_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_write_state4 == 1'b1)))) begin
        Output_2_V_V = 32'd0;
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op93_write_state3 == 1'b1)) | ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op73_write_state3 == 1'b1)) | ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_write_state4 == 1'b1)) | ((or_cond_reg_586 == 1'd1) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_590 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (or_cond_reg_586 == 1'd0) & (exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_1_reg_590 == 1'd1) & (or_cond_reg_586 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_reg_586 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_186_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (tmp_3_reg_582 == 1'd0) & (exitcond_flatten_reg_568 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_mux_buf_val_0_y_V_6_phi_fu_160_p4 = Input_1_V_V;
    end else begin
        ap_phi_mux_buf_val_0_y_V_6_phi_fu_160_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_568 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_phi_fu_149_p4 = c_1_reg_605;
    end else begin
        ap_phi_mux_c_phi_fu_149_p4 = c_reg_145;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_568 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_138_p4 = indvar_flatten_next_reg_572;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_138_p4 = indvar_flatten_reg_134;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_186_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((exitcond_flatten_fu_186_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_1_cast_fu_289_p0 = buf_val_0_y_V_1_fu_96;

assign OP1_V_2_cast_fu_317_p0 = buf_val_0_y_V_2_fu_100;

assign OP1_V_3_cast_fu_359_p0 = buf_val_0_y_V_3_fu_104;

assign OP1_V_5_cast_fu_434_p0 = buf_val_0_y_V_5_fu_88;

assign OP1_V_cast_fu_269_p0 = buf_val_0_y_V_0_fu_92;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op41_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op41_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op41_read_state2 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op68_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op68_read_state3 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op68_read_state3 == 1'b1))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op41_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_io = (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_predicate_op93_write_state3 == 1'b1)) | ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_predicate_op73_write_state3 == 1'b1)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op93_write_state3 == 1'b1)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op73_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op68_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_io = (((or_cond_reg_586 == 1'd1) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((or_cond_reg_586 == 1'd1) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) | ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_predicate_op100_write_state4 == 1'b1)) | ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op100_write_state4 == 1'b1)));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op100_write_state4 = ((tmp_1_reg_590 == 1'd1) & (or_cond_reg_586 == 1'd0));
end

always @ (*) begin
    ap_predicate_op41_read_state2 = ((tmp_3_fu_237_p3 == 1'd0) & (exitcond_flatten_fu_186_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op68_read_state3 = ((tmp_3_reg_582 == 1'd0) & (exitcond_flatten_reg_568 == 1'd0));
end

always @ (*) begin
    ap_predicate_op73_write_state3 = ((tmp_1_reg_590 == 1'd1) & (or_cond_reg_586 == 1'd0) & (exitcond_flatten_reg_568 == 1'd0));
end

always @ (*) begin
    ap_predicate_op93_write_state3 = ((or_cond_reg_586 == 1'd1) & (exitcond_flatten_reg_568 == 1'd0));
end

assign c_1_fu_522_p2 = (c_mid2_reg_577 + 11'd1);

assign c_mid2_fu_229_p3 = ((exitcond_fu_223_p2[0:0] === 1'b1) ? 11'd0 : ap_phi_mux_c_phi_fu_149_p4);

assign exitcond_flatten_fu_186_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_138_p4 == 19'd447772) ? 1'b1 : 1'b0);

assign exitcond_fu_223_p2 = ((ap_phi_mux_c_phi_fu_149_p4 == 11'd1027) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_192_p2 = (ap_phi_mux_indvar_flatten_phi_fu_138_p4 + 19'd1);

assign or_cond_fu_257_p2 = (tmp_s_fu_251_p2 & rev_fu_245_p2);

assign p_Val2_3_1_fu_293_p0 = OP1_V_1_cast_fu_289_p0;

assign p_Val2_3_1_fu_293_p2 = ($signed(p_Val2_3_1_fu_293_p0) * $signed('h11062));

assign p_Val2_3_2_fu_321_p0 = OP1_V_2_cast_fu_317_p0;

assign p_Val2_3_2_fu_321_p2 = ($signed(p_Val2_3_2_fu_321_p0) * $signed('h17EC5));

assign p_Val2_3_3_fu_363_p0 = OP1_V_3_cast_fu_359_p0;

assign p_Val2_3_3_fu_363_p2 = ($signed(p_Val2_3_3_fu_363_p0) * $signed('h25288));

assign p_Val2_3_4_fu_411_p0 = buf_val_0_y_V_4_lo_reg_563;

assign p_Val2_3_4_fu_411_p2 = ($signed(p_Val2_3_4_fu_411_p0) * $signed('h17EC5));

assign p_Val2_3_5_fu_438_p0 = OP1_V_5_cast_fu_434_p0;

assign p_Val2_3_5_fu_438_p2 = ($signed(p_Val2_3_5_fu_438_p0) * $signed('h11062));

assign p_Val2_3_6_fu_476_p0 = ap_phi_mux_buf_val_0_y_V_6_phi_fu_160_p4;

assign p_Val2_3_6_fu_476_p2 = ($signed(p_Val2_3_6_fu_476_p0) * $signed('h9A9F));

assign p_Val2_3_fu_273_p0 = OP1_V_cast_fu_269_p0;

assign p_Val2_3_fu_273_p2 = ($signed(p_Val2_3_fu_273_p0) * $signed('h9A9F));

assign p_Val2_4_1_fu_311_p2 = ($signed(p_Val2_3_1_fu_293_p2) + $signed(tmp_13_1_cast_fu_307_p1));

assign p_Val2_4_2_fu_353_p2 = ($signed(tmp_148_2_cast_fu_349_p1) + $signed(tmp_13_2_fu_345_p1));

assign p_Val2_4_3_fu_387_p2 = (p_Val2_3_3_fu_363_p2 + tmp_13_3_fu_379_p3);

assign p_Val2_4_4_fu_428_p2 = ($signed(tmp_148_4_cast_fu_424_p1) + $signed(tmp_13_4_fu_417_p3));

assign p_Val2_4_5_fu_466_p2 = ($signed(tmp_148_5_cast_fu_462_p1) + $signed(tmp_13_5_fu_454_p3));

assign p_Val2_4_6_fu_504_p2 = ($signed(tmp_148_6_cast_fu_500_p1) + $signed(tmp_13_6_fu_492_p3));

assign rev_fu_245_p2 = (tmp_3_fu_237_p3 ^ 1'd1);

assign tmp_10_fu_337_p3 = {{tmp_4_fu_327_p4}, {19'd0}};

assign tmp_13_1_cast_fu_307_p1 = $signed(tmp_fu_299_p3);

assign tmp_13_2_fu_345_p1 = $signed(tmp_10_fu_337_p3);

assign tmp_13_3_fu_379_p3 = {{tmp_6_fu_369_p4}, {19'd0}};

assign tmp_13_4_fu_417_p3 = {{tmp_7_reg_594}, {19'd0}};

assign tmp_13_5_fu_454_p3 = {{tmp_8_fu_444_p4}, {19'd0}};

assign tmp_13_6_fu_492_p3 = {{tmp_9_fu_482_p4}, {19'd0}};

assign tmp_148_2_cast_fu_349_p1 = $signed(p_Val2_3_2_fu_321_p2);

assign tmp_148_4_cast_fu_424_p1 = $signed(p_Val2_3_4_fu_411_p2);

assign tmp_148_5_cast_fu_462_p1 = $signed(p_Val2_3_5_fu_438_p2);

assign tmp_148_6_cast_fu_500_p1 = $signed(p_Val2_3_6_fu_476_p2);

assign tmp_1_fu_263_p2 = ((c_mid2_fu_229_p3 > 11'd2) ? 1'b1 : 1'b0);

assign tmp_3_fu_237_p3 = c_mid2_fu_229_p3[32'd10];

assign tmp_4_fu_327_p4 = {{p_Val2_4_1_fu_311_p2[49:19]}};

assign tmp_5_fu_279_p4 = {{p_Val2_3_fu_273_p2[48:19]}};

assign tmp_6_fu_369_p4 = {{p_Val2_4_2_fu_353_p2[50:19]}};

assign tmp_8_fu_444_p4 = {{p_Val2_4_4_fu_428_p2[50:19]}};

assign tmp_9_fu_482_p4 = {{p_Val2_4_5_fu_466_p2[50:19]}};

assign tmp_fu_299_p3 = {{tmp_5_fu_279_p4}, {19'd0}};

assign tmp_s_fu_251_p2 = ((c_mid2_fu_229_p3 > 11'd5) ? 1'b1 : 1'b0);

endmodule //gradient_weight_x2
