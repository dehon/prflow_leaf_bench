// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dotProduct_7,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.097000,HLS_SYN_LAT=200,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=36,HLS_SYN_FF=1540,HLS_SYN_LUT=2389,HLS_VERSION=2018_2}" *)

module dotProduct_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Input_2_V_V,
        Input_2_V_V_ap_vld,
        Input_2_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_pp0_stage0 = 14'd16;
parameter    ap_ST_fsm_state9 = 14'd32;
parameter    ap_ST_fsm_pp1_stage0 = 14'd64;
parameter    ap_ST_fsm_state13 = 14'd128;
parameter    ap_ST_fsm_pp2_stage0 = 14'd256;
parameter    ap_ST_fsm_state18 = 14'd512;
parameter    ap_ST_fsm_pp3_stage0 = 14'd1024;
parameter    ap_ST_fsm_pp3_stage1 = 14'd2048;
parameter    ap_ST_fsm_state22 = 14'd4096;
parameter    ap_ST_fsm_state23 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
input  [31:0] Input_2_V_V;
input   Input_2_V_V_ap_vld;
output   Input_2_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg Input_2_V_V_ap_ack;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] odd_even;
reg   [7:0] training_label_V;
reg   [4:0] param_V_0_address0;
reg    param_V_0_ce0;
wire   [31:0] param_V_0_q0;
reg   [4:0] param_V_0_address1;
reg    param_V_0_ce1;
reg    param_V_0_we1;
wire   [31:0] param_V_0_d1;
wire   [31:0] param_V_0_q1;
reg   [4:0] feature_V_0_address0;
reg    feature_V_0_ce0;
reg    feature_V_0_we0;
wire   [15:0] feature_V_0_q0;
reg   [4:0] param_V_1_address0;
reg    param_V_1_ce0;
wire   [31:0] param_V_1_q0;
reg   [4:0] param_V_1_address1;
reg    param_V_1_ce1;
reg    param_V_1_we1;
wire   [31:0] param_V_1_d1;
wire   [31:0] param_V_1_q1;
reg   [4:0] feature_V_1_address0;
reg    feature_V_1_ce0;
reg    feature_V_1_we0;
wire   [15:0] feature_V_1_q0;
reg   [4:0] param_V_2_address0;
reg    param_V_2_ce0;
wire   [31:0] param_V_2_q0;
reg   [4:0] param_V_2_address1;
reg    param_V_2_ce1;
reg    param_V_2_we1;
wire   [31:0] param_V_2_d1;
wire   [31:0] param_V_2_q1;
reg   [4:0] feature_V_2_address0;
reg    feature_V_2_ce0;
reg    feature_V_2_we0;
wire   [15:0] feature_V_2_q0;
reg   [4:0] param_V_3_address0;
reg    param_V_3_ce0;
wire   [31:0] param_V_3_q0;
reg   [4:0] param_V_3_address1;
reg    param_V_3_ce1;
reg    param_V_3_we1;
wire   [31:0] param_V_3_d1;
wire   [31:0] param_V_3_q1;
reg   [4:0] feature_V_3_address0;
reg    feature_V_3_ce0;
reg    feature_V_3_we0;
wire   [15:0] feature_V_3_q0;
reg   [31:0] num_train;
reg   [31:0] epoch;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_s_fu_673_p2;
wire    ap_CS_fsm_state3;
reg    Input_2_V_V_blk_n;
reg    Output_1_V_V_blk_n;
wire    ap_CS_fsm_state9;
reg    Output_2_V_V_blk_n;
wire    ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage1;
reg   [0:0] tmp_17_reg_1662;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [31:0] p_Val2_7_reg_544;
reg   [5:0] i1_reg_557;
reg   [5:0] i3_reg_568;
reg   [5:0] i5_reg_579;
reg   [6:0] i7_reg_609;
reg    ap_block_state1;
wire  signed [43:0] OP1_V_cast_fu_669_p1;
reg  signed [43:0] OP1_V_cast_reg_1354;
reg    ap_block_state2;
wire   [5:0] i_1_fu_679_p2;
reg   [5:0] i_1_reg_1366;
reg   [31:0] tmp_V_1_reg_1371;
wire   [4:0] tmp_15_fu_685_p1;
reg   [4:0] tmp_15_reg_1376;
wire   [63:0] p_Result_s_fu_689_p3;
reg   [63:0] p_Result_s_reg_1381;
wire   [6:0] tmp_6_fu_696_p3;
reg   [6:0] tmp_6_reg_1387;
wire   [2:0] j_1_fu_709_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond2_fu_864_p2;
reg   [0:0] exitcond2_reg_1403;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond2_reg_1403_pp0_iter1_reg;
reg   [0:0] exitcond2_reg_1403_pp0_iter2_reg;
wire   [5:0] i_3_fu_870_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] i4_fu_876_p1;
reg   [63:0] i4_reg_1412;
reg   [31:0] param_V_0_load_reg_1440;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] param_V_1_load_reg_1450;
reg   [31:0] param_V_2_load_reg_1460;
reg   [31:0] param_V_3_load_reg_1470;
reg   [31:0] p_Val2_2_reg_1480;
reg   [31:0] p_Val2_12_1_reg_1485;
reg   [31:0] p_Val2_12_2_reg_1490;
reg   [31:0] p_Val2_12_3_reg_1495;
wire   [31:0] p_Val2_13_3_fu_990_p2;
reg    ap_enable_reg_pp0_iter3;
wire   [0:0] exitcond1_fu_996_p2;
reg   [0:0] exitcond1_reg_1505;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond1_reg_1505_pp1_iter1_reg;
wire   [5:0] i_2_fu_1002_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] i2_fu_1008_p1;
reg   [63:0] i2_reg_1514;
reg   [63:0] i2_reg_1514_pp1_iter1_reg;
reg   [31:0] tmp_5_reg_1542;
reg   [31:0] tmp_21_1_reg_1547;
reg   [31:0] tmp_21_2_reg_1552;
reg   [31:0] tmp_21_3_reg_1557;
wire   [0:0] exitcond3_fu_1092_p2;
reg   [0:0] exitcond3_reg_1562;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state14_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_state16_pp2_stage0_iter2;
wire    ap_block_state17_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond3_reg_1562_pp2_iter1_reg;
reg   [0:0] exitcond3_reg_1562_pp2_iter2_reg;
wire   [5:0] i_4_fu_1098_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [4:0] param_V_0_addr_1_reg_1576;
reg   [4:0] param_V_0_addr_1_reg_1576_pp2_iter1_reg;
reg   [4:0] param_V_0_addr_1_reg_1576_pp2_iter2_reg;
reg   [4:0] param_V_1_addr_1_reg_1587;
reg   [4:0] param_V_1_addr_1_reg_1587_pp2_iter1_reg;
reg   [4:0] param_V_1_addr_1_reg_1587_pp2_iter2_reg;
reg   [4:0] param_V_2_addr_1_reg_1598;
reg   [4:0] param_V_2_addr_1_reg_1598_pp2_iter1_reg;
reg   [4:0] param_V_2_addr_1_reg_1598_pp2_iter2_reg;
reg   [4:0] param_V_3_addr_1_reg_1609;
reg   [4:0] param_V_3_addr_1_reg_1609_pp2_iter1_reg;
reg   [4:0] param_V_3_addr_1_reg_1609_pp2_iter2_reg;
wire   [31:0] grad_0_V_q0;
reg   [31:0] grad_0_V_load_reg_1615;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] grad_1_V_q0;
reg   [31:0] grad_1_V_load_reg_1620;
wire   [31:0] grad_2_V_q0;
reg   [31:0] grad_2_V_load_reg_1625;
wire   [31:0] grad_3_V_q0;
reg   [31:0] grad_3_V_load_reg_1630;
wire   [50:0] p_Val2_5_fu_1119_p2;
reg   [50:0] p_Val2_5_reg_1635;
wire   [50:0] p_Val2_15_1_fu_1128_p2;
reg   [50:0] p_Val2_15_1_reg_1640;
wire   [50:0] p_Val2_15_2_fu_1137_p2;
reg   [50:0] p_Val2_15_2_reg_1645;
wire   [50:0] p_Val2_15_3_fu_1146_p2;
reg   [50:0] p_Val2_15_3_reg_1650;
wire   [0:0] tmp_16_fu_1283_p2;
wire    ap_CS_fsm_state18;
wire   [0:0] tmp_17_fu_1295_p2;
wire    ap_block_state19_pp3_stage0_iter0;
wire    ap_block_state21_pp3_stage0_iter1;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state21_io;
reg    ap_block_pp3_stage0_11001;
wire   [6:0] i_5_fu_1301_p2;
reg   [6:0] i_5_reg_1666;
wire   [0:0] tmp_38_fu_1307_p1;
reg   [0:0] tmp_38_reg_1671;
wire   [31:0] tmp_V_5_fu_1337_p3;
reg   [31:0] tmp_V_5_reg_1697;
wire    ap_block_state20_pp3_stage1_iter0;
reg    ap_block_state20_io;
reg    ap_block_pp3_stage1_11001;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state13;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state14;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state19;
reg    ap_block_pp3_stage1_subdone;
reg   [4:0] grad_0_V_address0;
reg    grad_0_V_ce0;
reg    grad_0_V_we0;
reg   [4:0] grad_1_V_address0;
reg    grad_1_V_ce0;
reg    grad_1_V_we0;
reg   [4:0] grad_2_V_address0;
reg    grad_2_V_ce0;
reg    grad_2_V_we0;
reg   [4:0] grad_3_V_address0;
reg    grad_3_V_ce0;
reg    grad_3_V_we0;
reg   [5:0] i_reg_522;
wire   [0:0] tmp_3_fu_703_p2;
reg   [2:0] j_reg_533;
reg   [31:0] ap_phi_mux_num_train_new_phi_fu_593_p4;
wire   [0:0] tmp_8_fu_1259_p2;
wire   [31:0] tmp_7_fu_1252_p2;
wire   [31:0] tmp_14_fu_1270_p2;
reg   [31:0] ap_phi_mux_epoch_loc_phi_fu_603_p4;
reg   [6:0] ap_phi_mux_i7_phi_fu_613_p4;
reg   [0:0] storemerge_reg_620;
wire    ap_CS_fsm_state22;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
wire   [63:0] newIndex_cast_fu_856_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire   [63:0] i6_fu_1104_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] newIndex1_cast_fu_1321_p1;
wire    ap_CS_fsm_state23;
wire   [7:0] loc_V_fu_637_p1;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [31:0] tmp_V_4_fu_1329_p3;
wire    ap_block_pp3_stage1_01001;
wire    ap_block_pp3_stage0_01001;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
wire   [1:0] tmp_20_fu_719_p1;
wire   [15:0] loc_V_1_fu_838_p1;
wire   [26:0] tmp_9_fu_651_p3;
wire   [31:0] tmp_9_cast_fu_659_p1;
wire   [31:0] scale_V_fu_663_p2;
wire   [6:0] tmp_12_cast_fu_715_p1;
wire   [5:0] Lo_assign_fu_728_p3;
wire   [5:0] Hi_assign_fu_736_p2;
wire   [6:0] tmp_22_fu_748_p1;
wire   [6:0] tmp_23_fu_752_p1;
wire   [0:0] tmp_21_fu_742_p2;
wire   [6:0] tmp_25_fu_765_p2;
wire   [6:0] tmp_27_fu_777_p2;
reg   [63:0] tmp_24_fu_756_p4;
wire   [6:0] tmp_26_fu_771_p2;
wire   [6:0] tmp_28_fu_783_p3;
wire   [6:0] tmp_30_fu_798_p3;
wire   [6:0] tmp_31_fu_806_p2;
wire   [63:0] tmp_29_fu_791_p3;
wire   [63:0] tmp_32_fu_812_p1;
wire   [63:0] tmp_33_fu_816_p1;
wire   [63:0] tmp_34_fu_820_p2;
wire   [63:0] tmp_35_fu_826_p2;
wire   [63:0] p_Result_5_fu_832_p2;
wire   [6:0] tmp_13_fu_723_p2;
wire   [4:0] newIndex_fu_846_p4;
wire  signed [31:0] p_Val2_s_fu_891_p0;
wire  signed [15:0] p_Val2_s_fu_891_p1;
wire   [43:0] p_Val2_s_fu_891_p2;
wire  signed [31:0] p_Val2_10_1_fu_914_p0;
wire  signed [15:0] p_Val2_10_1_fu_914_p1;
wire   [43:0] p_Val2_10_1_fu_914_p2;
wire  signed [31:0] p_Val2_10_2_fu_937_p0;
wire  signed [15:0] p_Val2_10_2_fu_937_p1;
wire   [43:0] p_Val2_10_2_fu_937_p2;
wire  signed [31:0] p_Val2_10_3_fu_960_p0;
wire  signed [15:0] p_Val2_10_3_fu_960_p1;
wire   [43:0] p_Val2_10_3_fu_960_p2;
wire   [31:0] tmp2_fu_980_p2;
wire   [31:0] tmp1_fu_976_p2;
wire   [31:0] tmp_12_fu_984_p2;
wire  signed [31:0] p_Val2_9_fu_1020_p0;
wire  signed [15:0] p_Val2_9_fu_1020_p1;
wire   [43:0] p_Val2_9_fu_1020_p2;
wire  signed [31:0] p_Val2_9_1_fu_1039_p0;
wire  signed [15:0] p_Val2_9_1_fu_1039_p1;
wire   [43:0] p_Val2_9_1_fu_1039_p2;
wire  signed [31:0] p_Val2_9_2_fu_1058_p0;
wire  signed [15:0] p_Val2_9_2_fu_1058_p1;
wire   [43:0] p_Val2_9_2_fu_1058_p2;
wire  signed [31:0] p_Val2_9_3_fu_1077_p0;
wire  signed [15:0] p_Val2_9_3_fu_1077_p1;
wire   [43:0] p_Val2_9_3_fu_1077_p2;
wire  signed [31:0] p_Val2_5_fu_1119_p0;
wire  signed [31:0] p_Val2_15_1_fu_1128_p0;
wire  signed [31:0] p_Val2_15_2_fu_1137_p0;
wire  signed [31:0] p_Val2_15_3_fu_1146_p0;
wire   [50:0] tmp_10_fu_1152_p3;
wire   [50:0] p_Val2_6_fu_1160_p2;
wire   [50:0] tmp_35_1_fu_1176_p3;
wire   [50:0] p_Val2_16_1_fu_1184_p2;
wire   [50:0] tmp_35_2_fu_1200_p3;
wire   [50:0] p_Val2_16_2_fu_1208_p2;
wire   [50:0] tmp_35_3_fu_1224_p3;
wire   [50:0] p_Val2_16_3_fu_1232_p2;
wire   [4:0] newIndex1_fu_1311_p4;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_689;
reg    ap_condition_694;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 odd_even = 1'd0;
#0 training_label_V = 8'd0;
#0 num_train = 32'd0;
#0 epoch = 32'd0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

dotProduct_7_parabkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
param_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(param_V_0_address0),
    .ce0(param_V_0_ce0),
    .q0(param_V_0_q0),
    .address1(param_V_0_address1),
    .ce1(param_V_0_ce1),
    .we1(param_V_0_we1),
    .d1(param_V_0_d1),
    .q1(param_V_0_q1)
);

dotProduct_7_featcud #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
feature_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(feature_V_0_address0),
    .ce0(feature_V_0_ce0),
    .we0(feature_V_0_we0),
    .d0(loc_V_1_fu_838_p1),
    .q0(feature_V_0_q0)
);

dotProduct_7_parabkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
param_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(param_V_1_address0),
    .ce0(param_V_1_ce0),
    .q0(param_V_1_q0),
    .address1(param_V_1_address1),
    .ce1(param_V_1_ce1),
    .we1(param_V_1_we1),
    .d1(param_V_1_d1),
    .q1(param_V_1_q1)
);

dotProduct_7_featcud #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
feature_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(feature_V_1_address0),
    .ce0(feature_V_1_ce0),
    .we0(feature_V_1_we0),
    .d0(loc_V_1_fu_838_p1),
    .q0(feature_V_1_q0)
);

dotProduct_7_parabkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
param_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(param_V_2_address0),
    .ce0(param_V_2_ce0),
    .q0(param_V_2_q0),
    .address1(param_V_2_address1),
    .ce1(param_V_2_ce1),
    .we1(param_V_2_we1),
    .d1(param_V_2_d1),
    .q1(param_V_2_q1)
);

dotProduct_7_featcud #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
feature_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(feature_V_2_address0),
    .ce0(feature_V_2_ce0),
    .we0(feature_V_2_we0),
    .d0(loc_V_1_fu_838_p1),
    .q0(feature_V_2_q0)
);

dotProduct_7_parabkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
param_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(param_V_3_address0),
    .ce0(param_V_3_ce0),
    .q0(param_V_3_q0),
    .address1(param_V_3_address1),
    .ce1(param_V_3_ce1),
    .we1(param_V_3_we1),
    .d1(param_V_3_d1),
    .q1(param_V_3_q1)
);

dotProduct_7_featcud #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
feature_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(feature_V_3_address0),
    .ce0(feature_V_3_ce0),
    .we0(feature_V_3_we0),
    .d0(loc_V_1_fu_838_p1),
    .q0(feature_V_3_q0)
);

dotProduct_7_gradjbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
grad_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_0_V_address0),
    .ce0(grad_0_V_ce0),
    .we0(grad_0_V_we0),
    .d0(tmp_5_reg_1542),
    .q0(grad_0_V_q0)
);

dotProduct_7_gradjbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
grad_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_1_V_address0),
    .ce0(grad_1_V_ce0),
    .we0(grad_1_V_we0),
    .d0(tmp_21_1_reg_1547),
    .q0(grad_1_V_q0)
);

dotProduct_7_gradjbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
grad_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_2_V_address0),
    .ce0(grad_2_V_ce0),
    .we0(grad_2_V_we0),
    .d0(tmp_21_2_reg_1552),
    .q0(grad_2_V_q0)
);

dotProduct_7_gradjbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
grad_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_3_V_address0),
    .ce0(grad_3_V_ce0),
    .we0(grad_3_V_we0),
    .d0(tmp_21_3_reg_1557),
    .q0(grad_3_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_673_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_673_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (odd_even == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (odd_even == 1'd1))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state14)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state14);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (tmp_16_fu_1283_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state19) & (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state19);
        end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (tmp_16_fu_1283_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            if ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1)) begin
                ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
            end else if ((1'b1 == Output_1_V_V_ap_ack)) begin
                ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((tmp_17_reg_1662 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage1_11001) & (tmp_17_reg_1662 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b0 == ap_block_pp3_stage0_01001) & (tmp_17_reg_1662 == 1'd0) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage1_01001) & (tmp_17_reg_1662 == 1'd0) & (1'b1 == Output_2_V_V_ap_ack) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_673_p2 == 1'd1))) begin
        i1_reg_557 <= 6'd0;
    end else if (((exitcond2_fu_864_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i1_reg_557 <= i_3_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_996_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i3_reg_568 <= i_2_fu_1002_p2;
    end else if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (odd_even == 1'd1))) begin
        i3_reg_568 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i5_reg_579 <= 6'd0;
    end else if (((exitcond3_fu_1092_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i5_reg_579 <= i_4_fu_1098_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tmp_16_fu_1283_p2 == 1'd1))) begin
        i7_reg_609 <= 7'd0;
    end else if (((tmp_17_reg_1662 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i7_reg_609 <= i_5_reg_1666;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_fu_703_p2 == 1'd1))) begin
        i_reg_522 <= i_1_reg_1366;
    end else if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_522 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_533 <= j_1_fu_709_p2;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_533 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_673_p2 == 1'd1))) begin
        p_Val2_7_reg_544 <= 32'd0;
    end else if (((exitcond2_reg_1403_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_Val2_7_reg_544 <= p_Val2_13_3_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        storemerge_reg_620 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        storemerge_reg_620 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (odd_even == 1'd1))) begin
        OP1_V_cast_reg_1354 <= OP1_V_cast_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (tmp_8_fu_1259_p2 == 1'd1))) begin
        epoch <= tmp_14_fu_1270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond1_reg_1505 <= exitcond1_fu_996_p2;
        exitcond1_reg_1505_pp1_iter1_reg <= exitcond1_reg_1505;
        i2_reg_1514_pp1_iter1_reg[5 : 0] <= i2_reg_1514[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond2_reg_1403 <= exitcond2_fu_864_p2;
        exitcond2_reg_1403_pp0_iter1_reg <= exitcond2_reg_1403;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond2_reg_1403_pp0_iter2_reg <= exitcond2_reg_1403_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond3_reg_1562 <= exitcond3_fu_1092_p2;
        exitcond3_reg_1562_pp2_iter1_reg <= exitcond3_reg_1562;
        param_V_0_addr_1_reg_1576_pp2_iter1_reg <= param_V_0_addr_1_reg_1576;
        param_V_1_addr_1_reg_1587_pp2_iter1_reg <= param_V_1_addr_1_reg_1587;
        param_V_2_addr_1_reg_1598_pp2_iter1_reg <= param_V_2_addr_1_reg_1598;
        param_V_3_addr_1_reg_1609_pp2_iter1_reg <= param_V_3_addr_1_reg_1609;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond3_reg_1562_pp2_iter2_reg <= exitcond3_reg_1562_pp2_iter1_reg;
        param_V_0_addr_1_reg_1576_pp2_iter2_reg <= param_V_0_addr_1_reg_1576_pp2_iter1_reg;
        param_V_1_addr_1_reg_1587_pp2_iter2_reg <= param_V_1_addr_1_reg_1587_pp2_iter1_reg;
        param_V_2_addr_1_reg_1598_pp2_iter2_reg <= param_V_2_addr_1_reg_1598_pp2_iter1_reg;
        param_V_3_addr_1_reg_1609_pp2_iter2_reg <= param_V_3_addr_1_reg_1609_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1562 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grad_0_V_load_reg_1615 <= grad_0_V_q0;
        grad_1_V_load_reg_1620 <= grad_1_V_q0;
        grad_2_V_load_reg_1625 <= grad_2_V_q0;
        grad_3_V_load_reg_1630 <= grad_3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_996_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_reg_1514[5 : 0] <= i2_fu_1008_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_864_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i4_reg_1412[5 : 0] <= i4_fu_876_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_1366 <= i_1_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        i_5_reg_1666 <= i_5_fu_1301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        num_train <= ap_phi_mux_num_train_new_phi_fu_593_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        odd_even <= storemerge_reg_620;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Result_s_reg_1381 <= p_Result_s_fu_689_p3;
        tmp_6_reg_1387[6 : 2] <= tmp_6_fu_696_p3[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1403_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_12_1_reg_1485 <= {{p_Val2_10_1_fu_914_p2[43:12]}};
        p_Val2_12_2_reg_1490 <= {{p_Val2_10_2_fu_937_p2[43:12]}};
        p_Val2_12_3_reg_1495 <= {{p_Val2_10_3_fu_960_p2[43:12]}};
        p_Val2_2_reg_1480 <= {{p_Val2_s_fu_891_p2[43:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_1562_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        p_Val2_15_1_reg_1640[50 : 24] <= p_Val2_15_1_fu_1128_p2[50 : 24];
        p_Val2_15_2_reg_1645[50 : 24] <= p_Val2_15_2_fu_1137_p2[50 : 24];
        p_Val2_15_3_reg_1650[50 : 24] <= p_Val2_15_3_fu_1146_p2[50 : 24];
        p_Val2_5_reg_1635[50 : 24] <= p_Val2_5_fu_1119_p2[50 : 24];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1092_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        param_V_0_addr_1_reg_1576 <= i6_fu_1104_p1;
        param_V_1_addr_1_reg_1587 <= i6_fu_1104_p1;
        param_V_2_addr_1_reg_1598 <= i6_fu_1104_p1;
        param_V_3_addr_1_reg_1609 <= i6_fu_1104_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1403 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        param_V_0_load_reg_1440 <= param_V_0_q0;
        param_V_1_load_reg_1450 <= param_V_1_q0;
        param_V_2_load_reg_1460 <= param_V_2_q0;
        param_V_3_load_reg_1470 <= param_V_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_673_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_15_reg_1376 <= tmp_15_fu_685_p1;
        tmp_V_1_reg_1371 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_17_reg_1662 <= tmp_17_fu_1295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1505 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_21_1_reg_1547 <= {{p_Val2_9_1_fu_1039_p2[43:12]}};
        tmp_21_2_reg_1552 <= {{p_Val2_9_2_fu_1058_p2[43:12]}};
        tmp_21_3_reg_1557 <= {{p_Val2_9_3_fu_1077_p2[43:12]}};
        tmp_5_reg_1542 <= {{p_Val2_9_fu_1020_p2[43:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_fu_1295_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_38_reg_1671 <= tmp_38_fu_1307_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (tmp_17_reg_1662 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        tmp_V_5_reg_1697 <= tmp_V_5_fu_1337_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        training_label_V <= loc_V_fu_637_p1;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3)) | (~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_673_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((tmp_s_fu_673_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (odd_even == 1'd1))) begin
        Input_2_V_V_ap_ack = 1'b1;
    end else begin
        Input_2_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (odd_even == 1'd1))) begin
        Input_2_V_V_blk_n = Input_2_V_V_ap_vld;
    end else begin
        Input_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state9))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((tmp_17_reg_1662 == 1'd0)) begin
        if ((1'b1 == ap_condition_694)) begin
            Output_2_V_V = tmp_V_5_reg_1697;
        end else if ((1'b1 == ap_condition_689)) begin
            Output_2_V_V = tmp_V_4_fu_1329_p3;
        end else begin
            Output_2_V_V = 'bx;
        end
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_01001) & (tmp_17_reg_1662 == 1'd0) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage1_01001) & (tmp_17_reg_1662 == 1'd0) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_17_reg_1662 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((tmp_17_reg_1662 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond2_fu_864_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_996_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1092_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_17_fu_1295_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_8_fu_1259_p2 == 1'd0)) begin
            ap_phi_mux_epoch_loc_phi_fu_603_p4 = epoch;
        end else if ((tmp_8_fu_1259_p2 == 1'd1)) begin
            ap_phi_mux_epoch_loc_phi_fu_603_p4 = tmp_14_fu_1270_p2;
        end else begin
            ap_phi_mux_epoch_loc_phi_fu_603_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_epoch_loc_phi_fu_603_p4 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_17_reg_1662 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i7_phi_fu_613_p4 = i_5_reg_1666;
    end else begin
        ap_phi_mux_i7_phi_fu_613_p4 = i7_reg_609;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_8_fu_1259_p2 == 1'd0)) begin
            ap_phi_mux_num_train_new_phi_fu_593_p4 = tmp_7_fu_1252_p2;
        end else if ((tmp_8_fu_1259_p2 == 1'd1)) begin
            ap_phi_mux_num_train_new_phi_fu_593_p4 = 32'd0;
        end else begin
            ap_phi_mux_num_train_new_phi_fu_593_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_num_train_new_phi_fu_593_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        feature_V_0_address0 = i2_fu_1008_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_V_0_address0 = i4_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        feature_V_0_address0 = newIndex_cast_fu_856_p1;
    end else begin
        feature_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        feature_V_0_ce0 = 1'b1;
    end else begin
        feature_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_20_fu_719_p1 == 2'd0) & (tmp_3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        feature_V_0_we0 = 1'b1;
    end else begin
        feature_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        feature_V_1_address0 = i2_fu_1008_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_V_1_address0 = i4_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        feature_V_1_address0 = newIndex_cast_fu_856_p1;
    end else begin
        feature_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        feature_V_1_ce0 = 1'b1;
    end else begin
        feature_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_20_fu_719_p1 == 2'd1) & (tmp_3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        feature_V_1_we0 = 1'b1;
    end else begin
        feature_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        feature_V_2_address0 = i2_fu_1008_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_V_2_address0 = i4_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        feature_V_2_address0 = newIndex_cast_fu_856_p1;
    end else begin
        feature_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        feature_V_2_ce0 = 1'b1;
    end else begin
        feature_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_20_fu_719_p1 == 2'd2) & (tmp_3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        feature_V_2_we0 = 1'b1;
    end else begin
        feature_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        feature_V_3_address0 = i2_fu_1008_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_V_3_address0 = i4_reg_1412;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        feature_V_3_address0 = newIndex_cast_fu_856_p1;
    end else begin
        feature_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        feature_V_3_ce0 = 1'b1;
    end else begin
        feature_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_20_fu_719_p1 == 2'd3) & (tmp_3_fu_703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        feature_V_3_we0 = 1'b1;
    end else begin
        feature_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grad_0_V_address0 = i6_fu_1104_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_0_V_address0 = i2_reg_1514_pp1_iter1_reg;
    end else begin
        grad_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        grad_0_V_ce0 = 1'b1;
    end else begin
        grad_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_1505_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_0_V_we0 = 1'b1;
    end else begin
        grad_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grad_1_V_address0 = i6_fu_1104_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_1_V_address0 = i2_reg_1514_pp1_iter1_reg;
    end else begin
        grad_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        grad_1_V_ce0 = 1'b1;
    end else begin
        grad_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_1505_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_1_V_we0 = 1'b1;
    end else begin
        grad_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grad_2_V_address0 = i6_fu_1104_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_2_V_address0 = i2_reg_1514_pp1_iter1_reg;
    end else begin
        grad_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        grad_2_V_ce0 = 1'b1;
    end else begin
        grad_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_1505_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_2_V_we0 = 1'b1;
    end else begin
        grad_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grad_3_V_address0 = i6_fu_1104_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_3_V_address0 = i2_reg_1514_pp1_iter1_reg;
    end else begin
        grad_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        grad_3_V_ce0 = 1'b1;
    end else begin
        grad_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_1505_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grad_3_V_we0 = 1'b1;
    end else begin
        grad_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        param_V_0_address0 = param_V_0_addr_1_reg_1576_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        param_V_0_address0 = i4_fu_876_p1;
    end else begin
        param_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        param_V_0_address1 = newIndex1_cast_fu_1321_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_0_address1 = param_V_0_addr_1_reg_1576_pp2_iter2_reg;
    end else begin
        param_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        param_V_0_ce0 = 1'b1;
    end else begin
        param_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        param_V_0_ce1 = 1'b1;
    end else begin
        param_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1562_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_0_we1 = 1'b1;
    end else begin
        param_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        param_V_1_address0 = param_V_1_addr_1_reg_1587_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        param_V_1_address0 = i4_fu_876_p1;
    end else begin
        param_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        param_V_1_address1 = newIndex1_cast_fu_1321_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_1_address1 = param_V_1_addr_1_reg_1587_pp2_iter2_reg;
    end else begin
        param_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        param_V_1_ce0 = 1'b1;
    end else begin
        param_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        param_V_1_ce1 = 1'b1;
    end else begin
        param_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1562_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_1_we1 = 1'b1;
    end else begin
        param_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        param_V_2_address0 = param_V_2_addr_1_reg_1598_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        param_V_2_address0 = i4_fu_876_p1;
    end else begin
        param_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        param_V_2_address1 = newIndex1_cast_fu_1321_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_2_address1 = param_V_2_addr_1_reg_1598_pp2_iter2_reg;
    end else begin
        param_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        param_V_2_ce0 = 1'b1;
    end else begin
        param_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        param_V_2_ce1 = 1'b1;
    end else begin
        param_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1562_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_2_we1 = 1'b1;
    end else begin
        param_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        param_V_3_address0 = param_V_3_addr_1_reg_1609_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        param_V_3_address0 = i4_fu_876_p1;
    end else begin
        param_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        param_V_3_address1 = newIndex1_cast_fu_1321_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_3_address1 = param_V_3_addr_1_reg_1609_pp2_iter2_reg;
    end else begin
        param_V_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        param_V_3_ce0 = 1'b1;
    end else begin
        param_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        param_V_3_ce1 = 1'b1;
    end else begin
        param_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_1562_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        param_V_3_we1 = 1'b1;
    end else begin
        param_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (odd_even == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (odd_even == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_673_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_673_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_3_fu_703_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_864_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_864_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond1_fu_996_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond1_fu_996_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond3_fu_1092_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond3_fu_1092_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (tmp_16_fu_1283_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_17_fu_1295_p2 == 1'd1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_17_fu_1295_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Hi_assign_fu_736_p2 = (6'd15 | Lo_assign_fu_728_p3);

assign Lo_assign_fu_728_p3 = {{tmp_20_fu_719_p1}, {4'd0}};

assign OP1_V_cast_fu_669_p1 = $signed(scale_V_fu_663_p2);

assign Output_1_V_V = p_Val2_7_reg_544;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage1_11001 = ((1'b1 == ap_block_state20_io) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage1_subdone = ((1'b1 == ap_block_state20_io) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((1'b0 == Input_2_V_V_ap_vld) & (odd_even == 1'd1)) | ((odd_even == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)));
end

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((tmp_s_fu_673_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state20_io = ((tmp_17_reg_1662 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0));
end

assign ap_block_state20_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_io = ((tmp_17_reg_1662 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0));
end

assign ap_block_state21_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_689 = ((1'b0 == ap_block_pp3_stage1_01001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1));
end

always @ (*) begin
    ap_condition_694 = ((1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign exitcond1_fu_996_p2 = ((i3_reg_568 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond2_fu_864_p2 = ((i1_reg_557 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond3_fu_1092_p2 = ((i5_reg_579 == 6'd32) ? 1'b1 : 1'b0);

assign i2_fu_1008_p1 = i3_reg_568;

assign i4_fu_876_p1 = i1_reg_557;

assign i6_fu_1104_p1 = i5_reg_579;

assign i_1_fu_679_p2 = (i_reg_522 + 6'd1);

assign i_2_fu_1002_p2 = (i3_reg_568 + 6'd1);

assign i_3_fu_870_p2 = (i1_reg_557 + 6'd1);

assign i_4_fu_1098_p2 = (i5_reg_579 + 6'd1);

assign i_5_fu_1301_p2 = (ap_phi_mux_i7_phi_fu_613_p4 + 7'd1);

assign j_1_fu_709_p2 = (j_reg_533 + 3'd1);

assign loc_V_1_fu_838_p1 = p_Result_5_fu_832_p2[15:0];

assign loc_V_fu_637_p1 = Input_1_V_V[7:0];

assign newIndex1_cast_fu_1321_p1 = newIndex1_fu_1311_p4;

assign newIndex1_fu_1311_p4 = {{ap_phi_mux_i7_phi_fu_613_p4[5:1]}};

assign newIndex_cast_fu_856_p1 = newIndex_fu_846_p4;

assign newIndex_fu_846_p4 = {{tmp_13_fu_723_p2[6:2]}};

assign p_Result_5_fu_832_p2 = (tmp_35_fu_826_p2 & tmp_34_fu_820_p2);

assign p_Result_s_fu_689_p3 = {{Input_1_V_V}, {tmp_V_1_reg_1371}};

assign p_Val2_10_1_fu_914_p0 = param_V_1_load_reg_1450;

assign p_Val2_10_1_fu_914_p1 = feature_V_1_q0;

assign p_Val2_10_1_fu_914_p2 = ($signed(p_Val2_10_1_fu_914_p0) * $signed(p_Val2_10_1_fu_914_p1));

assign p_Val2_10_2_fu_937_p0 = param_V_2_load_reg_1460;

assign p_Val2_10_2_fu_937_p1 = feature_V_2_q0;

assign p_Val2_10_2_fu_937_p2 = ($signed(p_Val2_10_2_fu_937_p0) * $signed(p_Val2_10_2_fu_937_p1));

assign p_Val2_10_3_fu_960_p0 = param_V_3_load_reg_1470;

assign p_Val2_10_3_fu_960_p1 = feature_V_3_q0;

assign p_Val2_10_3_fu_960_p2 = ($signed(p_Val2_10_3_fu_960_p0) * $signed(p_Val2_10_3_fu_960_p1));

assign p_Val2_13_3_fu_990_p2 = (p_Val2_7_reg_544 + tmp_12_fu_984_p2);

assign p_Val2_15_1_fu_1128_p0 = grad_1_V_load_reg_1620;

assign p_Val2_15_1_fu_1128_p2 = ($signed(p_Val2_15_1_fu_1128_p0) * $signed(-51'h53000000));

assign p_Val2_15_2_fu_1137_p0 = grad_2_V_load_reg_1625;

assign p_Val2_15_2_fu_1137_p2 = ($signed(p_Val2_15_2_fu_1137_p0) * $signed(-51'h53000000));

assign p_Val2_15_3_fu_1146_p0 = grad_3_V_load_reg_1630;

assign p_Val2_15_3_fu_1146_p2 = ($signed(p_Val2_15_3_fu_1146_p0) * $signed(-51'h53000000));

assign p_Val2_16_1_fu_1184_p2 = (p_Val2_15_1_reg_1640 + tmp_35_1_fu_1176_p3);

assign p_Val2_16_2_fu_1208_p2 = (p_Val2_15_2_reg_1645 + tmp_35_2_fu_1200_p3);

assign p_Val2_16_3_fu_1232_p2 = (p_Val2_15_3_reg_1650 + tmp_35_3_fu_1224_p3);

assign p_Val2_5_fu_1119_p0 = grad_0_V_load_reg_1615;

assign p_Val2_5_fu_1119_p2 = ($signed(p_Val2_5_fu_1119_p0) * $signed(-51'h53000000));

assign p_Val2_6_fu_1160_p2 = (p_Val2_5_reg_1635 + tmp_10_fu_1152_p3);

assign p_Val2_9_1_fu_1039_p0 = OP1_V_cast_reg_1354;

assign p_Val2_9_1_fu_1039_p1 = feature_V_1_q0;

assign p_Val2_9_1_fu_1039_p2 = ($signed(p_Val2_9_1_fu_1039_p0) * $signed(p_Val2_9_1_fu_1039_p1));

assign p_Val2_9_2_fu_1058_p0 = OP1_V_cast_reg_1354;

assign p_Val2_9_2_fu_1058_p1 = feature_V_2_q0;

assign p_Val2_9_2_fu_1058_p2 = ($signed(p_Val2_9_2_fu_1058_p0) * $signed(p_Val2_9_2_fu_1058_p1));

assign p_Val2_9_3_fu_1077_p0 = OP1_V_cast_reg_1354;

assign p_Val2_9_3_fu_1077_p1 = feature_V_3_q0;

assign p_Val2_9_3_fu_1077_p2 = ($signed(p_Val2_9_3_fu_1077_p0) * $signed(p_Val2_9_3_fu_1077_p1));

assign p_Val2_9_fu_1020_p0 = OP1_V_cast_reg_1354;

assign p_Val2_9_fu_1020_p1 = feature_V_0_q0;

assign p_Val2_9_fu_1020_p2 = ($signed(p_Val2_9_fu_1020_p0) * $signed(p_Val2_9_fu_1020_p1));

assign p_Val2_s_fu_891_p0 = param_V_0_load_reg_1440;

assign p_Val2_s_fu_891_p1 = feature_V_0_q0;

assign p_Val2_s_fu_891_p2 = ($signed(p_Val2_s_fu_891_p0) * $signed(p_Val2_s_fu_891_p1));

assign param_V_0_d1 = {{p_Val2_6_fu_1160_p2[50:19]}};

assign param_V_1_d1 = {{p_Val2_16_1_fu_1184_p2[50:19]}};

assign param_V_2_d1 = {{p_Val2_16_2_fu_1208_p2[50:19]}};

assign param_V_3_d1 = {{p_Val2_16_3_fu_1232_p2[50:19]}};

assign scale_V_fu_663_p2 = (Input_2_V_V - tmp_9_cast_fu_659_p1);

assign tmp1_fu_976_p2 = (p_Val2_2_reg_1480 + p_Val2_12_1_reg_1485);

assign tmp2_fu_980_p2 = (p_Val2_12_2_reg_1490 + p_Val2_12_3_reg_1495);

assign tmp_10_fu_1152_p3 = {{param_V_0_q0}, {19'd0}};

assign tmp_12_cast_fu_715_p1 = j_reg_533;

assign tmp_12_fu_984_p2 = (tmp2_fu_980_p2 + tmp1_fu_976_p2);

assign tmp_13_fu_723_p2 = (tmp_6_reg_1387 + tmp_12_cast_fu_715_p1);

assign tmp_14_fu_1270_p2 = (epoch + 32'd1);

assign tmp_15_fu_685_p1 = i_reg_522[4:0];

assign tmp_16_fu_1283_p2 = ((ap_phi_mux_epoch_loc_phi_fu_603_p4 == 32'd5) ? 1'b1 : 1'b0);

assign tmp_17_fu_1295_p2 = ((ap_phi_mux_i7_phi_fu_613_p4 == 7'd64) ? 1'b1 : 1'b0);

assign tmp_20_fu_719_p1 = j_reg_533[1:0];

assign tmp_21_fu_742_p2 = ((Lo_assign_fu_728_p3 > Hi_assign_fu_736_p2) ? 1'b1 : 1'b0);

assign tmp_22_fu_748_p1 = Lo_assign_fu_728_p3;

assign tmp_23_fu_752_p1 = Hi_assign_fu_736_p2;

integer ap_tvar_int_0;

always @ (p_Result_s_reg_1381) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            tmp_24_fu_756_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_24_fu_756_p4[ap_tvar_int_0] = p_Result_s_reg_1381[63 - ap_tvar_int_0];
        end
    end
end

assign tmp_25_fu_765_p2 = (tmp_22_fu_748_p1 - tmp_23_fu_752_p1);

assign tmp_26_fu_771_p2 = (tmp_22_fu_748_p1 ^ 7'd63);

assign tmp_27_fu_777_p2 = (tmp_23_fu_752_p1 - tmp_22_fu_748_p1);

assign tmp_28_fu_783_p3 = ((tmp_21_fu_742_p2[0:0] === 1'b1) ? tmp_25_fu_765_p2 : tmp_27_fu_777_p2);

assign tmp_29_fu_791_p3 = ((tmp_21_fu_742_p2[0:0] === 1'b1) ? tmp_24_fu_756_p4 : p_Result_s_reg_1381);

assign tmp_30_fu_798_p3 = ((tmp_21_fu_742_p2[0:0] === 1'b1) ? tmp_26_fu_771_p2 : tmp_22_fu_748_p1);

assign tmp_31_fu_806_p2 = (7'd63 - tmp_28_fu_783_p3);

assign tmp_32_fu_812_p1 = tmp_30_fu_798_p3;

assign tmp_33_fu_816_p1 = tmp_31_fu_806_p2;

assign tmp_34_fu_820_p2 = tmp_29_fu_791_p3 >> tmp_32_fu_812_p1;

assign tmp_35_1_fu_1176_p3 = {{param_V_1_q0}, {19'd0}};

assign tmp_35_2_fu_1200_p3 = {{param_V_2_q0}, {19'd0}};

assign tmp_35_3_fu_1224_p3 = {{param_V_3_q0}, {19'd0}};

assign tmp_35_fu_826_p2 = 64'd18446744073709551615 >> tmp_33_fu_816_p1;

assign tmp_38_fu_1307_p1 = ap_phi_mux_i7_phi_fu_613_p4[0:0];

assign tmp_3_fu_703_p2 = ((j_reg_533 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_6_fu_696_p3 = {{tmp_15_reg_1376}, {2'd0}};

assign tmp_7_fu_1252_p2 = (num_train + 32'd1);

assign tmp_8_fu_1259_p2 = ((tmp_7_fu_1252_p2 == 32'd4500) ? 1'b1 : 1'b0);

assign tmp_9_cast_fu_659_p1 = tmp_9_fu_651_p3;

assign tmp_9_fu_651_p3 = {{training_label_V}, {19'd0}};

assign tmp_V_4_fu_1329_p3 = ((tmp_38_reg_1671[0:0] === 1'b1) ? param_V_2_q1 : param_V_0_q1);

assign tmp_V_5_fu_1337_p3 = ((tmp_38_reg_1671[0:0] === 1'b1) ? param_V_3_q1 : param_V_1_q1);

assign tmp_s_fu_673_p2 = ((i_reg_522 == 6'd32) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_6_reg_1387[1:0] <= 2'b00;
    i4_reg_1412[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i2_reg_1514[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    i2_reg_1514_pp1_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    p_Val2_5_reg_1635[23:0] <= 24'b000000000000000000000000;
    p_Val2_15_1_reg_1640[23:0] <= 24'b000000000000000000000000;
    p_Val2_15_2_reg_1645[23:0] <= 24'b000000000000000000000000;
    p_Val2_15_3_reg_1650[23:0] <= 24'b000000000000000000000000;
end

endmodule //dotProduct_7
