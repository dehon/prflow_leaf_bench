// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tensor_weight_y1,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.345500,HLS_SYN_LAT=2237445,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=54,HLS_SYN_FF=796,HLS_SYN_LUT=1286,HLS_VERSION=2018_2}" *)

module tensor_weight_y1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state11 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] exitcond_flatten_fu_239_p2;
wire   [0:0] tmp_1_mid2_fu_277_p3;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_859;
reg   [0:0] tmp_1_mid2_reg_873;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg    Output_1_V_V_blk_n;
reg   [0:0] tmp_3_mid2_reg_884;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] tmp_3_mid2_reg_884_pp0_iter1_reg;
reg   [18:0] indvar_flatten_reg_166;
reg   [8:0] r_reg_177;
reg   [10:0] col_assign_reg_188;
reg    ap_predicate_op51_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage0_11001;
wire   [18:0] indvar_flatten_next_fu_245_p2;
reg   [18:0] indvar_flatten_next_reg_863;
wire   [10:0] col_assign_mid2_fu_257_p3;
reg   [10:0] col_assign_mid2_reg_868;
wire   [0:0] or_cond_mid2_fu_307_p3;
reg   [0:0] or_cond_mid2_reg_877;
wire   [0:0] tmp_3_mid2_fu_327_p3;
wire   [8:0] r_mid2_fu_335_p3;
reg   [8:0] r_mid2_reg_888;
reg   [9:0] buf_val_1_val_V_add_reg_893;
reg   [9:0] buf_val_2_val_V_add_reg_898;
reg   [31:0] tmp_V_5_reg_903;
reg   [47:0] tmp_6_reg_908;
reg    ap_predicate_op60_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage1_11001;
reg   [47:0] tmp_9_reg_913;
reg   [31:0] tmp_V_6_reg_918;
reg   [47:0] tmp_10_reg_923;
reg   [47:0] tmp_11_reg_928;
reg   [47:0] tmp_23_reg_933;
reg   [31:0] tmp_V_7_reg_938;
reg    ap_predicate_op75_read_state4;
reg    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage2_11001;
reg   [47:0] tmp_24_reg_943;
reg   [31:0] tmp_V_8_reg_948;
reg    ap_predicate_op88_read_state5;
reg    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage3_11001;
reg   [47:0] tmp_25_reg_953;
reg   [47:0] acc_val_1_V_reg_958;
reg    ap_predicate_op101_read_state6;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_predicate_op128_write_state6;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage4_11001;
reg   [47:0] tmp_14_reg_963;
reg   [15:0] tmp_15_reg_968;
wire   [10:0] c_fu_754_p2;
reg   [10:0] c_reg_973;
wire   [47:0] p_Val2_7_fu_803_p3;
reg   [47:0] p_Val2_7_reg_978;
reg   [31:0] loc_V_2_reg_984;
reg   [15:0] tmp_17_reg_989;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage3_subdone;
reg   [9:0] buf_val_1_val_V_address0;
reg    buf_val_1_val_V_ce0;
reg    buf_val_1_val_V_we0;
wire   [143:0] buf_val_1_val_V_q0;
reg   [9:0] buf_val_2_val_V_address0;
reg    buf_val_2_val_V_ce0;
reg    buf_val_2_val_V_we0;
wire   [143:0] buf_val_2_val_V_q0;
reg   [18:0] ap_phi_mux_indvar_flatten_phi_fu_170_p4;
reg   [8:0] ap_phi_mux_r_phi_fu_181_p4;
reg   [10:0] ap_phi_mux_col_assign_phi_fu_192_p4;
reg   [143:0] ap_phi_mux_tmp_val_V_3_phi_fu_203_p4;
wire   [143:0] tmp_val_V_fu_607_p6;
wire   [63:0] tmp_7_fu_343_p1;
wire   [31:0] loc_V_fu_739_p1;
reg    ap_block_pp0_stage4_01001;
wire   [31:0] loc_V_1_fu_820_p3;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
wire   [31:0] loc_V_3_fu_838_p1;
reg    ap_block_pp0_stage2_01001;
wire   [31:0] loc_V_4_fu_851_p3;
reg    ap_block_pp0_stage3_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [7:0] tmp_2_fu_217_p4;
wire   [0:0] icmp_fu_227_p2;
wire   [0:0] tmp_1_fu_211_p2;
wire   [0:0] exitcond_fu_251_p2;
wire   [8:0] r_s_fu_265_p2;
wire   [0:0] tmp_1_mid1_fu_271_p2;
wire   [7:0] tmp_3_fu_285_p4;
wire   [0:0] icmp1_fu_295_p2;
wire   [0:0] or_cond_mid1_fu_301_p2;
wire   [0:0] or_cond_fu_233_p2;
wire   [0:0] tmp_3_mid1_fu_315_p2;
wire   [0:0] tmp_s_fu_321_p2;
wire   [47:0] tmp_5_fu_349_p1;
wire  signed [47:0] p_Val2_s_fu_381_p1;
wire   [65:0] p_Val2_s_fu_381_p2;
wire   [47:0] tmp_8_fu_363_p1;
wire  signed [47:0] p_Val2_36_1_fu_411_p1;
wire   [65:0] p_Val2_36_1_fu_411_p2;
wire   [46:0] tmp_16_fu_387_p4;
wire   [65:0] tmp_fu_421_p3;
wire  signed [66:0] tmp_19_1_fu_429_p1;
wire  signed [79:0] p_Val2_36_1_cast_fu_417_p1;
wire   [80:0] tmp_19_1_cast3_fu_433_p1;
wire   [80:0] tmp_204_1_fu_437_p1;
wire   [80:0] p_Val2_37_1_fu_441_p2;
wire  signed [47:0] p_Val2_36_0_1_fu_470_p1;
wire   [65:0] p_Val2_36_0_1_fu_470_p2;
wire  signed [47:0] p_Val2_36_1_1_fu_489_p1;
wire   [65:0] p_Val2_36_1_1_fu_489_p2;
wire   [46:0] tmp_18_fu_476_p4;
wire   [65:0] tmp_20_fu_499_p3;
wire  signed [66:0] tmp_19_1_1_fu_507_p1;
wire  signed [79:0] p_Val2_36_1_1_cast_fu_495_p1;
wire   [80:0] tmp_19_1_1_cast5_fu_511_p1;
wire   [80:0] tmp_204_1_1_fu_515_p1;
wire   [80:0] p_Val2_37_1_1_fu_519_p2;
wire  signed [47:0] p_Val2_36_0_2_fu_538_p1;
wire   [65:0] p_Val2_36_0_2_fu_538_p2;
wire  signed [47:0] p_Val2_36_1_2_fu_557_p1;
wire   [65:0] p_Val2_36_1_2_fu_557_p2;
wire   [46:0] tmp_19_fu_544_p4;
wire   [65:0] tmp_21_fu_567_p3;
wire  signed [66:0] tmp_19_1_2_fu_575_p1;
wire  signed [79:0] p_Val2_36_1_2_cast_fu_563_p1;
wire   [80:0] tmp_19_1_2_cast7_fu_579_p1;
wire   [80:0] tmp_204_1_2_fu_583_p1;
wire   [80:0] p_Val2_37_1_2_fu_587_p2;
wire   [15:0] tmp_12_fu_603_p1;
wire   [47:0] tmp_22_fu_618_p1;
wire  signed [47:0] p_Val2_36_2_fu_626_p1;
wire   [65:0] p_Val2_36_2_fu_626_p2;
wire   [66:0] tmp_19_2_fu_636_p3;
wire  signed [79:0] p_Val2_36_2_cast_fu_632_p1;
wire   [80:0] tmp_19_2_cast9_fu_643_p1;
wire   [80:0] tmp_204_2_fu_647_p1;
wire   [80:0] p_Val2_37_2_fu_651_p2;
wire   [47:0] tmp_13_fu_667_p4;
wire  signed [47:0] p_Val2_36_2_1_fu_681_p1;
wire   [65:0] p_Val2_36_2_1_fu_681_p2;
wire   [66:0] tmp_19_2_1_fu_691_p3;
wire  signed [79:0] p_Val2_36_2_1_cast_fu_687_p1;
wire   [80:0] tmp_19_2_1_cast_fu_698_p1;
wire   [80:0] tmp_204_2_1_fu_702_p1;
wire   [80:0] p_Val2_37_2_1_fu_706_p2;
wire   [47:0] acc_val_0_V_fu_657_p4;
wire   [47:0] p_Val2_s_13_fu_732_p3;
wire  signed [47:0] p_Val2_36_2_2_fu_762_p1;
wire   [65:0] p_Val2_36_2_2_fu_762_p2;
wire   [66:0] tmp_19_2_2_fu_772_p3;
wire  signed [79:0] p_Val2_36_2_2_cast_fu_768_p1;
wire   [80:0] tmp_19_2_2_cast_fu_779_p1;
wire   [80:0] tmp_204_2_2_fu_783_p1;
wire   [80:0] p_Val2_37_2_2_fu_787_p2;
wire   [47:0] acc_val_2_V_fu_793_p4;
wire   [47:0] p_Val2_6_fu_810_p3;
wire   [15:0] tmp_27_fu_816_p1;
wire    ap_CS_fsm_state11;
reg   [6:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

tensor_weight_y1_bkb #(
    .DataWidth( 144 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_1_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_1_val_V_address0),
    .ce0(buf_val_1_val_V_ce0),
    .we0(buf_val_1_val_V_we0),
    .d0(buf_val_2_val_V_q0),
    .q0(buf_val_1_val_V_q0)
);

tensor_weight_y1_bkb #(
    .DataWidth( 144 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_2_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_2_val_V_address0),
    .ce0(buf_val_2_val_V_ce0),
    .we0(buf_val_2_val_V_we0),
    .d0(ap_phi_mux_tmp_val_V_3_phi_fu_203_p4),
    .q0(buf_val_2_val_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op128_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_3_mid2_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_predicate_op128_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack)) | ((tmp_3_mid2_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_reg_188 <= c_reg_973;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_assign_reg_188 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_166 <= indvar_flatten_next_reg_863;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_166 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_177 <= r_mid2_reg_888;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_reg_177 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_mid2_reg_877 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        acc_val_1_V_reg_958 <= {{p_Val2_37_2_1_fu_706_p2[66:19]}};
        tmp_14_reg_963 <= {{ap_phi_mux_tmp_val_V_3_phi_fu_203_p4[143:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_val_V_add_reg_893 <= tmp_7_fu_343_p1;
        buf_val_2_val_V_add_reg_898 <= tmp_7_fu_343_p1;
        col_assign_mid2_reg_868 <= col_assign_mid2_fu_257_p3;
        or_cond_mid2_reg_877 <= or_cond_mid2_fu_307_p3;
        tmp_1_mid2_reg_873 <= tmp_1_mid2_fu_277_p3;
        tmp_3_mid2_reg_884 <= tmp_3_mid2_fu_327_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c_reg_973 <= c_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_859 <= exitcond_flatten_fu_239_p2;
        p_Val2_7_reg_978 <= p_Val2_7_fu_803_p3;
        tmp_3_mid2_reg_884_pp0_iter1_reg <= tmp_3_mid2_reg_884;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next_reg_863 <= indvar_flatten_next_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_mid2_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loc_V_2_reg_984 <= {{p_Val2_6_fu_810_p3[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_239_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_mid2_reg_888 <= r_mid2_fu_335_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_mid2_reg_877 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_10_reg_923 <= {{buf_val_1_val_V_q0[143:96]}};
        tmp_11_reg_928 <= {{buf_val_2_val_V_q0[143:96]}};
        tmp_23_reg_933 <= {{p_Val2_37_1_fu_441_p2[66:19]}};
        tmp_6_reg_908 <= {{buf_val_1_val_V_q0[95:48]}};
        tmp_9_reg_913 <= {{buf_val_2_val_V_q0[95:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op128_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_15_reg_968 <= {{p_Val2_s_13_fu_732_p3[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_17_reg_989 <= {{p_Val2_7_reg_978[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_mid2_reg_877 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_24_reg_943 <= {{p_Val2_37_1_1_fu_519_p2[66:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_mid2_reg_877 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_25_reg_953 <= {{p_Val2_37_1_2_fu_587_p2[66:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_5_reg_903 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op60_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_V_6_reg_918 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op75_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_V_7_reg_938 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op88_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_V_8_reg_948 <= Input_1_V_V;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op88_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op75_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op60_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op101_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_1_mid2_fu_277_p3 == 1'd1) & (exitcond_flatten_fu_239_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        Output_1_V_V = loc_V_4_fu_851_p3;
    end else if (((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        Output_1_V_V = loc_V_3_fu_838_p1;
    end else if (((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        Output_1_V_V = loc_V_2_reg_984;
    end else if (((tmp_3_mid2_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        Output_1_V_V = loc_V_1_fu_820_p3;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_predicate_op128_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Output_1_V_V = loc_V_fu_739_p1;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op128_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_3_mid2_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond_flatten_reg_859 == 1'd0) & (tmp_3_mid2_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((tmp_3_mid2_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_239_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_col_assign_phi_fu_192_p4 = c_reg_973;
    end else begin
        ap_phi_mux_col_assign_phi_fu_192_p4 = col_assign_reg_188;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_170_p4 = indvar_flatten_next_reg_863;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_170_p4 = indvar_flatten_reg_166;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_r_phi_fu_181_p4 = r_mid2_reg_888;
    end else begin
        ap_phi_mux_r_phi_fu_181_p4 = r_reg_177;
    end
end

always @ (*) begin
    if (((tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        ap_phi_mux_tmp_val_V_3_phi_fu_203_p4 = tmp_val_V_fu_607_p6;
    end else begin
        ap_phi_mux_tmp_val_V_3_phi_fu_203_p4 = 144'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            buf_val_1_val_V_address0 = buf_val_1_val_V_add_reg_893;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf_val_1_val_V_address0 = tmp_7_fu_343_p1;
        end else begin
            buf_val_1_val_V_address0 = 'bx;
        end
    end else begin
        buf_val_1_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_1_val_V_ce0 = 1'b1;
    end else begin
        buf_val_1_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_val_1_val_V_we0 = 1'b1;
    end else begin
        buf_val_1_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            buf_val_2_val_V_address0 = buf_val_2_val_V_add_reg_898;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf_val_2_val_V_address0 = tmp_7_fu_343_p1;
        end else begin
            buf_val_2_val_V_address0 = 'bx;
        end
    end else begin
        buf_val_2_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        buf_val_2_val_V_ce0 = 1'b1;
    end else begin
        buf_val_2_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_859 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_val_2_val_V_we0 = 1'b1;
    end else begin
        buf_val_2_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_239_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((exitcond_flatten_fu_239_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_val_0_V_fu_657_p4 = {{p_Val2_37_2_fu_651_p2[66:19]}};

assign acc_val_2_V_fu_793_p4 = {{p_Val2_37_2_2_fu_787_p2[66:19]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op60_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op60_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op60_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op75_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op75_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op75_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op88_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op88_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op88_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op101_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op101_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op101_read_state6 == 1'b1))));
end

always @ (*) begin
    ap_block_state10_io = ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op51_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op60_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op75_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op88_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_predicate_op128_write_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_predicate_op101_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_io = ((tmp_3_mid2_reg_884 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((tmp_3_mid2_reg_884_pp0_iter1_reg == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op101_read_state6 = ((tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_write_state6 = ((exitcond_flatten_reg_859 == 1'd0) & (tmp_3_mid2_reg_884 == 1'd0));
end

always @ (*) begin
    ap_predicate_op51_read_state2 = ((tmp_1_mid2_fu_277_p3 == 1'd1) & (exitcond_flatten_fu_239_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op60_read_state3 = ((tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0));
end

always @ (*) begin
    ap_predicate_op75_read_state4 = ((tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_read_state5 = ((tmp_1_mid2_reg_873 == 1'd1) & (exitcond_flatten_reg_859 == 1'd0));
end

assign c_fu_754_p2 = (col_assign_mid2_reg_868 + 11'd1);

assign col_assign_mid2_fu_257_p3 = ((exitcond_fu_251_p2[0:0] === 1'b1) ? 11'd0 : ap_phi_mux_col_assign_phi_fu_192_p4);

assign exitcond_flatten_fu_239_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_170_p4 == 19'd447488) ? 1'b1 : 1'b0);

assign exitcond_fu_251_p2 = ((ap_phi_mux_col_assign_phi_fu_192_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp1_fu_295_p2 = ((tmp_3_fu_285_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_227_p2 = ((tmp_2_fu_217_p4 != 8'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_245_p2 = (ap_phi_mux_indvar_flatten_phi_fu_170_p4 + 19'd1);

assign loc_V_1_fu_820_p3 = {{tmp_27_fu_816_p1}, {tmp_15_reg_968}};

assign loc_V_3_fu_838_p1 = p_Val2_7_reg_978[31:0];

assign loc_V_4_fu_851_p3 = {{16'd0}, {tmp_17_reg_989}};

assign loc_V_fu_739_p1 = p_Val2_s_13_fu_732_p3[31:0];

assign or_cond_fu_233_p2 = (tmp_1_fu_211_p2 & icmp_fu_227_p2);

assign or_cond_mid1_fu_301_p2 = (tmp_1_mid1_fu_271_p2 & icmp1_fu_295_p2);

assign or_cond_mid2_fu_307_p3 = ((exitcond_fu_251_p2[0:0] === 1'b1) ? or_cond_mid1_fu_301_p2 : or_cond_fu_233_p2);

assign p_Val2_36_0_1_fu_470_p1 = tmp_6_reg_908;

assign p_Val2_36_0_1_fu_470_p2 = ($signed({{1'b0}, {66'd170026}}) * $signed(p_Val2_36_0_1_fu_470_p1));

assign p_Val2_36_0_2_fu_538_p1 = tmp_10_reg_923;

assign p_Val2_36_0_2_fu_538_p2 = ($signed({{1'b0}, {66'd170026}}) * $signed(p_Val2_36_0_2_fu_538_p1));

assign p_Val2_36_1_1_cast_fu_495_p1 = $signed(p_Val2_36_1_1_fu_489_p2);

assign p_Val2_36_1_1_fu_489_p1 = tmp_9_reg_913;

assign p_Val2_36_1_1_fu_489_p2 = ($signed({{1'b0}, {66'd184182}}) * $signed(p_Val2_36_1_1_fu_489_p1));

assign p_Val2_36_1_2_cast_fu_563_p1 = $signed(p_Val2_36_1_2_fu_557_p2);

assign p_Val2_36_1_2_fu_557_p1 = tmp_11_reg_928;

assign p_Val2_36_1_2_fu_557_p2 = ($signed({{1'b0}, {66'd184182}}) * $signed(p_Val2_36_1_2_fu_557_p1));

assign p_Val2_36_1_cast_fu_417_p1 = $signed(p_Val2_36_1_fu_411_p2);

assign p_Val2_36_1_fu_411_p1 = tmp_8_fu_363_p1;

assign p_Val2_36_1_fu_411_p2 = ($signed({{1'b0}, {66'd184182}}) * $signed(p_Val2_36_1_fu_411_p1));

assign p_Val2_36_2_1_cast_fu_687_p1 = $signed(p_Val2_36_2_1_fu_681_p2);

assign p_Val2_36_2_1_fu_681_p1 = tmp_13_fu_667_p4;

assign p_Val2_36_2_1_fu_681_p2 = ($signed({{1'b0}, {66'd170026}}) * $signed(p_Val2_36_2_1_fu_681_p1));

assign p_Val2_36_2_2_cast_fu_768_p1 = $signed(p_Val2_36_2_2_fu_762_p2);

assign p_Val2_36_2_2_fu_762_p1 = tmp_14_reg_963;

assign p_Val2_36_2_2_fu_762_p2 = ($signed({{1'b0}, {66'd170026}}) * $signed(p_Val2_36_2_2_fu_762_p1));

assign p_Val2_36_2_cast_fu_632_p1 = $signed(p_Val2_36_2_fu_626_p2);

assign p_Val2_36_2_fu_626_p1 = tmp_22_fu_618_p1;

assign p_Val2_36_2_fu_626_p2 = ($signed({{1'b0}, {66'd170026}}) * $signed(p_Val2_36_2_fu_626_p1));

assign p_Val2_37_1_1_fu_519_p2 = (tmp_19_1_1_cast5_fu_511_p1 + tmp_204_1_1_fu_515_p1);

assign p_Val2_37_1_2_fu_587_p2 = (tmp_19_1_2_cast7_fu_579_p1 + tmp_204_1_2_fu_583_p1);

assign p_Val2_37_1_fu_441_p2 = (tmp_19_1_cast3_fu_433_p1 + tmp_204_1_fu_437_p1);

assign p_Val2_37_2_1_fu_706_p2 = (tmp_19_2_1_cast_fu_698_p1 + tmp_204_2_1_fu_702_p1);

assign p_Val2_37_2_2_fu_787_p2 = (tmp_19_2_2_cast_fu_779_p1 + tmp_204_2_2_fu_783_p1);

assign p_Val2_37_2_fu_651_p2 = (tmp_19_2_cast9_fu_643_p1 + tmp_204_2_fu_647_p1);

assign p_Val2_6_fu_810_p3 = ((or_cond_mid2_reg_877[0:0] === 1'b1) ? acc_val_1_V_reg_958 : 48'd0);

assign p_Val2_7_fu_803_p3 = ((or_cond_mid2_reg_877[0:0] === 1'b1) ? acc_val_2_V_fu_793_p4 : 48'd0);

assign p_Val2_s_13_fu_732_p3 = ((or_cond_mid2_reg_877[0:0] === 1'b1) ? acc_val_0_V_fu_657_p4 : 48'd0);

assign p_Val2_s_fu_381_p1 = tmp_5_fu_349_p1;

assign p_Val2_s_fu_381_p2 = ($signed({{1'b0}, {66'd170026}}) * $signed(p_Val2_s_fu_381_p1));

assign r_mid2_fu_335_p3 = ((exitcond_fu_251_p2[0:0] === 1'b1) ? r_s_fu_265_p2 : ap_phi_mux_r_phi_fu_181_p4);

assign r_s_fu_265_p2 = (9'd1 + ap_phi_mux_r_phi_fu_181_p4);

assign tmp_12_fu_603_p1 = Input_1_V_V[15:0];

assign tmp_13_fu_667_p4 = {{ap_phi_mux_tmp_val_V_3_phi_fu_203_p4[95:48]}};

assign tmp_16_fu_387_p4 = {{p_Val2_s_fu_381_p2[65:19]}};

assign tmp_18_fu_476_p4 = {{p_Val2_36_0_1_fu_470_p2[65:19]}};

assign tmp_19_1_1_cast5_fu_511_p1 = $unsigned(tmp_19_1_1_fu_507_p1);

assign tmp_19_1_1_fu_507_p1 = $signed(tmp_20_fu_499_p3);

assign tmp_19_1_2_cast7_fu_579_p1 = $unsigned(tmp_19_1_2_fu_575_p1);

assign tmp_19_1_2_fu_575_p1 = $signed(tmp_21_fu_567_p3);

assign tmp_19_1_cast3_fu_433_p1 = $unsigned(tmp_19_1_fu_429_p1);

assign tmp_19_1_fu_429_p1 = $signed(tmp_fu_421_p3);

assign tmp_19_2_1_cast_fu_698_p1 = tmp_19_2_1_fu_691_p3;

assign tmp_19_2_1_fu_691_p3 = {{tmp_24_reg_943}, {19'd0}};

assign tmp_19_2_2_cast_fu_779_p1 = tmp_19_2_2_fu_772_p3;

assign tmp_19_2_2_fu_772_p3 = {{tmp_25_reg_953}, {19'd0}};

assign tmp_19_2_cast9_fu_643_p1 = tmp_19_2_fu_636_p3;

assign tmp_19_2_fu_636_p3 = {{tmp_23_reg_933}, {19'd0}};

assign tmp_19_fu_544_p4 = {{p_Val2_36_0_2_fu_538_p2[65:19]}};

assign tmp_1_fu_211_p2 = ((ap_phi_mux_r_phi_fu_181_p4 < 9'd436) ? 1'b1 : 1'b0);

assign tmp_1_mid1_fu_271_p2 = ((r_s_fu_265_p2 < 9'd436) ? 1'b1 : 1'b0);

assign tmp_1_mid2_fu_277_p3 = ((exitcond_fu_251_p2[0:0] === 1'b1) ? tmp_1_mid1_fu_271_p2 : tmp_1_fu_211_p2);

assign tmp_204_1_1_fu_515_p1 = $unsigned(p_Val2_36_1_1_cast_fu_495_p1);

assign tmp_204_1_2_fu_583_p1 = $unsigned(p_Val2_36_1_2_cast_fu_563_p1);

assign tmp_204_1_fu_437_p1 = $unsigned(p_Val2_36_1_cast_fu_417_p1);

assign tmp_204_2_1_fu_702_p1 = $unsigned(p_Val2_36_2_1_cast_fu_687_p1);

assign tmp_204_2_2_fu_783_p1 = $unsigned(p_Val2_36_2_2_cast_fu_768_p1);

assign tmp_204_2_fu_647_p1 = $unsigned(p_Val2_36_2_cast_fu_632_p1);

assign tmp_20_fu_499_p3 = {{tmp_18_fu_476_p4}, {19'd0}};

assign tmp_21_fu_567_p3 = {{tmp_19_fu_544_p4}, {19'd0}};

assign tmp_22_fu_618_p1 = ap_phi_mux_tmp_val_V_3_phi_fu_203_p4[47:0];

assign tmp_27_fu_816_p1 = p_Val2_6_fu_810_p3[15:0];

assign tmp_2_fu_217_p4 = {{ap_phi_mux_r_phi_fu_181_p4[8:1]}};

assign tmp_3_fu_285_p4 = {{r_s_fu_265_p2[8:1]}};

assign tmp_3_mid1_fu_315_p2 = ((r_s_fu_265_p2 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_3_mid2_fu_327_p3 = ((exitcond_fu_251_p2[0:0] === 1'b1) ? tmp_3_mid1_fu_315_p2 : tmp_s_fu_321_p2);

assign tmp_5_fu_349_p1 = buf_val_1_val_V_q0[47:0];

assign tmp_7_fu_343_p1 = col_assign_mid2_fu_257_p3;

assign tmp_8_fu_363_p1 = buf_val_2_val_V_q0[47:0];

assign tmp_fu_421_p3 = {{tmp_16_fu_387_p4}, {19'd0}};

assign tmp_s_fu_321_p2 = ((ap_phi_mux_r_phi_fu_181_p4 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_val_V_fu_607_p6 = {{{{{tmp_12_fu_603_p1}, {tmp_V_8_reg_948}}, {tmp_V_7_reg_938}}, {tmp_V_6_reg_918}}, {tmp_V_5_reg_903}};

endmodule //tensor_weight_y1
