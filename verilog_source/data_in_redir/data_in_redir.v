// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_in_redir,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.629000,HLS_SYN_LAT=2323539,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=166,HLS_SYN_LUT=469,HLS_VERSION=2018_2}" *)

module data_in_redir (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] epoch;
reg   [10:0] label_local_V_0_address0;
reg    label_local_V_0_ce0;
reg    label_local_V_0_we0;
wire   [7:0] label_local_V_0_d0;
wire   [7:0] label_local_V_0_q0;
reg   [10:0] label_local_V_1_address0;
reg    label_local_V_1_ce0;
reg    label_local_V_1_we0;
wire   [7:0] label_local_V_1_d0;
wire   [7:0] label_local_V_1_q0;
reg   [10:0] label_local_V_2_address0;
reg    label_local_V_2_ce0;
reg    label_local_V_2_we0;
wire   [7:0] label_local_V_2_d0;
wire   [7:0] label_local_V_2_q0;
reg   [10:0] label_local_V_3_address0;
reg    label_local_V_3_ce0;
reg    label_local_V_3_we0;
wire   [7:0] label_local_V_3_d0;
wire   [7:0] label_local_V_3_q0;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_279_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_7_fu_291_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_2_fu_416_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_3_fu_428_p2;
wire    ap_CS_fsm_state10;
reg    Output_1_V_V_blk_n;
wire    ap_CS_fsm_state6;
reg    Output_2_V_V_blk_n;
reg   [31:0] epoch_load_reg_440;
wire   [0:0] tmp_4_fu_273_p2;
reg    ap_block_state2;
wire   [10:0] i_1_fu_285_p2;
wire   [10:0] i_2_fu_297_p2;
reg    ap_block_state3;
wire   [12:0] training_id_1_fu_355_p2;
reg   [12:0] training_id_1_reg_469;
wire    ap_CS_fsm_state5;
wire   [1:0] tmp_6_fu_361_p1;
reg   [1:0] tmp_6_reg_474;
wire   [0:0] exitcond_fu_349_p2;
wire   [31:0] tmp_V_1_fu_411_p1;
reg   [31:0] tmp_V_1_reg_499;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
wire   [7:0] i_3_fu_422_p2;
reg   [7:0] i_3_reg_507;
reg    ap_block_state7;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state7_io;
wire   [7:0] i_4_fu_434_p2;
reg   [7:0] i_4_reg_515;
reg    ap_block_state9;
reg    ap_block_state9_io;
reg   [10:0] i_reg_214;
reg   [10:0] i1_reg_225;
reg   [12:0] training_id_reg_236;
wire    ap_CS_fsm_state4;
reg   [7:0] i2_reg_247;
reg   [7:0] i3_reg_258;
wire   [63:0] i4_fu_308_p1;
wire   [63:0] newIndex1_fu_375_p1;
wire   [31:0] tmp_s_fu_383_p2;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
wire   [10:0] newIndex_fu_365_p4;
wire   [31:0] p_Val2_s_fu_397_p5;
wire   [7:0] p_Val2_s_fu_397_p6;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 epoch = 32'd0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1125 ),
    .AddressWidth( 11 ))
label_local_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_0_address0),
    .ce0(label_local_V_0_ce0),
    .we0(label_local_V_0_we0),
    .d0(label_local_V_0_d0),
    .q0(label_local_V_0_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1125 ),
    .AddressWidth( 11 ))
label_local_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_1_address0),
    .ce0(label_local_V_1_ce0),
    .we0(label_local_V_1_we0),
    .d0(label_local_V_1_d0),
    .q0(label_local_V_1_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1125 ),
    .AddressWidth( 11 ))
label_local_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_2_address0),
    .ce0(label_local_V_2_ce0),
    .we0(label_local_V_2_we0),
    .d0(label_local_V_2_d0),
    .q0(label_local_V_2_q0)
);

data_in_redir_labbkb #(
    .DataWidth( 8 ),
    .AddressRange( 1125 ),
    .AddressWidth( 11 ))
label_local_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_local_V_3_address0),
    .ce0(label_local_V_3_ce0),
    .we0(label_local_V_3_we0),
    .d0(label_local_V_3_d0),
    .q0(label_local_V_3_q0)
);

data_in_redir_muxfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
data_in_redir_muxfYi_U1(
    .din0(label_local_V_0_q0),
    .din1(label_local_V_1_q0),
    .din2(label_local_V_2_q0),
    .din3(label_local_V_3_q0),
    .din4(p_Val2_s_fu_397_p5),
    .dout(p_Val2_s_fu_397_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state6) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state8)) | (~((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (1'b1 == Output_1_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((1'b1 == ap_block_state9_io) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_3_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | (~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state7) & (tmp_2_fu_416_p2 == 1'd1)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state10)) | (~((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_3_fu_428_p2 == 1'd0) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state9)) | (~((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state7) & (1'b1 == Output_2_V_V_ap_ack) & (tmp_2_fu_416_p2 == 1'd1)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_279_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_reg_225 <= 11'd0;
    end else if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_reg_225 <= i_2_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        i2_reg_247 <= i_3_reg_507;
    end else if (((1'b1 == ap_CS_fsm_state6) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1))) begin
        i2_reg_247 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        i3_reg_258 <= i_4_reg_515;
    end else if ((~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state7) & (tmp_2_fu_416_p2 == 1'd1))) begin
        i3_reg_258 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_4_fu_273_p2 == 1'd1))) begin
        i_reg_214 <= 11'd0;
    end else if ((~((exitcond1_fu_279_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_214 <= i_1_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state9_io) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_428_p2 == 1'd1))) begin
        training_id_reg_236 <= training_id_1_reg_469;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        training_id_reg_236 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_349_p2 == 1'd1))) begin
        epoch <= tmp_s_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        epoch_load_reg_440 <= epoch;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state7))) begin
        i_3_reg_507 <= i_3_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state9_io) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state9))) begin
        i_4_reg_515 <= i_4_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_349_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_6_reg_474 <= tmp_6_fu_361_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1))) begin
        tmp_V_1_reg_499[7 : 0] <= tmp_V_1_fu_411_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_id_1_reg_469 <= training_id_1_fu_355_p2;
    end
end

always @ (*) begin
    if (((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond1_fu_279_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((1'b1 == ap_block_state9_io) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_3_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | ((tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((exitcond1_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)) | (~((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Output_1_V_V = Input_1_V_V;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Output_1_V_V = tmp_V_1_fu_411_p1;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | (~((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_2_fu_416_p2 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state10)) | (~((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_3_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Output_2_V_V = Input_1_V_V;
    end else if ((~((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state7) & (tmp_2_fu_416_p2 == 1'd1))) begin
        Output_2_V_V = tmp_V_1_reg_499;
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | (~((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_3_fu_428_p2 == 1'd0) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | (~((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7) & (tmp_2_fu_416_p2 == 1'd1)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_2_fu_416_p2 == 1'd1)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_349_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_349_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_0_address0 = newIndex1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_0_address0 = i4_fu_308_p1;
    end else begin
        label_local_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state3)))) begin
        label_local_V_0_ce0 = 1'b1;
    end else begin
        label_local_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        label_local_V_0_we0 = 1'b1;
    end else begin
        label_local_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_1_address0 = newIndex1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_1_address0 = i4_fu_308_p1;
    end else begin
        label_local_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state3)))) begin
        label_local_V_1_ce0 = 1'b1;
    end else begin
        label_local_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        label_local_V_1_we0 = 1'b1;
    end else begin
        label_local_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_2_address0 = newIndex1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_2_address0 = i4_fu_308_p1;
    end else begin
        label_local_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state3)))) begin
        label_local_V_2_ce0 = 1'b1;
    end else begin
        label_local_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        label_local_V_2_we0 = 1'b1;
    end else begin
        label_local_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        label_local_V_3_address0 = newIndex1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_local_V_3_address0 = i4_fu_308_p1;
    end else begin
        label_local_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (1'b1 == ap_CS_fsm_state3)))) begin
        label_local_V_3_ce0 = 1'b1;
    end else begin
        label_local_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        label_local_V_3_we0 = 1'b1;
    end else begin
        label_local_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_4_fu_273_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((tmp_4_fu_273_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((exitcond1_fu_279_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond1_fu_279_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond1_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_7_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_349_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state7) & (tmp_2_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((1'b1 == ap_block_state7_io) | ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_2_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'b1 == ap_block_state9_io) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state9) & (tmp_3_fu_428_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((1'b1 == ap_block_state9_io) | ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_3_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2 = ((exitcond1_fu_279_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state3 = ((tmp_7_fu_291_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state7 = ((tmp_2_fu_416_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state7_io = (((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (tmp_2_fu_416_p2 == 1'd1)) | ((tmp_2_fu_416_p2 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)));
end

always @ (*) begin
    ap_block_state9 = ((tmp_3_fu_428_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state9_io = ((tmp_3_fu_428_p2 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0));
end

assign exitcond1_fu_279_p2 = ((i_reg_214 == 11'd1947) ? 1'b1 : 1'b0);

assign exitcond_fu_349_p2 = ((training_id_reg_236 == 13'd4500) ? 1'b1 : 1'b0);

assign i4_fu_308_p1 = i1_reg_225;

assign i_1_fu_285_p2 = (i_reg_214 + 11'd1);

assign i_2_fu_297_p2 = (i1_reg_225 + 11'd1);

assign i_3_fu_422_p2 = (i2_reg_247 + 8'd1);

assign i_4_fu_434_p2 = (i3_reg_258 + 8'd1);

assign label_local_V_0_d0 = Input_1_V_V[7:0];

assign label_local_V_1_d0 = {{Input_1_V_V[15:8]}};

assign label_local_V_2_d0 = {{Input_1_V_V[23:16]}};

assign label_local_V_3_d0 = {{Input_1_V_V[31:24]}};

assign newIndex1_fu_375_p1 = newIndex_fu_365_p4;

assign newIndex_fu_365_p4 = {{training_id_reg_236[12:2]}};

assign p_Val2_s_fu_397_p5 = tmp_6_reg_474;

assign tmp_2_fu_416_p2 = ((i2_reg_247 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_3_fu_428_p2 = ((i3_reg_258 == 8'd128) ? 1'b1 : 1'b0);

assign tmp_4_fu_273_p2 = ((epoch == 32'd0) ? 1'b1 : 1'b0);

assign tmp_6_fu_361_p1 = training_id_reg_236[1:0];

assign tmp_7_fu_291_p2 = ((i1_reg_225 == 11'd1125) ? 1'b1 : 1'b0);

assign tmp_V_1_fu_411_p1 = p_Val2_s_fu_397_p6;

assign tmp_s_fu_383_p2 = (epoch_load_reg_440 + 32'd1);

assign training_id_1_fu_355_p2 = (training_id_reg_236 + 13'd1);

always @ (posedge ap_clk) begin
    tmp_V_1_reg_499[31:8] <= 24'b000000000000000000000000;
end

endmodule //data_in_redir
