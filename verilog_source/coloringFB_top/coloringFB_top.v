// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="coloringFB_top,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.611000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=255,HLS_SYN_LUT=3270,HLS_VERSION=2018_2}" *)

module coloringFB_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 72'd1;
parameter    ap_ST_fsm_state2 = 72'd2;
parameter    ap_ST_fsm_state3 = 72'd4;
parameter    ap_ST_fsm_state4 = 72'd8;
parameter    ap_ST_fsm_state5 = 72'd16;
parameter    ap_ST_fsm_state6 = 72'd32;
parameter    ap_ST_fsm_state7 = 72'd64;
parameter    ap_ST_fsm_state8 = 72'd128;
parameter    ap_ST_fsm_state9 = 72'd256;
parameter    ap_ST_fsm_state10 = 72'd512;
parameter    ap_ST_fsm_state11 = 72'd1024;
parameter    ap_ST_fsm_state12 = 72'd2048;
parameter    ap_ST_fsm_state13 = 72'd4096;
parameter    ap_ST_fsm_state14 = 72'd8192;
parameter    ap_ST_fsm_state15 = 72'd16384;
parameter    ap_ST_fsm_state16 = 72'd32768;
parameter    ap_ST_fsm_state17 = 72'd65536;
parameter    ap_ST_fsm_state18 = 72'd131072;
parameter    ap_ST_fsm_state19 = 72'd262144;
parameter    ap_ST_fsm_state20 = 72'd524288;
parameter    ap_ST_fsm_state21 = 72'd1048576;
parameter    ap_ST_fsm_state22 = 72'd2097152;
parameter    ap_ST_fsm_state23 = 72'd4194304;
parameter    ap_ST_fsm_state24 = 72'd8388608;
parameter    ap_ST_fsm_state25 = 72'd16777216;
parameter    ap_ST_fsm_state26 = 72'd33554432;
parameter    ap_ST_fsm_state27 = 72'd67108864;
parameter    ap_ST_fsm_state28 = 72'd134217728;
parameter    ap_ST_fsm_state29 = 72'd268435456;
parameter    ap_ST_fsm_state30 = 72'd536870912;
parameter    ap_ST_fsm_state31 = 72'd1073741824;
parameter    ap_ST_fsm_state32 = 72'd2147483648;
parameter    ap_ST_fsm_state33 = 72'd4294967296;
parameter    ap_ST_fsm_state34 = 72'd8589934592;
parameter    ap_ST_fsm_state35 = 72'd17179869184;
parameter    ap_ST_fsm_state36 = 72'd34359738368;
parameter    ap_ST_fsm_state37 = 72'd68719476736;
parameter    ap_ST_fsm_state38 = 72'd137438953472;
parameter    ap_ST_fsm_state39 = 72'd274877906944;
parameter    ap_ST_fsm_state40 = 72'd549755813888;
parameter    ap_ST_fsm_state41 = 72'd1099511627776;
parameter    ap_ST_fsm_state42 = 72'd2199023255552;
parameter    ap_ST_fsm_state43 = 72'd4398046511104;
parameter    ap_ST_fsm_state44 = 72'd8796093022208;
parameter    ap_ST_fsm_state45 = 72'd17592186044416;
parameter    ap_ST_fsm_state46 = 72'd35184372088832;
parameter    ap_ST_fsm_state47 = 72'd70368744177664;
parameter    ap_ST_fsm_state48 = 72'd140737488355328;
parameter    ap_ST_fsm_state49 = 72'd281474976710656;
parameter    ap_ST_fsm_state50 = 72'd562949953421312;
parameter    ap_ST_fsm_state51 = 72'd1125899906842624;
parameter    ap_ST_fsm_state52 = 72'd2251799813685248;
parameter    ap_ST_fsm_state53 = 72'd4503599627370496;
parameter    ap_ST_fsm_state54 = 72'd9007199254740992;
parameter    ap_ST_fsm_state55 = 72'd18014398509481984;
parameter    ap_ST_fsm_state56 = 72'd36028797018963968;
parameter    ap_ST_fsm_state57 = 72'd72057594037927936;
parameter    ap_ST_fsm_state58 = 72'd144115188075855872;
parameter    ap_ST_fsm_state59 = 72'd288230376151711744;
parameter    ap_ST_fsm_state60 = 72'd576460752303423488;
parameter    ap_ST_fsm_state61 = 72'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 72'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 72'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 72'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 72'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 72'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 72'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 72'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 72'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 72'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 72'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 72'd2361183241434822606848;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [71:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] counter_V;
reg   [14:0] frame_buffer_V_address0;
reg    frame_buffer_V_ce0;
reg    frame_buffer_V_we0;
reg   [7:0] frame_buffer_V_d0;
reg   [14:0] frame_buffer_V_address1;
reg    frame_buffer_V_ce1;
reg    frame_buffer_V_we1;
wire   [7:0] frame_buffer_V_q1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state67;
wire   [0:0] exitcond1_fu_3274_p2;
reg    Output_1_V_V_blk_n;
wire    ap_CS_fsm_state71;
reg   [31:0] tmp_V_reg_3415;
reg    ap_block_state1;
reg   [15:0] t_V_1_reg_3420;
wire   [0:0] tmp_3_fu_1461_p2;
wire   [8:0] i_V_fu_1473_p2;
reg   [8:0] i_V_reg_3432;
wire    ap_CS_fsm_state2;
wire   [15:0] tmp_5_fu_1479_p3;
reg   [15:0] tmp_5_reg_3437;
wire   [0:0] tmp_4_fu_1467_p2;
wire   [15:0] tmp_261_fu_3271_p1;
reg   [15:0] tmp_261_reg_3567;
wire    ap_CS_fsm_state66;
wire   [15:0] i_V_1_fu_3279_p2;
reg    ap_block_state67;
wire   [15:0] tmp_s_fu_3343_p2;
wire    ap_CS_fsm_state68;
wire   [8:0] i_1_fu_3360_p2;
reg   [8:0] i_1_reg_3591;
wire    ap_CS_fsm_state69;
wire   [16:0] tmp_269_cast_fu_3374_p1;
reg   [16:0] tmp_269_cast_reg_3596;
wire   [0:0] exitcond2_fu_3354_p2;
wire   [7:0] j_1_fu_3384_p2;
reg   [7:0] j_1_reg_3604;
wire    ap_CS_fsm_state70;
wire   [0:0] exitcond_fu_3378_p2;
reg   [8:0] t_V_reg_1402;
wire    ap_CS_fsm_state65;
reg   [15:0] t_V_2_reg_1413;
reg   [8:0] i_reg_1424;
wire   [0:0] tmp_2_fu_3348_p2;
reg   [7:0] j_reg_1435;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg   [15:0] counter_V_new_reg_1446;
wire   [63:0] tmp_7_fu_1487_p1;
wire   [63:0] tmp_6_fu_1498_p3;
wire   [63:0] tmp_10_fu_1512_p3;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_12_fu_1526_p3;
wire   [63:0] tmp_14_fu_1540_p3;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_16_fu_1554_p3;
wire   [63:0] tmp_18_fu_1568_p3;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_20_fu_1582_p3;
wire   [63:0] tmp_22_fu_1596_p3;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_24_fu_1610_p3;
wire   [63:0] tmp_26_fu_1624_p3;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_28_fu_1638_p3;
wire   [63:0] tmp_30_fu_1652_p3;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_32_fu_1666_p3;
wire   [63:0] tmp_34_fu_1680_p3;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_36_fu_1694_p3;
wire   [63:0] tmp_38_fu_1708_p3;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_40_fu_1722_p3;
wire   [63:0] tmp_42_fu_1736_p3;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_44_fu_1750_p3;
wire   [63:0] tmp_46_fu_1764_p3;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_48_fu_1778_p3;
wire   [63:0] tmp_50_fu_1792_p3;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_52_fu_1806_p3;
wire   [63:0] tmp_54_fu_1820_p3;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_56_fu_1834_p3;
wire   [63:0] tmp_58_fu_1848_p3;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_60_fu_1862_p3;
wire   [63:0] tmp_62_fu_1876_p3;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_64_fu_1890_p3;
wire   [63:0] tmp_66_fu_1904_p3;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_68_fu_1918_p3;
wire   [63:0] tmp_70_fu_1932_p3;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_72_fu_1946_p3;
wire   [63:0] tmp_74_fu_1960_p3;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_76_fu_1974_p3;
wire   [63:0] tmp_78_fu_1988_p3;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_80_fu_2002_p3;
wire   [63:0] tmp_82_fu_2016_p3;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_84_fu_2030_p3;
wire   [63:0] tmp_86_fu_2044_p3;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_88_fu_2058_p3;
wire   [63:0] tmp_90_fu_2072_p3;
wire    ap_CS_fsm_state23;
wire   [63:0] tmp_92_fu_2086_p3;
wire   [63:0] tmp_94_fu_2100_p3;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_96_fu_2114_p3;
wire   [63:0] tmp_98_fu_2128_p3;
wire    ap_CS_fsm_state25;
wire   [63:0] tmp_100_fu_2142_p3;
wire   [63:0] tmp_102_fu_2156_p3;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_104_fu_2170_p3;
wire   [63:0] tmp_106_fu_2184_p3;
wire    ap_CS_fsm_state27;
wire   [63:0] tmp_108_fu_2198_p3;
wire   [63:0] tmp_110_fu_2212_p3;
wire    ap_CS_fsm_state28;
wire   [63:0] tmp_112_fu_2226_p3;
wire   [63:0] tmp_114_fu_2240_p3;
wire    ap_CS_fsm_state29;
wire   [63:0] tmp_116_fu_2254_p3;
wire   [63:0] tmp_118_fu_2268_p3;
wire    ap_CS_fsm_state30;
wire   [63:0] tmp_120_fu_2282_p3;
wire   [63:0] tmp_122_fu_2296_p3;
wire    ap_CS_fsm_state31;
wire   [63:0] tmp_124_fu_2310_p3;
wire   [63:0] tmp_126_fu_2324_p3;
wire    ap_CS_fsm_state32;
wire   [63:0] tmp_128_fu_2338_p3;
wire   [63:0] tmp_130_fu_2352_p3;
wire    ap_CS_fsm_state33;
wire   [63:0] tmp_132_fu_2366_p3;
wire   [63:0] tmp_134_fu_2380_p3;
wire    ap_CS_fsm_state34;
wire   [63:0] tmp_136_fu_2394_p3;
wire   [63:0] tmp_138_fu_2408_p3;
wire    ap_CS_fsm_state35;
wire   [63:0] tmp_140_fu_2422_p3;
wire   [63:0] tmp_142_fu_2436_p3;
wire    ap_CS_fsm_state36;
wire   [63:0] tmp_144_fu_2450_p3;
wire   [63:0] tmp_146_fu_2464_p3;
wire    ap_CS_fsm_state37;
wire   [63:0] tmp_148_fu_2478_p3;
wire   [63:0] tmp_150_fu_2492_p3;
wire    ap_CS_fsm_state38;
wire   [63:0] tmp_152_fu_2506_p3;
wire   [63:0] tmp_154_fu_2520_p3;
wire    ap_CS_fsm_state39;
wire   [63:0] tmp_156_fu_2534_p3;
wire   [63:0] tmp_158_fu_2548_p3;
wire    ap_CS_fsm_state40;
wire   [63:0] tmp_160_fu_2562_p3;
wire   [63:0] tmp_162_fu_2576_p3;
wire    ap_CS_fsm_state41;
wire   [63:0] tmp_164_fu_2590_p3;
wire   [63:0] tmp_166_fu_2604_p3;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_168_fu_2618_p3;
wire   [63:0] tmp_170_fu_2632_p3;
wire    ap_CS_fsm_state43;
wire   [63:0] tmp_172_fu_2646_p3;
wire   [63:0] tmp_174_fu_2660_p3;
wire    ap_CS_fsm_state44;
wire   [63:0] tmp_176_fu_2674_p3;
wire   [63:0] tmp_178_fu_2688_p3;
wire    ap_CS_fsm_state45;
wire   [63:0] tmp_180_fu_2702_p3;
wire   [63:0] tmp_182_fu_2716_p3;
wire    ap_CS_fsm_state46;
wire   [63:0] tmp_184_fu_2730_p3;
wire   [63:0] tmp_186_fu_2744_p3;
wire    ap_CS_fsm_state47;
wire   [63:0] tmp_188_fu_2758_p3;
wire   [63:0] tmp_190_fu_2772_p3;
wire    ap_CS_fsm_state48;
wire   [63:0] tmp_192_fu_2786_p3;
wire   [63:0] tmp_194_fu_2800_p3;
wire    ap_CS_fsm_state49;
wire   [63:0] tmp_196_fu_2814_p3;
wire   [63:0] tmp_198_fu_2828_p3;
wire    ap_CS_fsm_state50;
wire   [63:0] tmp_200_fu_2842_p3;
wire   [63:0] tmp_202_fu_2856_p3;
wire    ap_CS_fsm_state51;
wire   [63:0] tmp_204_fu_2870_p3;
wire   [63:0] tmp_206_fu_2884_p3;
wire    ap_CS_fsm_state52;
wire   [63:0] tmp_208_fu_2898_p3;
wire   [63:0] tmp_210_fu_2912_p3;
wire    ap_CS_fsm_state53;
wire   [63:0] tmp_212_fu_2926_p3;
wire   [63:0] tmp_214_fu_2940_p3;
wire    ap_CS_fsm_state54;
wire   [63:0] tmp_216_fu_2954_p3;
wire   [63:0] tmp_218_fu_2968_p3;
wire    ap_CS_fsm_state55;
wire   [63:0] tmp_220_fu_2982_p3;
wire   [63:0] tmp_222_fu_2996_p3;
wire    ap_CS_fsm_state56;
wire   [63:0] tmp_224_fu_3010_p3;
wire   [63:0] tmp_226_fu_3024_p3;
wire    ap_CS_fsm_state57;
wire   [63:0] tmp_228_fu_3038_p3;
wire   [63:0] tmp_230_fu_3052_p3;
wire    ap_CS_fsm_state58;
wire   [63:0] tmp_232_fu_3066_p3;
wire   [63:0] tmp_234_fu_3080_p3;
wire    ap_CS_fsm_state59;
wire   [63:0] tmp_236_fu_3094_p3;
wire   [63:0] tmp_238_fu_3108_p3;
wire    ap_CS_fsm_state60;
wire   [63:0] tmp_240_fu_3122_p3;
wire   [63:0] tmp_242_fu_3136_p3;
wire    ap_CS_fsm_state61;
wire   [63:0] tmp_244_fu_3150_p3;
wire   [63:0] tmp_246_fu_3164_p3;
wire    ap_CS_fsm_state62;
wire   [63:0] tmp_248_fu_3178_p3;
wire   [63:0] tmp_250_fu_3192_p3;
wire    ap_CS_fsm_state63;
wire   [63:0] tmp_252_fu_3206_p3;
wire   [63:0] tmp_254_fu_3220_p3;
wire    ap_CS_fsm_state64;
wire   [63:0] tmp_256_fu_3234_p3;
wire   [63:0] tmp_258_fu_3248_p3;
wire   [63:0] tmp_260_fu_3262_p3;
wire  signed [63:0] tmp_267_cast_fu_3338_p1;
wire   [63:0] tmp_270_cast_fu_3399_p1;
wire    ap_CS_fsm_state72;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [15:0] tmp_9_fu_1492_p2;
wire   [15:0] tmp_8_fu_1507_p2;
wire   [15:0] tmp_11_fu_1521_p2;
wire   [15:0] tmp_13_fu_1535_p2;
wire   [15:0] tmp_15_fu_1549_p2;
wire   [15:0] tmp_17_fu_1563_p2;
wire   [15:0] tmp_19_fu_1577_p2;
wire   [15:0] tmp_21_fu_1591_p2;
wire   [15:0] tmp_23_fu_1605_p2;
wire   [15:0] tmp_25_fu_1619_p2;
wire   [15:0] tmp_27_fu_1633_p2;
wire   [15:0] tmp_29_fu_1647_p2;
wire   [15:0] tmp_31_fu_1661_p2;
wire   [15:0] tmp_33_fu_1675_p2;
wire   [15:0] tmp_35_fu_1689_p2;
wire   [15:0] tmp_37_fu_1703_p2;
wire   [15:0] tmp_39_fu_1717_p2;
wire   [15:0] tmp_41_fu_1731_p2;
wire   [15:0] tmp_43_fu_1745_p2;
wire   [15:0] tmp_45_fu_1759_p2;
wire   [15:0] tmp_47_fu_1773_p2;
wire   [15:0] tmp_49_fu_1787_p2;
wire   [15:0] tmp_51_fu_1801_p2;
wire   [15:0] tmp_53_fu_1815_p2;
wire   [15:0] tmp_55_fu_1829_p2;
wire   [15:0] tmp_57_fu_1843_p2;
wire   [15:0] tmp_59_fu_1857_p2;
wire   [15:0] tmp_61_fu_1871_p2;
wire   [15:0] tmp_63_fu_1885_p2;
wire   [15:0] tmp_65_fu_1899_p2;
wire   [15:0] tmp_67_fu_1913_p2;
wire   [15:0] tmp_69_fu_1927_p2;
wire   [15:0] tmp_71_fu_1941_p2;
wire   [15:0] tmp_73_fu_1955_p2;
wire   [15:0] tmp_75_fu_1969_p2;
wire   [15:0] tmp_77_fu_1983_p2;
wire   [15:0] tmp_79_fu_1997_p2;
wire   [15:0] tmp_81_fu_2011_p2;
wire   [15:0] tmp_83_fu_2025_p2;
wire   [15:0] tmp_85_fu_2039_p2;
wire   [15:0] tmp_87_fu_2053_p2;
wire   [15:0] tmp_89_fu_2067_p2;
wire   [15:0] tmp_91_fu_2081_p2;
wire   [15:0] tmp_93_fu_2095_p2;
wire   [15:0] tmp_95_fu_2109_p2;
wire   [15:0] tmp_97_fu_2123_p2;
wire   [15:0] tmp_99_fu_2137_p2;
wire   [15:0] tmp_101_fu_2151_p2;
wire   [15:0] tmp_103_fu_2165_p2;
wire   [15:0] tmp_105_fu_2179_p2;
wire   [15:0] tmp_107_fu_2193_p2;
wire   [15:0] tmp_109_fu_2207_p2;
wire   [15:0] tmp_111_fu_2221_p2;
wire   [15:0] tmp_113_fu_2235_p2;
wire   [15:0] tmp_115_fu_2249_p2;
wire   [15:0] tmp_117_fu_2263_p2;
wire   [15:0] tmp_119_fu_2277_p2;
wire   [15:0] tmp_121_fu_2291_p2;
wire   [15:0] tmp_123_fu_2305_p2;
wire   [15:0] tmp_125_fu_2319_p2;
wire   [15:0] tmp_127_fu_2333_p2;
wire   [15:0] tmp_129_fu_2347_p2;
wire   [15:0] tmp_131_fu_2361_p2;
wire   [15:0] tmp_133_fu_2375_p2;
wire   [15:0] tmp_135_fu_2389_p2;
wire   [15:0] tmp_137_fu_2403_p2;
wire   [15:0] tmp_139_fu_2417_p2;
wire   [15:0] tmp_141_fu_2431_p2;
wire   [15:0] tmp_143_fu_2445_p2;
wire   [15:0] tmp_145_fu_2459_p2;
wire   [15:0] tmp_147_fu_2473_p2;
wire   [15:0] tmp_149_fu_2487_p2;
wire   [15:0] tmp_151_fu_2501_p2;
wire   [15:0] tmp_153_fu_2515_p2;
wire   [15:0] tmp_155_fu_2529_p2;
wire   [15:0] tmp_157_fu_2543_p2;
wire   [15:0] tmp_159_fu_2557_p2;
wire   [15:0] tmp_161_fu_2571_p2;
wire   [15:0] tmp_163_fu_2585_p2;
wire   [15:0] tmp_165_fu_2599_p2;
wire   [15:0] tmp_167_fu_2613_p2;
wire   [15:0] tmp_169_fu_2627_p2;
wire   [15:0] tmp_171_fu_2641_p2;
wire   [15:0] tmp_173_fu_2655_p2;
wire   [15:0] tmp_175_fu_2669_p2;
wire   [15:0] tmp_177_fu_2683_p2;
wire   [15:0] tmp_179_fu_2697_p2;
wire   [15:0] tmp_181_fu_2711_p2;
wire   [15:0] tmp_183_fu_2725_p2;
wire   [15:0] tmp_185_fu_2739_p2;
wire   [15:0] tmp_187_fu_2753_p2;
wire   [15:0] tmp_189_fu_2767_p2;
wire   [15:0] tmp_191_fu_2781_p2;
wire   [15:0] tmp_193_fu_2795_p2;
wire   [15:0] tmp_195_fu_2809_p2;
wire   [15:0] tmp_197_fu_2823_p2;
wire   [15:0] tmp_199_fu_2837_p2;
wire   [15:0] tmp_201_fu_2851_p2;
wire   [15:0] tmp_203_fu_2865_p2;
wire   [15:0] tmp_205_fu_2879_p2;
wire   [15:0] tmp_207_fu_2893_p2;
wire   [15:0] tmp_209_fu_2907_p2;
wire   [15:0] tmp_211_fu_2921_p2;
wire   [15:0] tmp_213_fu_2935_p2;
wire   [15:0] tmp_215_fu_2949_p2;
wire   [15:0] tmp_217_fu_2963_p2;
wire   [15:0] tmp_219_fu_2977_p2;
wire   [15:0] tmp_221_fu_2991_p2;
wire   [15:0] tmp_223_fu_3005_p2;
wire   [15:0] tmp_225_fu_3019_p2;
wire   [15:0] tmp_227_fu_3033_p2;
wire   [15:0] tmp_229_fu_3047_p2;
wire   [15:0] tmp_231_fu_3061_p2;
wire   [15:0] tmp_233_fu_3075_p2;
wire   [15:0] tmp_235_fu_3089_p2;
wire   [15:0] tmp_237_fu_3103_p2;
wire   [15:0] tmp_239_fu_3117_p2;
wire   [15:0] tmp_241_fu_3131_p2;
wire   [15:0] tmp_243_fu_3145_p2;
wire   [15:0] tmp_245_fu_3159_p2;
wire   [15:0] tmp_247_fu_3173_p2;
wire   [15:0] tmp_249_fu_3187_p2;
wire   [15:0] tmp_251_fu_3201_p2;
wire   [15:0] tmp_253_fu_3215_p2;
wire   [15:0] tmp_255_fu_3229_p2;
wire   [15:0] tmp_257_fu_3243_p2;
wire   [15:0] tmp_259_fu_3257_p2;
wire   [7:0] pixels_y_V_fu_3285_p4;
wire   [7:0] r_V_fu_3306_p2;
wire   [7:0] tmp_262_fu_3316_p1;
wire   [14:0] tmp_263_fu_3320_p3;
wire   [16:0] tmp_266_cast_fu_3328_p1;
wire  signed [16:0] tmp_8_cast_fu_3312_p1;
wire   [16:0] tmp_264_fu_3332_p2;
wire   [15:0] tmp_265_fu_3366_p3;
wire   [16:0] tmp_10_cast_fu_3390_p1;
wire   [16:0] tmp_266_fu_3394_p2;
reg   [71:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 72'd1;
#0 counter_V = 16'd0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

coloringFB_top_frbkb #(
    .DataWidth( 8 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
frame_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(frame_buffer_V_address0),
    .ce0(frame_buffer_V_ce0),
    .we0(frame_buffer_V_we0),
    .d0(frame_buffer_V_d0),
    .address1(frame_buffer_V_address1),
    .ce1(frame_buffer_V_ce1),
    .we1(frame_buffer_V_we1),
    .d1(8'd0),
    .q1(frame_buffer_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state71)) begin
            if ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1)) begin
                ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
            end else if ((1'b1 == Output_1_V_V_ap_ack)) begin
                ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (exitcond2_fu_3354_p2 == 1'd1))) begin
        counter_V_new_reg_1446 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state68) & (tmp_2_fu_3348_p2 == 1'd0))) begin
        counter_V_new_reg_1446 <= tmp_s_fu_3343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_3348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        i_reg_1424 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state70) & (exitcond_fu_3378_p2 == 1'd1))) begin
        i_reg_1424 <= i_1_reg_3591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (exitcond2_fu_3354_p2 == 1'd0))) begin
        j_reg_1435 <= 8'd0;
    end else if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        j_reg_1435 <= j_1_reg_3604;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3274_p2 == 1'd0))) begin
        t_V_2_reg_1413 <= i_V_1_fu_3279_p2;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        t_V_2_reg_1413 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_3_fu_1461_p2 == 1'd1))) begin
        t_V_reg_1402 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        t_V_reg_1402 <= i_V_reg_3432;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        counter_V <= counter_V_new_reg_1446;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        i_1_reg_3591 <= i_1_fu_3360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_3432 <= i_V_fu_1473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        j_1_reg_3604 <= j_1_fu_3384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_1_reg_3420 <= counter_V;
        tmp_V_reg_3415 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        tmp_261_reg_3567 <= tmp_261_fu_3271_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (exitcond2_fu_3354_p2 == 1'd0))) begin
        tmp_269_cast_reg_3596[15 : 7] <= tmp_269_cast_fu_3374_p1[15 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_fu_1467_p2 == 1'd0))) begin
        tmp_5_reg_3437[15 : 7] <= tmp_5_fu_1479_p3[15 : 7];
    end
end

always @ (*) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3274_p2 == 1'd0)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3274_p2 == 1'd0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state71))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        frame_buffer_V_address0 = tmp_267_cast_fu_3338_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        frame_buffer_V_address0 = tmp_258_fu_3248_p3;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        frame_buffer_V_address0 = tmp_254_fu_3220_p3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        frame_buffer_V_address0 = tmp_250_fu_3192_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        frame_buffer_V_address0 = tmp_246_fu_3164_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        frame_buffer_V_address0 = tmp_242_fu_3136_p3;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        frame_buffer_V_address0 = tmp_238_fu_3108_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        frame_buffer_V_address0 = tmp_234_fu_3080_p3;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        frame_buffer_V_address0 = tmp_230_fu_3052_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        frame_buffer_V_address0 = tmp_226_fu_3024_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        frame_buffer_V_address0 = tmp_222_fu_2996_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        frame_buffer_V_address0 = tmp_218_fu_2968_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        frame_buffer_V_address0 = tmp_214_fu_2940_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        frame_buffer_V_address0 = tmp_210_fu_2912_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        frame_buffer_V_address0 = tmp_206_fu_2884_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        frame_buffer_V_address0 = tmp_202_fu_2856_p3;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        frame_buffer_V_address0 = tmp_198_fu_2828_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        frame_buffer_V_address0 = tmp_194_fu_2800_p3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        frame_buffer_V_address0 = tmp_190_fu_2772_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        frame_buffer_V_address0 = tmp_186_fu_2744_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        frame_buffer_V_address0 = tmp_182_fu_2716_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        frame_buffer_V_address0 = tmp_178_fu_2688_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        frame_buffer_V_address0 = tmp_174_fu_2660_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        frame_buffer_V_address0 = tmp_170_fu_2632_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        frame_buffer_V_address0 = tmp_166_fu_2604_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        frame_buffer_V_address0 = tmp_162_fu_2576_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        frame_buffer_V_address0 = tmp_158_fu_2548_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        frame_buffer_V_address0 = tmp_154_fu_2520_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        frame_buffer_V_address0 = tmp_150_fu_2492_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        frame_buffer_V_address0 = tmp_146_fu_2464_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        frame_buffer_V_address0 = tmp_142_fu_2436_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        frame_buffer_V_address0 = tmp_138_fu_2408_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        frame_buffer_V_address0 = tmp_134_fu_2380_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        frame_buffer_V_address0 = tmp_130_fu_2352_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_address0 = tmp_126_fu_2324_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_address0 = tmp_122_fu_2296_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_address0 = tmp_118_fu_2268_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_address0 = tmp_114_fu_2240_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_address0 = tmp_110_fu_2212_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_address0 = tmp_106_fu_2184_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_address0 = tmp_102_fu_2156_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_address0 = tmp_98_fu_2128_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_address0 = tmp_94_fu_2100_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_address0 = tmp_90_fu_2072_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_address0 = tmp_86_fu_2044_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_address0 = tmp_82_fu_2016_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_address0 = tmp_78_fu_1988_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_address0 = tmp_74_fu_1960_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_address0 = tmp_70_fu_1932_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_address0 = tmp_66_fu_1904_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_address0 = tmp_62_fu_1876_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_address0 = tmp_58_fu_1848_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_address0 = tmp_54_fu_1820_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_address0 = tmp_50_fu_1792_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_address0 = tmp_46_fu_1764_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_address0 = tmp_42_fu_1736_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_address0 = tmp_38_fu_1708_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_address0 = tmp_34_fu_1680_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_address0 = tmp_30_fu_1652_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_address0 = tmp_26_fu_1624_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_address0 = tmp_22_fu_1596_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_address0 = tmp_18_fu_1568_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_address0 = tmp_14_fu_1540_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_address0 = tmp_10_fu_1512_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_address0 = tmp_7_fu_1487_p1;
    end else begin
        frame_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        frame_buffer_V_address1 = tmp_270_cast_fu_3399_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        frame_buffer_V_address1 = tmp_260_fu_3262_p3;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        frame_buffer_V_address1 = tmp_256_fu_3234_p3;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        frame_buffer_V_address1 = tmp_252_fu_3206_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        frame_buffer_V_address1 = tmp_248_fu_3178_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        frame_buffer_V_address1 = tmp_244_fu_3150_p3;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        frame_buffer_V_address1 = tmp_240_fu_3122_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        frame_buffer_V_address1 = tmp_236_fu_3094_p3;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        frame_buffer_V_address1 = tmp_232_fu_3066_p3;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        frame_buffer_V_address1 = tmp_228_fu_3038_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        frame_buffer_V_address1 = tmp_224_fu_3010_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        frame_buffer_V_address1 = tmp_220_fu_2982_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        frame_buffer_V_address1 = tmp_216_fu_2954_p3;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        frame_buffer_V_address1 = tmp_212_fu_2926_p3;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        frame_buffer_V_address1 = tmp_208_fu_2898_p3;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        frame_buffer_V_address1 = tmp_204_fu_2870_p3;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        frame_buffer_V_address1 = tmp_200_fu_2842_p3;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        frame_buffer_V_address1 = tmp_196_fu_2814_p3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        frame_buffer_V_address1 = tmp_192_fu_2786_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        frame_buffer_V_address1 = tmp_188_fu_2758_p3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        frame_buffer_V_address1 = tmp_184_fu_2730_p3;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        frame_buffer_V_address1 = tmp_180_fu_2702_p3;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        frame_buffer_V_address1 = tmp_176_fu_2674_p3;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        frame_buffer_V_address1 = tmp_172_fu_2646_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        frame_buffer_V_address1 = tmp_168_fu_2618_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        frame_buffer_V_address1 = tmp_164_fu_2590_p3;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        frame_buffer_V_address1 = tmp_160_fu_2562_p3;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        frame_buffer_V_address1 = tmp_156_fu_2534_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        frame_buffer_V_address1 = tmp_152_fu_2506_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        frame_buffer_V_address1 = tmp_148_fu_2478_p3;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        frame_buffer_V_address1 = tmp_144_fu_2450_p3;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        frame_buffer_V_address1 = tmp_140_fu_2422_p3;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        frame_buffer_V_address1 = tmp_136_fu_2394_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        frame_buffer_V_address1 = tmp_132_fu_2366_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        frame_buffer_V_address1 = tmp_128_fu_2338_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        frame_buffer_V_address1 = tmp_124_fu_2310_p3;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        frame_buffer_V_address1 = tmp_120_fu_2282_p3;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        frame_buffer_V_address1 = tmp_116_fu_2254_p3;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        frame_buffer_V_address1 = tmp_112_fu_2226_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        frame_buffer_V_address1 = tmp_108_fu_2198_p3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        frame_buffer_V_address1 = tmp_104_fu_2170_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        frame_buffer_V_address1 = tmp_100_fu_2142_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        frame_buffer_V_address1 = tmp_96_fu_2114_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        frame_buffer_V_address1 = tmp_92_fu_2086_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        frame_buffer_V_address1 = tmp_88_fu_2058_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        frame_buffer_V_address1 = tmp_84_fu_2030_p3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        frame_buffer_V_address1 = tmp_80_fu_2002_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        frame_buffer_V_address1 = tmp_76_fu_1974_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        frame_buffer_V_address1 = tmp_72_fu_1946_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        frame_buffer_V_address1 = tmp_68_fu_1918_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        frame_buffer_V_address1 = tmp_64_fu_1890_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        frame_buffer_V_address1 = tmp_60_fu_1862_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        frame_buffer_V_address1 = tmp_56_fu_1834_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        frame_buffer_V_address1 = tmp_52_fu_1806_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        frame_buffer_V_address1 = tmp_48_fu_1778_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        frame_buffer_V_address1 = tmp_44_fu_1750_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        frame_buffer_V_address1 = tmp_40_fu_1722_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        frame_buffer_V_address1 = tmp_36_fu_1694_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_address1 = tmp_32_fu_1666_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_address1 = tmp_28_fu_1638_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_address1 = tmp_24_fu_1610_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_address1 = tmp_20_fu_1582_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_address1 = tmp_16_fu_1554_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_address1 = tmp_12_fu_1526_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_address1 = tmp_6_fu_1498_p3;
    end else begin
        frame_buffer_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state2) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67)))) begin
        frame_buffer_V_ce0 = 1'b1;
    end else begin
        frame_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state2))) begin
        frame_buffer_V_ce1 = 1'b1;
    end else begin
        frame_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        frame_buffer_V_d0 = {{Input_1_V_V[23:16]}};
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state2))) begin
        frame_buffer_V_d0 = 8'd0;
    end else begin
        frame_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | ((1'b1 == ap_CS_fsm_state2) & (tmp_4_fu_1467_p2 == 1'd0)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3274_p2 == 1'd0)))) begin
        frame_buffer_V_we0 = 1'b1;
    end else begin
        frame_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state65) | ((1'b1 == ap_CS_fsm_state2) & (tmp_4_fu_1467_p2 == 1'd0)))) begin
        frame_buffer_V_we1 = 1'b1;
    end else begin
        frame_buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_3_fu_1461_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (tmp_3_fu_1461_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_fu_1467_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3274_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state67) & (exitcond1_fu_3274_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((tmp_2_fu_3348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (exitcond2_fu_3354_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (exitcond_fu_3378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Output_1_V_V = frame_buffer_V_q1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == Input_1_V_V_ap_vld) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state67 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_3274_p2 == 1'd0));
end

assign exitcond1_fu_3274_p2 = ((t_V_2_reg_1413 == tmp_261_reg_3567) ? 1'b1 : 1'b0);

assign exitcond2_fu_3354_p2 = ((i_reg_1424 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_fu_3378_p2 = ((j_reg_1435 == 8'd128) ? 1'b1 : 1'b0);

assign i_1_fu_3360_p2 = (i_reg_1424 + 9'd1);

assign i_V_1_fu_3279_p2 = (t_V_2_reg_1413 + 16'd1);

assign i_V_fu_1473_p2 = (t_V_reg_1402 + 9'd1);

assign j_1_fu_3384_p2 = (j_reg_1435 + 8'd1);

assign pixels_y_V_fu_3285_p4 = {{Input_1_V_V[15:8]}};

assign r_V_fu_3306_p2 = (pixels_y_V_fu_3285_p4 ^ 8'd128);

assign tmp_100_fu_2142_p3 = {{48'd0}, {tmp_99_fu_2137_p2}};

assign tmp_101_fu_2151_p2 = (tmp_5_reg_3437 | 16'd48);

assign tmp_102_fu_2156_p3 = {{48'd0}, {tmp_101_fu_2151_p2}};

assign tmp_103_fu_2165_p2 = (tmp_5_reg_3437 | 16'd49);

assign tmp_104_fu_2170_p3 = {{48'd0}, {tmp_103_fu_2165_p2}};

assign tmp_105_fu_2179_p2 = (tmp_5_reg_3437 | 16'd50);

assign tmp_106_fu_2184_p3 = {{48'd0}, {tmp_105_fu_2179_p2}};

assign tmp_107_fu_2193_p2 = (tmp_5_reg_3437 | 16'd51);

assign tmp_108_fu_2198_p3 = {{48'd0}, {tmp_107_fu_2193_p2}};

assign tmp_109_fu_2207_p2 = (tmp_5_reg_3437 | 16'd52);

assign tmp_10_cast_fu_3390_p1 = j_reg_1435;

assign tmp_10_fu_1512_p3 = {{48'd0}, {tmp_8_fu_1507_p2}};

assign tmp_110_fu_2212_p3 = {{48'd0}, {tmp_109_fu_2207_p2}};

assign tmp_111_fu_2221_p2 = (tmp_5_reg_3437 | 16'd53);

assign tmp_112_fu_2226_p3 = {{48'd0}, {tmp_111_fu_2221_p2}};

assign tmp_113_fu_2235_p2 = (tmp_5_reg_3437 | 16'd54);

assign tmp_114_fu_2240_p3 = {{48'd0}, {tmp_113_fu_2235_p2}};

assign tmp_115_fu_2249_p2 = (tmp_5_reg_3437 | 16'd55);

assign tmp_116_fu_2254_p3 = {{48'd0}, {tmp_115_fu_2249_p2}};

assign tmp_117_fu_2263_p2 = (tmp_5_reg_3437 | 16'd56);

assign tmp_118_fu_2268_p3 = {{48'd0}, {tmp_117_fu_2263_p2}};

assign tmp_119_fu_2277_p2 = (tmp_5_reg_3437 | 16'd57);

assign tmp_11_fu_1521_p2 = (tmp_5_reg_3437 | 16'd3);

assign tmp_120_fu_2282_p3 = {{48'd0}, {tmp_119_fu_2277_p2}};

assign tmp_121_fu_2291_p2 = (tmp_5_reg_3437 | 16'd58);

assign tmp_122_fu_2296_p3 = {{48'd0}, {tmp_121_fu_2291_p2}};

assign tmp_123_fu_2305_p2 = (tmp_5_reg_3437 | 16'd59);

assign tmp_124_fu_2310_p3 = {{48'd0}, {tmp_123_fu_2305_p2}};

assign tmp_125_fu_2319_p2 = (tmp_5_reg_3437 | 16'd60);

assign tmp_126_fu_2324_p3 = {{48'd0}, {tmp_125_fu_2319_p2}};

assign tmp_127_fu_2333_p2 = (tmp_5_reg_3437 | 16'd61);

assign tmp_128_fu_2338_p3 = {{48'd0}, {tmp_127_fu_2333_p2}};

assign tmp_129_fu_2347_p2 = (tmp_5_reg_3437 | 16'd62);

assign tmp_12_fu_1526_p3 = {{48'd0}, {tmp_11_fu_1521_p2}};

assign tmp_130_fu_2352_p3 = {{48'd0}, {tmp_129_fu_2347_p2}};

assign tmp_131_fu_2361_p2 = (tmp_5_reg_3437 | 16'd63);

assign tmp_132_fu_2366_p3 = {{48'd0}, {tmp_131_fu_2361_p2}};

assign tmp_133_fu_2375_p2 = (tmp_5_reg_3437 | 16'd64);

assign tmp_134_fu_2380_p3 = {{48'd0}, {tmp_133_fu_2375_p2}};

assign tmp_135_fu_2389_p2 = (tmp_5_reg_3437 | 16'd65);

assign tmp_136_fu_2394_p3 = {{48'd0}, {tmp_135_fu_2389_p2}};

assign tmp_137_fu_2403_p2 = (tmp_5_reg_3437 | 16'd66);

assign tmp_138_fu_2408_p3 = {{48'd0}, {tmp_137_fu_2403_p2}};

assign tmp_139_fu_2417_p2 = (tmp_5_reg_3437 | 16'd67);

assign tmp_13_fu_1535_p2 = (tmp_5_reg_3437 | 16'd4);

assign tmp_140_fu_2422_p3 = {{48'd0}, {tmp_139_fu_2417_p2}};

assign tmp_141_fu_2431_p2 = (tmp_5_reg_3437 | 16'd68);

assign tmp_142_fu_2436_p3 = {{48'd0}, {tmp_141_fu_2431_p2}};

assign tmp_143_fu_2445_p2 = (tmp_5_reg_3437 | 16'd69);

assign tmp_144_fu_2450_p3 = {{48'd0}, {tmp_143_fu_2445_p2}};

assign tmp_145_fu_2459_p2 = (tmp_5_reg_3437 | 16'd70);

assign tmp_146_fu_2464_p3 = {{48'd0}, {tmp_145_fu_2459_p2}};

assign tmp_147_fu_2473_p2 = (tmp_5_reg_3437 | 16'd71);

assign tmp_148_fu_2478_p3 = {{48'd0}, {tmp_147_fu_2473_p2}};

assign tmp_149_fu_2487_p2 = (tmp_5_reg_3437 | 16'd72);

assign tmp_14_fu_1540_p3 = {{48'd0}, {tmp_13_fu_1535_p2}};

assign tmp_150_fu_2492_p3 = {{48'd0}, {tmp_149_fu_2487_p2}};

assign tmp_151_fu_2501_p2 = (tmp_5_reg_3437 | 16'd73);

assign tmp_152_fu_2506_p3 = {{48'd0}, {tmp_151_fu_2501_p2}};

assign tmp_153_fu_2515_p2 = (tmp_5_reg_3437 | 16'd74);

assign tmp_154_fu_2520_p3 = {{48'd0}, {tmp_153_fu_2515_p2}};

assign tmp_155_fu_2529_p2 = (tmp_5_reg_3437 | 16'd75);

assign tmp_156_fu_2534_p3 = {{48'd0}, {tmp_155_fu_2529_p2}};

assign tmp_157_fu_2543_p2 = (tmp_5_reg_3437 | 16'd76);

assign tmp_158_fu_2548_p3 = {{48'd0}, {tmp_157_fu_2543_p2}};

assign tmp_159_fu_2557_p2 = (tmp_5_reg_3437 | 16'd77);

assign tmp_15_fu_1549_p2 = (tmp_5_reg_3437 | 16'd5);

assign tmp_160_fu_2562_p3 = {{48'd0}, {tmp_159_fu_2557_p2}};

assign tmp_161_fu_2571_p2 = (tmp_5_reg_3437 | 16'd78);

assign tmp_162_fu_2576_p3 = {{48'd0}, {tmp_161_fu_2571_p2}};

assign tmp_163_fu_2585_p2 = (tmp_5_reg_3437 | 16'd79);

assign tmp_164_fu_2590_p3 = {{48'd0}, {tmp_163_fu_2585_p2}};

assign tmp_165_fu_2599_p2 = (tmp_5_reg_3437 | 16'd80);

assign tmp_166_fu_2604_p3 = {{48'd0}, {tmp_165_fu_2599_p2}};

assign tmp_167_fu_2613_p2 = (tmp_5_reg_3437 | 16'd81);

assign tmp_168_fu_2618_p3 = {{48'd0}, {tmp_167_fu_2613_p2}};

assign tmp_169_fu_2627_p2 = (tmp_5_reg_3437 | 16'd82);

assign tmp_16_fu_1554_p3 = {{48'd0}, {tmp_15_fu_1549_p2}};

assign tmp_170_fu_2632_p3 = {{48'd0}, {tmp_169_fu_2627_p2}};

assign tmp_171_fu_2641_p2 = (tmp_5_reg_3437 | 16'd83);

assign tmp_172_fu_2646_p3 = {{48'd0}, {tmp_171_fu_2641_p2}};

assign tmp_173_fu_2655_p2 = (tmp_5_reg_3437 | 16'd84);

assign tmp_174_fu_2660_p3 = {{48'd0}, {tmp_173_fu_2655_p2}};

assign tmp_175_fu_2669_p2 = (tmp_5_reg_3437 | 16'd85);

assign tmp_176_fu_2674_p3 = {{48'd0}, {tmp_175_fu_2669_p2}};

assign tmp_177_fu_2683_p2 = (tmp_5_reg_3437 | 16'd86);

assign tmp_178_fu_2688_p3 = {{48'd0}, {tmp_177_fu_2683_p2}};

assign tmp_179_fu_2697_p2 = (tmp_5_reg_3437 | 16'd87);

assign tmp_17_fu_1563_p2 = (tmp_5_reg_3437 | 16'd6);

assign tmp_180_fu_2702_p3 = {{48'd0}, {tmp_179_fu_2697_p2}};

assign tmp_181_fu_2711_p2 = (tmp_5_reg_3437 | 16'd88);

assign tmp_182_fu_2716_p3 = {{48'd0}, {tmp_181_fu_2711_p2}};

assign tmp_183_fu_2725_p2 = (tmp_5_reg_3437 | 16'd89);

assign tmp_184_fu_2730_p3 = {{48'd0}, {tmp_183_fu_2725_p2}};

assign tmp_185_fu_2739_p2 = (tmp_5_reg_3437 | 16'd90);

assign tmp_186_fu_2744_p3 = {{48'd0}, {tmp_185_fu_2739_p2}};

assign tmp_187_fu_2753_p2 = (tmp_5_reg_3437 | 16'd91);

assign tmp_188_fu_2758_p3 = {{48'd0}, {tmp_187_fu_2753_p2}};

assign tmp_189_fu_2767_p2 = (tmp_5_reg_3437 | 16'd92);

assign tmp_18_fu_1568_p3 = {{48'd0}, {tmp_17_fu_1563_p2}};

assign tmp_190_fu_2772_p3 = {{48'd0}, {tmp_189_fu_2767_p2}};

assign tmp_191_fu_2781_p2 = (tmp_5_reg_3437 | 16'd93);

assign tmp_192_fu_2786_p3 = {{48'd0}, {tmp_191_fu_2781_p2}};

assign tmp_193_fu_2795_p2 = (tmp_5_reg_3437 | 16'd94);

assign tmp_194_fu_2800_p3 = {{48'd0}, {tmp_193_fu_2795_p2}};

assign tmp_195_fu_2809_p2 = (tmp_5_reg_3437 | 16'd95);

assign tmp_196_fu_2814_p3 = {{48'd0}, {tmp_195_fu_2809_p2}};

assign tmp_197_fu_2823_p2 = (tmp_5_reg_3437 | 16'd96);

assign tmp_198_fu_2828_p3 = {{48'd0}, {tmp_197_fu_2823_p2}};

assign tmp_199_fu_2837_p2 = (tmp_5_reg_3437 | 16'd97);

assign tmp_19_fu_1577_p2 = (tmp_5_reg_3437 | 16'd7);

assign tmp_200_fu_2842_p3 = {{48'd0}, {tmp_199_fu_2837_p2}};

assign tmp_201_fu_2851_p2 = (tmp_5_reg_3437 | 16'd98);

assign tmp_202_fu_2856_p3 = {{48'd0}, {tmp_201_fu_2851_p2}};

assign tmp_203_fu_2865_p2 = (tmp_5_reg_3437 | 16'd99);

assign tmp_204_fu_2870_p3 = {{48'd0}, {tmp_203_fu_2865_p2}};

assign tmp_205_fu_2879_p2 = (tmp_5_reg_3437 | 16'd100);

assign tmp_206_fu_2884_p3 = {{48'd0}, {tmp_205_fu_2879_p2}};

assign tmp_207_fu_2893_p2 = (tmp_5_reg_3437 | 16'd101);

assign tmp_208_fu_2898_p3 = {{48'd0}, {tmp_207_fu_2893_p2}};

assign tmp_209_fu_2907_p2 = (tmp_5_reg_3437 | 16'd102);

assign tmp_20_fu_1582_p3 = {{48'd0}, {tmp_19_fu_1577_p2}};

assign tmp_210_fu_2912_p3 = {{48'd0}, {tmp_209_fu_2907_p2}};

assign tmp_211_fu_2921_p2 = (tmp_5_reg_3437 | 16'd103);

assign tmp_212_fu_2926_p3 = {{48'd0}, {tmp_211_fu_2921_p2}};

assign tmp_213_fu_2935_p2 = (tmp_5_reg_3437 | 16'd104);

assign tmp_214_fu_2940_p3 = {{48'd0}, {tmp_213_fu_2935_p2}};

assign tmp_215_fu_2949_p2 = (tmp_5_reg_3437 | 16'd105);

assign tmp_216_fu_2954_p3 = {{48'd0}, {tmp_215_fu_2949_p2}};

assign tmp_217_fu_2963_p2 = (tmp_5_reg_3437 | 16'd106);

assign tmp_218_fu_2968_p3 = {{48'd0}, {tmp_217_fu_2963_p2}};

assign tmp_219_fu_2977_p2 = (tmp_5_reg_3437 | 16'd107);

assign tmp_21_fu_1591_p2 = (tmp_5_reg_3437 | 16'd8);

assign tmp_220_fu_2982_p3 = {{48'd0}, {tmp_219_fu_2977_p2}};

assign tmp_221_fu_2991_p2 = (tmp_5_reg_3437 | 16'd108);

assign tmp_222_fu_2996_p3 = {{48'd0}, {tmp_221_fu_2991_p2}};

assign tmp_223_fu_3005_p2 = (tmp_5_reg_3437 | 16'd109);

assign tmp_224_fu_3010_p3 = {{48'd0}, {tmp_223_fu_3005_p2}};

assign tmp_225_fu_3019_p2 = (tmp_5_reg_3437 | 16'd110);

assign tmp_226_fu_3024_p3 = {{48'd0}, {tmp_225_fu_3019_p2}};

assign tmp_227_fu_3033_p2 = (tmp_5_reg_3437 | 16'd111);

assign tmp_228_fu_3038_p3 = {{48'd0}, {tmp_227_fu_3033_p2}};

assign tmp_229_fu_3047_p2 = (tmp_5_reg_3437 | 16'd112);

assign tmp_22_fu_1596_p3 = {{48'd0}, {tmp_21_fu_1591_p2}};

assign tmp_230_fu_3052_p3 = {{48'd0}, {tmp_229_fu_3047_p2}};

assign tmp_231_fu_3061_p2 = (tmp_5_reg_3437 | 16'd113);

assign tmp_232_fu_3066_p3 = {{48'd0}, {tmp_231_fu_3061_p2}};

assign tmp_233_fu_3075_p2 = (tmp_5_reg_3437 | 16'd114);

assign tmp_234_fu_3080_p3 = {{48'd0}, {tmp_233_fu_3075_p2}};

assign tmp_235_fu_3089_p2 = (tmp_5_reg_3437 | 16'd115);

assign tmp_236_fu_3094_p3 = {{48'd0}, {tmp_235_fu_3089_p2}};

assign tmp_237_fu_3103_p2 = (tmp_5_reg_3437 | 16'd116);

assign tmp_238_fu_3108_p3 = {{48'd0}, {tmp_237_fu_3103_p2}};

assign tmp_239_fu_3117_p2 = (tmp_5_reg_3437 | 16'd117);

assign tmp_23_fu_1605_p2 = (tmp_5_reg_3437 | 16'd9);

assign tmp_240_fu_3122_p3 = {{48'd0}, {tmp_239_fu_3117_p2}};

assign tmp_241_fu_3131_p2 = (tmp_5_reg_3437 | 16'd118);

assign tmp_242_fu_3136_p3 = {{48'd0}, {tmp_241_fu_3131_p2}};

assign tmp_243_fu_3145_p2 = (tmp_5_reg_3437 | 16'd119);

assign tmp_244_fu_3150_p3 = {{48'd0}, {tmp_243_fu_3145_p2}};

assign tmp_245_fu_3159_p2 = (tmp_5_reg_3437 | 16'd120);

assign tmp_246_fu_3164_p3 = {{48'd0}, {tmp_245_fu_3159_p2}};

assign tmp_247_fu_3173_p2 = (tmp_5_reg_3437 | 16'd121);

assign tmp_248_fu_3178_p3 = {{48'd0}, {tmp_247_fu_3173_p2}};

assign tmp_249_fu_3187_p2 = (tmp_5_reg_3437 | 16'd122);

assign tmp_24_fu_1610_p3 = {{48'd0}, {tmp_23_fu_1605_p2}};

assign tmp_250_fu_3192_p3 = {{48'd0}, {tmp_249_fu_3187_p2}};

assign tmp_251_fu_3201_p2 = (tmp_5_reg_3437 | 16'd123);

assign tmp_252_fu_3206_p3 = {{48'd0}, {tmp_251_fu_3201_p2}};

assign tmp_253_fu_3215_p2 = (tmp_5_reg_3437 | 16'd124);

assign tmp_254_fu_3220_p3 = {{48'd0}, {tmp_253_fu_3215_p2}};

assign tmp_255_fu_3229_p2 = (tmp_5_reg_3437 | 16'd125);

assign tmp_256_fu_3234_p3 = {{48'd0}, {tmp_255_fu_3229_p2}};

assign tmp_257_fu_3243_p2 = (tmp_5_reg_3437 | 16'd126);

assign tmp_258_fu_3248_p3 = {{48'd0}, {tmp_257_fu_3243_p2}};

assign tmp_259_fu_3257_p2 = (tmp_5_reg_3437 | 16'd127);

assign tmp_25_fu_1619_p2 = (tmp_5_reg_3437 | 16'd10);

assign tmp_260_fu_3262_p3 = {{48'd0}, {tmp_259_fu_3257_p2}};

assign tmp_261_fu_3271_p1 = tmp_V_reg_3415[15:0];

assign tmp_262_fu_3316_p1 = Input_1_V_V[7:0];

assign tmp_263_fu_3320_p3 = {{tmp_262_fu_3316_p1}, {7'd0}};

assign tmp_264_fu_3332_p2 = ($signed(tmp_266_cast_fu_3328_p1) + $signed(tmp_8_cast_fu_3312_p1));

assign tmp_265_fu_3366_p3 = {{i_reg_1424}, {7'd0}};

assign tmp_266_cast_fu_3328_p1 = tmp_263_fu_3320_p3;

assign tmp_266_fu_3394_p2 = (tmp_269_cast_reg_3596 + tmp_10_cast_fu_3390_p1);

assign tmp_267_cast_fu_3338_p1 = $signed(tmp_264_fu_3332_p2);

assign tmp_269_cast_fu_3374_p1 = tmp_265_fu_3366_p3;

assign tmp_26_fu_1624_p3 = {{48'd0}, {tmp_25_fu_1619_p2}};

assign tmp_270_cast_fu_3399_p1 = tmp_266_fu_3394_p2;

assign tmp_27_fu_1633_p2 = (tmp_5_reg_3437 | 16'd11);

assign tmp_28_fu_1638_p3 = {{48'd0}, {tmp_27_fu_1633_p2}};

assign tmp_29_fu_1647_p2 = (tmp_5_reg_3437 | 16'd12);

assign tmp_2_fu_3348_p2 = ((tmp_s_fu_3343_p2 == 16'd3192) ? 1'b1 : 1'b0);

assign tmp_30_fu_1652_p3 = {{48'd0}, {tmp_29_fu_1647_p2}};

assign tmp_31_fu_1661_p2 = (tmp_5_reg_3437 | 16'd13);

assign tmp_32_fu_1666_p3 = {{48'd0}, {tmp_31_fu_1661_p2}};

assign tmp_33_fu_1675_p2 = (tmp_5_reg_3437 | 16'd14);

assign tmp_34_fu_1680_p3 = {{48'd0}, {tmp_33_fu_1675_p2}};

assign tmp_35_fu_1689_p2 = (tmp_5_reg_3437 | 16'd15);

assign tmp_36_fu_1694_p3 = {{48'd0}, {tmp_35_fu_1689_p2}};

assign tmp_37_fu_1703_p2 = (tmp_5_reg_3437 | 16'd16);

assign tmp_38_fu_1708_p3 = {{48'd0}, {tmp_37_fu_1703_p2}};

assign tmp_39_fu_1717_p2 = (tmp_5_reg_3437 | 16'd17);

assign tmp_3_fu_1461_p2 = ((counter_V == 16'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_1722_p3 = {{48'd0}, {tmp_39_fu_1717_p2}};

assign tmp_41_fu_1731_p2 = (tmp_5_reg_3437 | 16'd18);

assign tmp_42_fu_1736_p3 = {{48'd0}, {tmp_41_fu_1731_p2}};

assign tmp_43_fu_1745_p2 = (tmp_5_reg_3437 | 16'd19);

assign tmp_44_fu_1750_p3 = {{48'd0}, {tmp_43_fu_1745_p2}};

assign tmp_45_fu_1759_p2 = (tmp_5_reg_3437 | 16'd20);

assign tmp_46_fu_1764_p3 = {{48'd0}, {tmp_45_fu_1759_p2}};

assign tmp_47_fu_1773_p2 = (tmp_5_reg_3437 | 16'd21);

assign tmp_48_fu_1778_p3 = {{48'd0}, {tmp_47_fu_1773_p2}};

assign tmp_49_fu_1787_p2 = (tmp_5_reg_3437 | 16'd22);

assign tmp_4_fu_1467_p2 = ((t_V_reg_1402 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_50_fu_1792_p3 = {{48'd0}, {tmp_49_fu_1787_p2}};

assign tmp_51_fu_1801_p2 = (tmp_5_reg_3437 | 16'd23);

assign tmp_52_fu_1806_p3 = {{48'd0}, {tmp_51_fu_1801_p2}};

assign tmp_53_fu_1815_p2 = (tmp_5_reg_3437 | 16'd24);

assign tmp_54_fu_1820_p3 = {{48'd0}, {tmp_53_fu_1815_p2}};

assign tmp_55_fu_1829_p2 = (tmp_5_reg_3437 | 16'd25);

assign tmp_56_fu_1834_p3 = {{48'd0}, {tmp_55_fu_1829_p2}};

assign tmp_57_fu_1843_p2 = (tmp_5_reg_3437 | 16'd26);

assign tmp_58_fu_1848_p3 = {{48'd0}, {tmp_57_fu_1843_p2}};

assign tmp_59_fu_1857_p2 = (tmp_5_reg_3437 | 16'd27);

assign tmp_5_fu_1479_p3 = {{t_V_reg_1402}, {7'd0}};

assign tmp_60_fu_1862_p3 = {{48'd0}, {tmp_59_fu_1857_p2}};

assign tmp_61_fu_1871_p2 = (tmp_5_reg_3437 | 16'd28);

assign tmp_62_fu_1876_p3 = {{48'd0}, {tmp_61_fu_1871_p2}};

assign tmp_63_fu_1885_p2 = (tmp_5_reg_3437 | 16'd29);

assign tmp_64_fu_1890_p3 = {{48'd0}, {tmp_63_fu_1885_p2}};

assign tmp_65_fu_1899_p2 = (tmp_5_reg_3437 | 16'd30);

assign tmp_66_fu_1904_p3 = {{48'd0}, {tmp_65_fu_1899_p2}};

assign tmp_67_fu_1913_p2 = (tmp_5_reg_3437 | 16'd31);

assign tmp_68_fu_1918_p3 = {{48'd0}, {tmp_67_fu_1913_p2}};

assign tmp_69_fu_1927_p2 = (tmp_5_reg_3437 | 16'd32);

assign tmp_6_fu_1498_p3 = {{48'd0}, {tmp_9_fu_1492_p2}};

assign tmp_70_fu_1932_p3 = {{48'd0}, {tmp_69_fu_1927_p2}};

assign tmp_71_fu_1941_p2 = (tmp_5_reg_3437 | 16'd33);

assign tmp_72_fu_1946_p3 = {{48'd0}, {tmp_71_fu_1941_p2}};

assign tmp_73_fu_1955_p2 = (tmp_5_reg_3437 | 16'd34);

assign tmp_74_fu_1960_p3 = {{48'd0}, {tmp_73_fu_1955_p2}};

assign tmp_75_fu_1969_p2 = (tmp_5_reg_3437 | 16'd35);

assign tmp_76_fu_1974_p3 = {{48'd0}, {tmp_75_fu_1969_p2}};

assign tmp_77_fu_1983_p2 = (tmp_5_reg_3437 | 16'd36);

assign tmp_78_fu_1988_p3 = {{48'd0}, {tmp_77_fu_1983_p2}};

assign tmp_79_fu_1997_p2 = (tmp_5_reg_3437 | 16'd37);

assign tmp_7_fu_1487_p1 = tmp_5_fu_1479_p3;

assign tmp_80_fu_2002_p3 = {{48'd0}, {tmp_79_fu_1997_p2}};

assign tmp_81_fu_2011_p2 = (tmp_5_reg_3437 | 16'd38);

assign tmp_82_fu_2016_p3 = {{48'd0}, {tmp_81_fu_2011_p2}};

assign tmp_83_fu_2025_p2 = (tmp_5_reg_3437 | 16'd39);

assign tmp_84_fu_2030_p3 = {{48'd0}, {tmp_83_fu_2025_p2}};

assign tmp_85_fu_2039_p2 = (tmp_5_reg_3437 | 16'd40);

assign tmp_86_fu_2044_p3 = {{48'd0}, {tmp_85_fu_2039_p2}};

assign tmp_87_fu_2053_p2 = (tmp_5_reg_3437 | 16'd41);

assign tmp_88_fu_2058_p3 = {{48'd0}, {tmp_87_fu_2053_p2}};

assign tmp_89_fu_2067_p2 = (tmp_5_reg_3437 | 16'd42);

assign tmp_8_cast_fu_3312_p1 = $signed(r_V_fu_3306_p2);

assign tmp_8_fu_1507_p2 = (tmp_5_reg_3437 | 16'd2);

assign tmp_90_fu_2072_p3 = {{48'd0}, {tmp_89_fu_2067_p2}};

assign tmp_91_fu_2081_p2 = (tmp_5_reg_3437 | 16'd43);

assign tmp_92_fu_2086_p3 = {{48'd0}, {tmp_91_fu_2081_p2}};

assign tmp_93_fu_2095_p2 = (tmp_5_reg_3437 | 16'd44);

assign tmp_94_fu_2100_p3 = {{48'd0}, {tmp_93_fu_2095_p2}};

assign tmp_95_fu_2109_p2 = (tmp_5_reg_3437 | 16'd45);

assign tmp_96_fu_2114_p3 = {{48'd0}, {tmp_95_fu_2109_p2}};

assign tmp_97_fu_2123_p2 = (tmp_5_reg_3437 | 16'd46);

assign tmp_98_fu_2128_p3 = {{48'd0}, {tmp_97_fu_2123_p2}};

assign tmp_99_fu_2137_p2 = (tmp_5_reg_3437 | 16'd47);

assign tmp_9_fu_1492_p2 = (tmp_5_fu_1479_p3 | 16'd1);

assign tmp_s_fu_3343_p2 = (t_V_1_reg_3420 + 16'd1);

always @ (posedge ap_clk) begin
    tmp_5_reg_3437[6:0] <= 7'b0000000;
    tmp_269_cast_reg_3596[6:0] <= 7'b0000000;
    tmp_269_cast_reg_3596[16] <= 1'b0;
end

endmodule //coloringFB_top
