// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_4_1_1,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.104000,HLS_SYN_LAT=520,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=210,HLS_SYN_LUT=448,HLS_VERSION=2018_2}" *)

module data_4_1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Input_2_V_V,
        Input_2_V_V_ap_vld,
        Input_2_V_V_ap_ack,
        Input_3_V_V,
        Input_3_V_V_ap_vld,
        Input_3_V_V_ap_ack,
        Input_4_V_V,
        Input_4_V_V_ap_vld,
        Input_4_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_pp0_stage0 = 13'd2;
parameter    ap_ST_fsm_pp0_stage1 = 13'd4;
parameter    ap_ST_fsm_state5 = 13'd8;
parameter    ap_ST_fsm_pp1_stage0 = 13'd16;
parameter    ap_ST_fsm_pp1_stage1 = 13'd32;
parameter    ap_ST_fsm_state9 = 13'd64;
parameter    ap_ST_fsm_pp2_stage0 = 13'd128;
parameter    ap_ST_fsm_pp2_stage1 = 13'd256;
parameter    ap_ST_fsm_state13 = 13'd512;
parameter    ap_ST_fsm_pp3_stage0 = 13'd1024;
parameter    ap_ST_fsm_pp3_stage1 = 13'd2048;
parameter    ap_ST_fsm_state17 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
input  [31:0] Input_2_V_V;
input   Input_2_V_V_ap_vld;
output   Input_2_V_V_ap_ack;
input  [31:0] Input_3_V_V;
input   Input_3_V_V_ap_vld;
output   Input_3_V_V_ap_ack;
input  [31:0] Input_4_V_V;
input   Input_4_V_V_ap_vld;
output   Input_4_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg Input_2_V_V_ap_ack;
reg Input_3_V_V_ap_ack;
reg Input_4_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_fu_151_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_reg_199;
reg    Input_2_V_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] tmp_6_fu_163_p2;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
reg   [0:0] tmp_6_reg_208;
reg    Input_3_V_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] tmp_s_fu_175_p2;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_pp2_stage1;
reg   [0:0] tmp_s_reg_217;
reg    Input_4_V_V_blk_n;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire   [0:0] tmp_1_fu_187_p2;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_pp3_stage1;
reg   [0:0] tmp_1_reg_226;
reg    Output_1_V_V_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp3_iter1;
reg   [6:0] i_reg_87;
reg   [6:0] i1_reg_98;
reg   [6:0] i3_reg_109;
reg   [6:0] i5_reg_120;
reg   [31:0] reg_131;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_136;
reg    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
reg    ap_block_state8_io;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state7_pp1_stage1_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp1_stage1_11001;
reg   [31:0] reg_141;
reg    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state12_pp2_stage0_iter1;
reg    ap_block_state12_io;
reg    ap_block_pp2_stage0_11001;
reg    ap_block_state11_pp2_stage1_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp2_stage1_11001;
reg   [31:0] reg_146;
reg    ap_block_state14_pp3_stage0_iter0;
wire    ap_block_state16_pp3_stage0_iter1;
reg    ap_block_state16_io;
reg    ap_block_pp3_stage0_11001;
reg    ap_block_state15_pp3_stage1_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp3_stage1_11001;
wire   [6:0] i_1_fu_157_p2;
reg   [6:0] i_1_reg_203;
wire   [6:0] i_2_fu_169_p2;
reg   [6:0] i_2_reg_212;
wire   [6:0] i_3_fu_181_p2;
reg   [6:0] i_3_reg_221;
wire   [6:0] i_4_fu_193_p2;
reg   [6:0] i_4_reg_230;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_block_pp1_stage1_subdone;
wire    ap_CS_fsm_state9;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_block_pp2_stage1_subdone;
wire    ap_CS_fsm_state13;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state14;
reg    ap_block_pp3_stage1_subdone;
reg   [6:0] ap_phi_mux_i_phi_fu_91_p4;
reg   [6:0] ap_phi_mux_i1_phi_fu_102_p4;
reg   [6:0] ap_phi_mux_i3_phi_fu_113_p4;
reg   [6:0] ap_phi_mux_i5_phi_fu_124_p4;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_pp2_stage1_01001;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage1_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire    ap_CS_fsm_state17;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state6) & (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state10) & (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
        end else if ((((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state14) & (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0))))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state14);
        end else if ((((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage1_01001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack)) | ((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage1_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage1_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_reg_98 <= 7'd0;
    end else if (((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        i1_reg_98 <= i_2_reg_212;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i3_reg_109 <= 7'd0;
    end else if (((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i3_reg_109 <= i_3_reg_221;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i5_reg_120 <= 7'd0;
    end else if (((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i5_reg_120 <= i_4_reg_230;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_87 <= i_1_reg_203;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_87 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_203 <= i_1_fu_157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_2_reg_212 <= i_2_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_reg_221 <= i_3_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_4_reg_230 <= i_4_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_fu_151_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_131 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((tmp_6_fu_163_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_136 <= Input_2_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((tmp_s_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_141 <= Input_3_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((tmp_1_fu_187_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        reg_146 <= Input_4_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_1_reg_226 <= tmp_1_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_6_reg_208 <= tmp_6_fu_163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_199 <= tmp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_s_reg_217 <= tmp_s_fu_175_p2;
    end
end

always @ (*) begin
    if ((((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_fu_151_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (tmp_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_fu_151_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((tmp_6_fu_163_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Input_2_V_V_ap_ack = 1'b1;
    end else begin
        Input_2_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_208 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0) & (tmp_6_fu_163_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Input_2_V_V_blk_n = Input_2_V_V_ap_vld;
    end else begin
        Input_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((tmp_s_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        Input_3_V_V_ap_ack = 1'b1;
    end else begin
        Input_3_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_217 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1)) | ((tmp_s_fu_175_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        Input_3_V_V_blk_n = Input_3_V_V_ap_vld;
    end else begin
        Input_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((tmp_1_fu_187_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        Input_4_V_V_ap_ack = 1'b1;
    end else begin
        Input_4_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_226 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((tmp_1_fu_187_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)))) begin
        Input_4_V_V_blk_n = Input_4_V_V_ap_vld;
    end else begin
        Input_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage1_01001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        Output_1_V_V = reg_146;
    end else if ((((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage1_01001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        Output_1_V_V = reg_141;
    end else if ((((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage1_01001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        Output_1_V_V = reg_136;
    end else if ((((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        Output_1_V_V = reg_131;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((tmp_6_reg_208 == 1'd0) & (1'b0 == ap_block_pp1_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == ap_block_pp3_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == ap_block_pp2_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_208 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0) & (tmp_6_reg_208 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_1_reg_226 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((tmp_1_reg_226 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((tmp_s_reg_217 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1)) | ((tmp_s_reg_217 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((tmp_fu_151_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_6_fu_163_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_s_fu_175_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_1_fu_187_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_6_reg_208 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_i1_phi_fu_102_p4 = i_2_reg_212;
    end else begin
        ap_phi_mux_i1_phi_fu_102_p4 = i1_reg_98;
    end
end

always @ (*) begin
    if (((tmp_s_reg_217 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i3_phi_fu_113_p4 = i_3_reg_221;
    end else begin
        ap_phi_mux_i3_phi_fu_113_p4 = i3_reg_109;
    end
end

always @ (*) begin
    if (((tmp_1_reg_226 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i5_phi_fu_124_p4 = i_4_reg_230;
    end else begin
        ap_phi_mux_i5_phi_fu_124_p4 = i5_reg_120;
    end
end

always @ (*) begin
    if (((tmp_reg_199 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_91_p4 = i_1_reg_203;
    end else begin
        ap_phi_mux_i_phi_fu_91_p4 = i_reg_87;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((tmp_fu_151_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((tmp_fu_151_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((tmp_6_fu_163_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((tmp_6_fu_163_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (tmp_s_fu_175_p2 == 1'd1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (tmp_s_fu_175_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_1_fu_187_p2 == 1'd1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (tmp_1_fu_187_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((tmp_fu_151_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_fu_151_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_fu_151_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((tmp_reg_199 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((tmp_reg_199 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((tmp_reg_199 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((tmp_6_fu_163_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((tmp_6_fu_163_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((tmp_6_fu_163_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((tmp_6_reg_208 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((tmp_6_reg_208 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((tmp_6_reg_208 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld))));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((tmp_s_fu_175_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((tmp_s_fu_175_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((tmp_s_fu_175_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_01001 = ((tmp_s_reg_217 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((tmp_s_reg_217 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld))));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((tmp_1_fu_187_p2 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((tmp_1_fu_187_p2 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((tmp_1_fu_187_p2 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1)));
end

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage1_01001 = ((tmp_1_reg_226 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage1_11001 = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_pp3_stage1_subdone = ((ap_enable_reg_pp3_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((tmp_1_reg_226 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld))));
end

always @ (*) begin
    ap_block_state10_pp2_stage0_iter0 = ((tmp_s_fu_175_p2 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state11_io = ((tmp_s_reg_217 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp2_stage1_iter0 = ((tmp_s_reg_217 == 1'd0) & (1'b0 == Input_3_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state12_io = ((tmp_s_reg_217 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state12_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp3_stage0_iter0 = ((tmp_1_fu_187_p2 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state15_io = ((tmp_1_reg_226 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp3_stage1_iter0 = ((tmp_1_reg_226 == 1'd0) & (1'b0 == Input_4_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state16_io = ((tmp_1_reg_226 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state16_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((tmp_fu_151_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state3_io = ((tmp_reg_199 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((tmp_reg_199 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state4_io = ((tmp_reg_199 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter0 = ((tmp_6_fu_163_p2 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state7_io = ((tmp_6_reg_208 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp1_stage1_iter0 = ((tmp_6_reg_208 == 1'd0) & (1'b0 == Input_2_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state8_io = ((tmp_6_reg_208 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign i_1_fu_157_p2 = (ap_phi_mux_i_phi_fu_91_p4 + 7'd1);

assign i_2_fu_169_p2 = (ap_phi_mux_i1_phi_fu_102_p4 + 7'd1);

assign i_3_fu_181_p2 = (ap_phi_mux_i3_phi_fu_113_p4 + 7'd1);

assign i_4_fu_193_p2 = (ap_phi_mux_i5_phi_fu_124_p4 + 7'd1);

assign tmp_1_fu_187_p2 = ((ap_phi_mux_i5_phi_fu_124_p4 == 7'd64) ? 1'b1 : 1'b0);

assign tmp_6_fu_163_p2 = ((ap_phi_mux_i1_phi_fu_102_p4 == 7'd64) ? 1'b1 : 1'b0);

assign tmp_fu_151_p2 = ((ap_phi_mux_i_phi_fu_91_p4 == 7'd64) ? 1'b1 : 1'b0);

assign tmp_s_fu_175_p2 = ((ap_phi_mux_i3_phi_fu_113_p4 == 7'd64) ? 1'b1 : 1'b0);

endmodule //data_4_1_1
