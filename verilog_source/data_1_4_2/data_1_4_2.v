// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="data_1_4_2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.007125,HLS_SYN_LAT=1174501,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=96,HLS_SYN_LUT=393,HLS_VERSION=2018_2}" *)

module data_1_4_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack,
        Output_3_V_V,
        Output_3_V_V_ap_vld,
        Output_3_V_V_ap_ack,
        Output_4_V_V,
        Output_4_V_V_ap_vld,
        Output_4_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;
output  [31:0] Output_3_V_V;
output   Output_3_V_V_ap_vld;
input   Output_3_V_V_ap_ack;
output  [31:0] Output_4_V_V;
output   Output_4_V_V_ap_vld;
input   Output_4_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;
reg[31:0] Output_3_V_V;
reg Output_3_V_V_ap_vld;
reg[31:0] Output_4_V_V;
reg Output_4_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_fu_155_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_1_fu_176_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_8_fu_188_p2;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_s_fu_200_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_2_fu_212_p2;
wire    ap_CS_fsm_state10;
reg    Output_1_V_V_blk_n;
reg    Output_2_V_V_blk_n;
reg    Output_3_V_V_blk_n;
reg    Output_4_V_V_blk_n;
wire   [12:0] training_id_1_fu_161_p2;
reg   [12:0] training_id_1_reg_227;
reg    ap_block_state2;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state2_io;
wire   [31:0] tmp_V_1_fu_171_p1;
reg   [31:0] tmp_V_1_reg_232;
wire   [5:0] i_1_fu_182_p2;
reg   [5:0] i_1_reg_242;
reg    ap_block_state3;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state3_io;
wire   [5:0] i_2_fu_194_p2;
reg   [5:0] i_2_reg_250;
reg    ap_block_state5;
reg    ap_sig_ioackin_Output_3_V_V_ap_ack;
reg    ap_block_state5_io;
wire   [5:0] i_3_fu_206_p2;
reg   [5:0] i_3_reg_258;
reg    ap_block_state7;
reg    ap_sig_ioackin_Output_4_V_V_ap_ack;
reg    ap_block_state7_io;
wire   [5:0] i_4_fu_218_p2;
reg   [5:0] i_4_reg_266;
reg    ap_block_state9;
reg    ap_block_state9_io;
reg   [12:0] training_id_reg_100;
reg   [5:0] i_reg_111;
reg   [5:0] i1_reg_122;
reg   [5:0] i3_reg_133;
reg   [5:0] i5_reg_144;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
reg    ap_reg_ioackin_Output_3_V_V_ap_ack;
reg    ap_reg_ioackin_Output_4_V_V_ap_ack;
wire   [7:0] loc_V_fu_167_p1;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_3_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_4_V_V_ap_ack = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | (~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4) & (1'b1 == Output_1_V_V_ap_ack)) | (~((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (1'b1 == Output_1_V_V_ap_ack)) | (~((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b1 == Output_1_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | (~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_1_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6) & (1'b1 == Output_2_V_V_ap_ack)) | (~((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (1'b1 == Output_2_V_V_ap_ack)) | (~((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_1_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (1'b1 == Output_2_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_3_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_8_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_reg_ioackin_Output_3_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8) & (1'b1 == Output_3_V_V_ap_ack)) | (~((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7) & (1'b1 == Output_3_V_V_ap_ack)) | (~((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_8_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (1'b1 == Output_3_V_V_ap_ack)))) begin
            ap_reg_ioackin_Output_3_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_4_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_4_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((1'b1 == ap_block_state9_io) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_2_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
            ap_reg_ioackin_Output_4_V_V_ap_ack <= 1'b0;
        end else if (((~((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7) & (1'b1 == Output_4_V_V_ap_ack)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_4_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state10)) | (~((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_2_fu_212_p2 == 1'd0) & (1'b1 == Output_4_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state9)))) begin
            ap_reg_ioackin_Output_4_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_reg_122 <= i_2_reg_250;
    end else if ((~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_1_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_reg_122 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        i3_reg_133 <= i_3_reg_258;
    end else if ((~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_8_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i3_reg_133 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_4_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        i5_reg_144 <= i_4_reg_266;
    end else if ((~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i5_reg_144 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        i_reg_111 <= i_1_reg_242;
    end else if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_111 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state9_io) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state9) & (tmp_2_fu_212_p2 == 1'd1))) begin
        training_id_reg_100 <= training_id_1_reg_227;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        training_id_reg_100 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_242 <= i_1_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state5))) begin
        i_2_reg_250 <= i_2_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state7))) begin
        i_3_reg_258 <= i_3_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state9_io) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state9))) begin
        i_4_reg_266 <= i_4_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_1_reg_232[7 : 0] <= tmp_V_1_fu_171_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state2))) begin
        training_id_1_reg_227 <= training_id_1_fu_161_p2;
    end
end

always @ (*) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | (~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_4_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((1'b1 == ap_block_state9_io) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_2_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)) | (~((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        Output_1_V_V = Input_1_V_V;
    end else if ((~((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        Output_1_V_V = tmp_V_1_fu_171_p1;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state4)) | (~((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_1_fu_176_p2 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)) | (~((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (exitcond_fu_155_p2 == 1'd0) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)) | (~((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        Output_2_V_V = Input_1_V_V;
    end else if ((~((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_1_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        Output_2_V_V = tmp_V_1_reg_232;
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | (~((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_8_fu_188_p2 == 1'd0) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | (~((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_1_fu_176_p2 == 1'd1) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((tmp_1_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)) | (~((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Output_3_V_V = Input_1_V_V;
    end else if ((~((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_8_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        Output_3_V_V = tmp_V_1_reg_232;
    end else begin
        Output_3_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | (~((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_200_p2 == 1'd0) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | (~((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_8_fu_188_p2 == 1'd1) & (ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state5)))) begin
        Output_3_V_V_ap_vld = 1'b1;
    end else begin
        Output_3_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((tmp_8_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        Output_3_V_V_blk_n = Output_3_V_V_ap_ack;
    end else begin
        Output_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state10)) | (~((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_2_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Output_4_V_V = Input_1_V_V;
    end else if ((~((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        Output_4_V_V = tmp_V_1_reg_232;
    end else begin
        Output_4_V_V = 'bx;
    end
end

always @ (*) begin
    if (((~((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_s_fu_200_p2 == 1'd1) & (ap_reg_ioackin_Output_4_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_4_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | (~((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld)) & (tmp_2_fu_212_p2 == 1'd0) & (ap_reg_ioackin_Output_4_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Output_4_V_V_ap_vld = 1'b1;
    end else begin
        Output_4_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((tmp_s_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        Output_4_V_V_blk_n = Output_4_V_V_ap_ack;
    end else begin
        Output_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_3_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_3_V_V_ap_ack = Output_3_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_3_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_4_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_4_V_V_ap_ack = Output_4_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_4_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((1'b1 == ap_block_state2_io) | ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (exitcond_fu_155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_1_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~((1'b1 == ap_block_state3_io) | ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_1_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_8_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~((1'b1 == ap_block_state5_io) | ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_8_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((1'b1 == ap_block_state7_io) | ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'b1 == ap_block_state9_io) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state9) & (tmp_2_fu_212_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b1 == ap_block_state9_io) | ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_2_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_4_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2 = ((exitcond_fu_155_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state2_io = ((exitcond_fu_155_p2 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((tmp_1_fu_176_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state3_io = (((tmp_1_fu_176_p2 == 1'd0) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) | ((tmp_1_fu_176_p2 == 1'd1) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)));
end

always @ (*) begin
    ap_block_state5 = ((tmp_8_fu_188_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state5_io = (((tmp_8_fu_188_p2 == 1'd0) & (ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0)) | ((tmp_8_fu_188_p2 == 1'd1) & (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0)));
end

always @ (*) begin
    ap_block_state7 = ((tmp_s_fu_200_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state7_io = (((tmp_s_fu_200_p2 == 1'd0) & (ap_sig_ioackin_Output_3_V_V_ap_ack == 1'b0)) | ((tmp_s_fu_200_p2 == 1'd1) & (ap_sig_ioackin_Output_4_V_V_ap_ack == 1'b0)));
end

always @ (*) begin
    ap_block_state9 = ((tmp_2_fu_212_p2 == 1'd0) & (1'b0 == Input_1_V_V_ap_vld));
end

always @ (*) begin
    ap_block_state9_io = ((tmp_2_fu_212_p2 == 1'd0) & (ap_sig_ioackin_Output_4_V_V_ap_ack == 1'b0));
end

assign exitcond_fu_155_p2 = ((training_id_reg_100 == 13'd4500) ? 1'b1 : 1'b0);

assign i_1_fu_182_p2 = (i_reg_111 + 6'd1);

assign i_2_fu_194_p2 = (i1_reg_122 + 6'd1);

assign i_3_fu_206_p2 = (i3_reg_133 + 6'd1);

assign i_4_fu_218_p2 = (i5_reg_144 + 6'd1);

assign loc_V_fu_167_p1 = Input_1_V_V[7:0];

assign tmp_1_fu_176_p2 = ((i_reg_111 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_2_fu_212_p2 = ((i5_reg_144 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_8_fu_188_p2 = ((i1_reg_122 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_V_1_fu_171_p1 = loc_V_fu_167_p1;

assign tmp_s_fu_200_p2 = ((i3_reg_133 == 6'd32) ? 1'b1 : 1'b0);

assign training_id_1_fu_161_p2 = (training_id_reg_100 + 13'd1);

always @ (posedge ap_clk) begin
    tmp_V_1_reg_232[31:8] <= 24'b000000000000000000000000;
end

endmodule //data_1_4_2
