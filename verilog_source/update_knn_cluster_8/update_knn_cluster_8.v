// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="update_knn_cluster_8,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.521875,HLS_SYN_LAT=21850,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=1228,HLS_SYN_LUT=4394,HLS_VERSION=2018_2}" *)

module update_knn_cluster_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Input_1_V_V,
        Input_1_V_V_ap_vld,
        Input_1_V_V_ap_ack,
        Output_1_V_V,
        Output_1_V_V_ap_vld,
        Output_1_V_V_ap_ack,
        Input_2_V_V,
        Input_2_V_V_ap_vld,
        Input_2_V_V_ap_ack,
        Output_2_V_V,
        Output_2_V_V_ap_vld,
        Output_2_V_V_ap_ack
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_state3 = 42'd4;
parameter    ap_ST_fsm_state4 = 42'd8;
parameter    ap_ST_fsm_state5 = 42'd16;
parameter    ap_ST_fsm_state6 = 42'd32;
parameter    ap_ST_fsm_state7 = 42'd64;
parameter    ap_ST_fsm_state8 = 42'd128;
parameter    ap_ST_fsm_state9 = 42'd256;
parameter    ap_ST_fsm_state10 = 42'd512;
parameter    ap_ST_fsm_pp0_stage0 = 42'd1024;
parameter    ap_ST_fsm_state16 = 42'd2048;
parameter    ap_ST_fsm_state17 = 42'd4096;
parameter    ap_ST_fsm_pp1_stage0 = 42'd8192;
parameter    ap_ST_fsm_state23 = 42'd16384;
parameter    ap_ST_fsm_state24 = 42'd32768;
parameter    ap_ST_fsm_state25 = 42'd65536;
parameter    ap_ST_fsm_state26 = 42'd131072;
parameter    ap_ST_fsm_state27 = 42'd262144;
parameter    ap_ST_fsm_state28 = 42'd524288;
parameter    ap_ST_fsm_state29 = 42'd1048576;
parameter    ap_ST_fsm_state30 = 42'd2097152;
parameter    ap_ST_fsm_state31 = 42'd4194304;
parameter    ap_ST_fsm_state32 = 42'd8388608;
parameter    ap_ST_fsm_state33 = 42'd16777216;
parameter    ap_ST_fsm_state34 = 42'd33554432;
parameter    ap_ST_fsm_state35 = 42'd67108864;
parameter    ap_ST_fsm_state36 = 42'd134217728;
parameter    ap_ST_fsm_state37 = 42'd268435456;
parameter    ap_ST_fsm_state38 = 42'd536870912;
parameter    ap_ST_fsm_state39 = 42'd1073741824;
parameter    ap_ST_fsm_state40 = 42'd2147483648;
parameter    ap_ST_fsm_state41 = 42'd4294967296;
parameter    ap_ST_fsm_pp4_stage0 = 42'd8589934592;
parameter    ap_ST_fsm_pp4_stage1 = 42'd17179869184;
parameter    ap_ST_fsm_pp4_stage2 = 42'd34359738368;
parameter    ap_ST_fsm_pp4_stage3 = 42'd68719476736;
parameter    ap_ST_fsm_pp4_stage4 = 42'd137438953472;
parameter    ap_ST_fsm_pp4_stage5 = 42'd274877906944;
parameter    ap_ST_fsm_pp4_stage6 = 42'd549755813888;
parameter    ap_ST_fsm_pp4_stage7 = 42'd1099511627776;
parameter    ap_ST_fsm_state51 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Input_1_V_V;
input   Input_1_V_V_ap_vld;
output   Input_1_V_V_ap_ack;
output  [31:0] Output_1_V_V;
output   Output_1_V_V_ap_vld;
input   Output_1_V_V_ap_ack;
input  [31:0] Input_2_V_V;
input   Input_2_V_V_ap_vld;
output   Input_2_V_V_ap_ack;
output  [31:0] Output_2_V_V;
output   Output_2_V_V_ap_vld;
input   Output_2_V_V_ap_ack;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Input_1_V_V_ap_ack;
reg[31:0] Output_1_V_V;
reg Output_1_V_V_ap_vld;
reg Input_2_V_V_ap_ack;
reg[31:0] Output_2_V_V;
reg Output_2_V_V_ap_vld;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] index;
reg   [8:0] training_set0_V_address0;
reg    training_set0_V_ce0;
reg    training_set0_V_we0;
wire   [255:0] training_set0_V_d0;
wire   [255:0] training_set0_V_q0;
reg   [8:0] training_set1_V_address0;
reg    training_set1_V_ce0;
reg    training_set1_V_we0;
wire   [255:0] training_set1_V_d0;
wire   [255:0] training_set1_V_q0;
reg   [10:0] knn_set0_0;
reg   [10:0] knn_set1_0;
reg   [10:0] knn_set0_1;
reg   [10:0] knn_set1_1;
reg   [10:0] knn_set0_2;
reg   [10:0] knn_set1_2;
reg    Input_1_V_V_blk_n;
wire    ap_CS_fsm_state24;
wire   [0:0] exitcond1_fu_828_p2;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire   [0:0] exitcond3_fu_866_p2;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_pp4_stage0;
wire   [0:0] exitcond6_fu_904_p2;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_pp4_stage1;
reg   [0:0] exitcond6_reg_1026;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_pp4_stage2;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_pp4_stage3;
wire    ap_CS_fsm_pp4_stage4;
wire    ap_block_pp4_stage4;
wire    ap_CS_fsm_pp4_stage5;
wire    ap_block_pp4_stage5;
wire    ap_CS_fsm_pp4_stage6;
wire    ap_block_pp4_stage6;
wire    ap_CS_fsm_pp4_stage7;
wire    ap_block_pp4_stage7;
wire   [0:0] tmp_4_fu_358_p2;
wire   [0:0] tmp_5_fu_364_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    Output_1_V_V_blk_n;
reg    ap_enable_reg_pp4_iter1;
reg    Input_2_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond_fu_449_p2;
reg    Output_2_V_V_blk_n;
wire    ap_CS_fsm_state17;
wire   [0:0] exitcond7_fu_633_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond4_fu_412_p2;
reg   [8:0] i4_reg_218;
reg   [8:0] i7_reg_240;
reg   [13:0] i2_reg_275;
reg   [31:0] reg_321;
reg    ap_predicate_op70_read_state1;
reg    ap_block_state1;
reg    ap_sig_ioackin_Output_1_V_V_ap_ack;
reg    ap_block_state1_io;
reg    ap_block_state24;
reg    ap_block_state33;
reg    ap_block_state42_pp4_stage0_iter0;
wire    ap_block_state50_pp4_stage0_iter1;
reg    ap_block_state50_io;
reg    ap_block_pp4_stage0_11001;
reg    ap_block_state43_pp4_stage1_iter0;
reg    ap_block_state43_io;
reg    ap_block_pp4_stage1_11001;
reg    ap_block_state44_pp4_stage2_iter0;
reg    ap_block_state44_io;
reg    ap_block_pp4_stage2_11001;
reg    ap_block_state45_pp4_stage3_iter0;
reg    ap_block_state45_io;
reg    ap_block_pp4_stage3_11001;
reg    ap_block_state46_pp4_stage4_iter0;
reg    ap_block_state46_io;
reg    ap_block_pp4_stage4_11001;
reg    ap_block_state47_pp4_stage5_iter0;
reg    ap_block_state47_io;
reg    ap_block_pp4_stage5_11001;
reg    ap_block_state48_pp4_stage6_iter0;
reg    ap_block_state48_io;
reg    ap_block_pp4_stage6_11001;
reg    ap_block_state49_pp4_stage7_iter0;
reg    ap_block_state49_io;
reg    ap_block_pp4_stage7_11001;
reg   [31:0] reg_326;
reg   [31:0] reg_330;
reg   [31:0] reg_334;
reg   [31:0] reg_338;
reg   [31:0] reg_342;
reg   [31:0] reg_346;
reg   [0:0] tmp_4_reg_916;
reg   [0:0] tmp_5_reg_920;
wire   [1:0] i_4_fu_418_p2;
reg    ap_sig_ioackin_Output_2_V_V_ap_ack;
reg    ap_block_state2_io;
wire   [6:0] i_6_fu_455_p2;
reg    ap_block_state3;
reg    ap_block_state3_io;
wire   [255:0] p_Result_3_fu_461_p9;
reg   [255:0] p_Result_3_reg_943;
wire   [0:0] exitcond5_fu_481_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state11_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] i_7_fu_487_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [255:0] r_V_fu_498_p2;
reg   [255:0] r_V_reg_963;
wire   [0:0] tmp_9_fu_597_p2;
reg    ap_block_state17_io;
wire   [1:0] i_5_fu_639_p2;
wire   [0:0] exitcond9_fu_670_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
wire    ap_block_state22_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
wire   [8:0] i_8_fu_676_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [255:0] r_V_1_fu_687_p2;
reg   [255:0] r_V_1_reg_998;
wire   [0:0] tmp_11_fu_786_p2;
wire   [8:0] i_1_fu_834_p2;
reg   [8:0] i_1_reg_1013;
wire   [8:0] i_2_fu_872_p2;
reg   [8:0] i_2_reg_1021;
wire   [13:0] i_3_fu_910_p2;
reg   [13:0] i_3_reg_1030;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
wire    ap_CS_fsm_state41;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state42;
reg    ap_block_pp4_stage7_subdone;
reg   [255:0] grp_popcount_fu_286_x_V;
wire   [8:0] grp_popcount_fu_286_ap_return;
reg    grp_popcount_fu_286_ap_ce;
reg   [1:0] i5_reg_196;
wire   [0:0] tmp_s_fu_370_p2;
reg   [6:0] i8_reg_207;
reg   [1:0] i6_reg_229;
wire    ap_CS_fsm_state16;
reg   [8:0] i_reg_251;
reg   [8:0] i1_reg_263;
wire    ap_CS_fsm_state32;
reg   [13:0] ap_phi_mux_i2_phi_fu_279_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire   [63:0] tmp_7_fu_493_p1;
wire   [63:0] tmp_10_fu_682_p1;
wire   [63:0] tmp_6_fu_840_p1;
wire   [63:0] tmp_8_fu_878_p1;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state51;
wire   [10:0] dist_2_cast_fu_613_p1;
wire   [1:0] p_s_8_fu_589_p3;
wire   [10:0] dist_3_cast_fu_802_p1;
wire   [1:0] p_1_fu_778_p3;
wire   [10:0] dist_2_cast1_fu_603_p1;
wire   [10:0] dist_3_cast1_fu_792_p1;
wire   [10:0] p_trunc_ext_cast_fu_623_p1;
wire   [10:0] p_trunc10_ext_cast_fu_812_p1;
reg    ap_block_pp4_stage1_01001;
reg    ap_block_pp4_stage2_01001;
reg    ap_block_pp4_stage3_01001;
reg    ap_block_pp4_stage4_01001;
reg    ap_block_pp4_stage5_01001;
reg    ap_block_pp4_stage6_01001;
reg    ap_block_pp4_stage7_01001;
reg    ap_block_pp4_stage0_01001;
reg    ap_reg_ioackin_Output_1_V_V_ap_ack;
wire   [31:0] tmp_V_24_fu_436_p5;
wire   [31:0] tmp_V_25_fu_657_p5;
reg    ap_reg_ioackin_Output_2_V_V_ap_ack;
wire   [2:0] tmp_15_fu_354_p1;
wire   [31:0] tmp_V_24_fu_436_p1;
wire   [31:0] tmp_V_24_fu_436_p2;
wire   [31:0] tmp_V_24_fu_436_p3;
wire   [9:0] tmp_16_fu_507_p1;
wire   [0:0] tmp_13_fu_515_p2;
wire   [30:0] knn_set0_0_load_cast_fu_511_p1;
wire   [30:0] max_dist_2_0_s_fu_521_p3;
wire   [31:0] extLd5_fu_533_p1;
wire   [31:0] max_dist_2_0_cast_fu_529_p1;
wire   [0:0] tmp_14_1_fu_541_p2;
wire   [30:0] knn_set0_1_load_cast_fu_537_p1;
wire   [30:0] max_dist_2_1_max_dis_fu_547_p3;
wire   [31:0] extLd_fu_563_p1;
wire   [31:0] max_dist_2_1_max_dis_1_fu_555_p1;
wire   [0:0] tmp_14_2_fu_571_p2;
wire   [30:0] extLd_cast_fu_567_p1;
wire   [30:0] max_dist_2_2_max_dis_fu_577_p3;
wire   [1:0] p_s_fu_559_p1;
wire   [31:0] dist_2_fu_503_p1;
wire   [31:0] max_dist_2_2_max_dis_1_fu_585_p1;
wire   [31:0] tmp_V_25_fu_657_p1;
wire   [31:0] tmp_V_25_fu_657_p2;
wire   [31:0] tmp_V_25_fu_657_p3;
wire   [9:0] tmp_17_fu_696_p1;
wire   [0:0] tmp_14_fu_704_p2;
wire   [30:0] knn_set1_0_load_cast_fu_700_p1;
wire   [30:0] max_dist_4_0_s_fu_710_p3;
wire   [31:0] extLd9_fu_722_p1;
wire   [31:0] max_dist_4_0_cast_fu_718_p1;
wire   [0:0] tmp_19_1_fu_730_p2;
wire   [30:0] knn_set1_1_load_cast_fu_726_p1;
wire   [30:0] max_dist_4_1_max_dis_fu_736_p3;
wire   [31:0] extLd3_fu_752_p1;
wire   [31:0] max_dist_4_1_max_dis_1_fu_744_p1;
wire   [0:0] tmp_19_2_fu_760_p2;
wire   [30:0] extLd3_cast_fu_756_p1;
wire   [30:0] max_dist_4_2_max_dis_fu_766_p3;
wire   [1:0] p_2_fu_748_p1;
wire   [31:0] dist_3_fu_692_p1;
wire   [31:0] max_dist_4_2_max_dis_1_fu_774_p1;
reg   [41:0] ap_NS_fsm;
reg    ap_block_pp4_stage1_subdone;
reg    ap_block_pp4_stage2_subdone;
reg    ap_block_pp4_stage3_subdone;
reg    ap_block_pp4_stage4_subdone;
reg    ap_block_pp4_stage5_subdone;
reg    ap_block_pp4_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
#0 index = 4'd0;
#0 knn_set0_0 = 11'd0;
#0 knn_set1_0 = 11'd0;
#0 knn_set0_1 = 11'd0;
#0 knn_set1_1 = 11'd0;
#0 knn_set0_2 = 11'd0;
#0 knn_set1_2 = 11'd0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_reg_ioackin_Output_1_V_V_ap_ack = 1'b0;
#0 ap_reg_ioackin_Output_2_V_V_ap_ack = 1'b0;
end

update_knn_clustebkb #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set0_V_address0),
    .ce0(training_set0_V_ce0),
    .we0(training_set0_V_we0),
    .d0(training_set0_V_d0),
    .q0(training_set0_V_q0)
);

update_knn_clustebkb #(
    .DataWidth( 256 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
training_set1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_set1_V_address0),
    .ce0(training_set1_V_ce0),
    .we0(training_set1_V_we0),
    .d0(training_set1_V_d0),
    .q0(training_set1_V_q0)
);

popcount grp_popcount_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcount_fu_286_x_V),
    .ap_return(grp_popcount_fu_286_ap_return),
    .ap_ce(grp_popcount_fu_286_ap_ce)
);

update_knn_clustedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
update_knn_clustedEe_U2(
    .din0(tmp_V_24_fu_436_p1),
    .din1(tmp_V_24_fu_436_p2),
    .din2(tmp_V_24_fu_436_p3),
    .din3(i5_reg_196),
    .dout(tmp_V_24_fu_436_p5)
);

update_knn_clustedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
update_knn_clustedEe_U3(
    .din0(tmp_V_25_fu_657_p1),
    .din1(tmp_V_25_fu_657_p2),
    .din2(tmp_V_25_fu_657_p3),
    .din3(i6_reg_229),
    .dout(tmp_V_25_fu_657_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state11)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state17_io) & (exitcond7_fu_633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((1'b0 == ap_block_state17_io) & (exitcond7_fu_633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state42) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state42) & (((1'b0 == ap_block_pp4_stage7_subdone) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0))))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state42);
        end else if ((((1'b0 == ap_block_pp4_stage7_subdone) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
    end else begin
        if (((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp4_stage7_11001) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5_11001) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4_11001) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b0;
        end else if (((~((ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp4_stage7_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1_01001) & (1'b1 == Output_1_V_V_ap_ack) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_01001) & (1'b1 == Output_1_V_V_ap_ack) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0)))) begin
            ap_reg_ioackin_Output_1_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0)) | ((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0)) | (~((1'b1 == ap_block_state3_io) | ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b0;
        end else if ((((1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0)) | ((1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0)) | (~((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0)) & (1'b1 == Output_2_V_V_ap_ack) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0)))) begin
            ap_reg_ioackin_Output_2_V_V_ap_ack <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i1_reg_263 <= 9'd0;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state40))) begin
        i1_reg_263 <= i_2_reg_1021;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i2_reg_275 <= 14'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0))) begin
        i2_reg_275 <= i_3_reg_1030;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        i4_reg_218 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond5_fu_481_p2 == 1'd0))) begin
        i4_reg_218 <= i_7_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_370_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (tmp_5_fu_364_p2 == 1'd0) & (tmp_4_fu_358_p2 == 1'd0))) begin
        i5_reg_196 <= 2'd0;
    end else if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0))) begin
        i5_reg_196 <= i_4_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i6_reg_229 <= 2'd0;
    end else if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0))) begin
        i6_reg_229 <= i_5_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state17_io) & (exitcond7_fu_633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i7_reg_240 <= 9'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond9_fu_670_p2 == 1'd0))) begin
        i7_reg_240 <= i_8_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2_io) & (exitcond4_fu_412_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i8_reg_207 <= 7'd0;
    end else if ((~((1'b1 == ap_block_state3_io) | ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0))) begin
        i8_reg_207 <= i_6_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_4_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_251 <= 9'd0;
    end else if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state31))) begin
        i_reg_251 <= i_1_reg_1013;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_reg_920 == 1'd1) & (1'b1 == ap_CS_fsm_state23) & (tmp_4_reg_916 == 1'd0))) begin
                index[0] <= 1'b0;
        index[1] <= 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (~((1'b1 == ap_block_state3_io) | ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0))) & (exitcond_fu_449_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
                index[0] <= 1'b1;
        index[1] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_s_8_fu_589_p3 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_9_fu_597_p2 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                knn_set0_0[8 : 0] <= dist_2_cast_fu_613_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                knn_set0_0[0] <= 1'b0;
        knn_set0_0[1] <= 1'b0;
        knn_set0_0[2] <= 1'b0;
        knn_set0_0[3] <= 1'b0;
        knn_set0_0[4] <= 1'b0;
        knn_set0_0[5] <= 1'b0;
        knn_set0_0[6] <= 1'b0;
        knn_set0_0[7] <= 1'b0;
        knn_set0_0[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((p_s_8_fu_589_p3 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_9_fu_597_p2 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                knn_set0_1[8 : 0] <= dist_2_cast1_fu_603_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                knn_set0_1[0] <= 1'b0;
        knn_set0_1[1] <= 1'b0;
        knn_set0_1[2] <= 1'b0;
        knn_set0_1[3] <= 1'b0;
        knn_set0_1[4] <= 1'b0;
        knn_set0_1[5] <= 1'b0;
        knn_set0_1[6] <= 1'b0;
        knn_set0_1[7] <= 1'b0;
        knn_set0_1[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(p_s_8_fu_589_p3 == 2'd1) & ~(p_s_8_fu_589_p3 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_9_fu_597_p2 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                knn_set0_2[8 : 0] <= p_trunc_ext_cast_fu_623_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                knn_set0_2[0] <= 1'b0;
        knn_set0_2[1] <= 1'b0;
        knn_set0_2[2] <= 1'b0;
        knn_set0_2[3] <= 1'b0;
        knn_set0_2[4] <= 1'b0;
        knn_set0_2[5] <= 1'b0;
        knn_set0_2[6] <= 1'b0;
        knn_set0_2[7] <= 1'b0;
        knn_set0_2[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((p_1_fu_778_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_11_fu_786_p2 == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                knn_set1_0[8 : 0] <= dist_3_cast_fu_802_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                knn_set1_0[0] <= 1'b0;
        knn_set1_0[1] <= 1'b0;
        knn_set1_0[2] <= 1'b0;
        knn_set1_0[3] <= 1'b0;
        knn_set1_0[4] <= 1'b0;
        knn_set1_0[5] <= 1'b0;
        knn_set1_0[6] <= 1'b0;
        knn_set1_0[7] <= 1'b0;
        knn_set1_0[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((p_1_fu_778_p3 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_11_fu_786_p2 == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                knn_set1_1[8 : 0] <= dist_3_cast1_fu_792_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                knn_set1_1[0] <= 1'b0;
        knn_set1_1[1] <= 1'b0;
        knn_set1_1[2] <= 1'b0;
        knn_set1_1[3] <= 1'b0;
        knn_set1_1[4] <= 1'b0;
        knn_set1_1[5] <= 1'b0;
        knn_set1_1[6] <= 1'b0;
        knn_set1_1[7] <= 1'b0;
        knn_set1_1[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(p_1_fu_778_p3 == 2'd1) & ~(p_1_fu_778_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (tmp_11_fu_786_p2 == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                knn_set1_2[8 : 0] <= p_trunc10_ext_cast_fu_812_p1[8 : 0];
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                knn_set1_2[0] <= 1'b0;
        knn_set1_2[1] <= 1'b0;
        knn_set1_2[2] <= 1'b0;
        knn_set1_2[3] <= 1'b0;
        knn_set1_2[4] <= 1'b0;
        knn_set1_2[5] <= 1'b0;
        knn_set1_2[6] <= 1'b0;
        knn_set1_2[7] <= 1'b0;
        knn_set1_2[8] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond6_reg_1026 <= exitcond6_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_828_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state24))) begin
        i_1_reg_1013 <= i_1_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond3_fu_866_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state33))) begin
        i_2_reg_1021 <= i_2_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_3_reg_1030 <= i_3_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        p_Result_3_reg_943 <= p_Result_3_fu_461_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        r_V_1_reg_998 <= r_V_1_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_V_reg_963 <= r_V_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp4_stage7_11001) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5_11001) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4_11001) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_fu_904_p2 == 1'd0)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond3_fu_866_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_866_p2 == 1'd0)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_828_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state24) & (exitcond1_fu_828_p2 == 1'd0)))) begin
        reg_321 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state34)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25)))) begin
        reg_326 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state35)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state26)))) begin
        reg_330 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state36)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state27)))) begin
        reg_334 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state37)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state28)))) begin
        reg_338 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state38)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state29)))) begin
        reg_342 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state39)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state30)))) begin
        reg_346 <= Input_1_V_V;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_4_reg_916 <= tmp_4_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_358_p2 == 1'd0))) begin
        tmp_5_reg_920 <= tmp_5_fu_364_p2;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp4_stage7_11001) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5_11001) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4_11001) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_fu_904_p2 == 1'd0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state40)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state39)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state38)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state37)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state36)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state35)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state34)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond3_fu_866_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_866_p2 == 1'd0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state31)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state30)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state29)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state28)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state27)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state26)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25)) | (~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_828_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state24) & (exitcond1_fu_828_p2 == 1'd0)))) begin
        Input_1_V_V_ap_ack = 1'b1;
    end else begin
        Input_1_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | ((ap_start == 1'b1) & (tmp_5_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_358_p2 == 1'd0)) | ((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_fu_904_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_866_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state24) & (exitcond1_fu_828_p2 == 1'd0)))) begin
        Input_1_V_V_blk_n = Input_1_V_V_ap_vld;
    end else begin
        Input_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0))) begin
        Input_2_V_V_ap_ack = 1'b1;
    end else begin
        Input_2_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0))) begin
        Input_2_V_V_blk_n = Input_2_V_V_ap_vld;
    end else begin
        Input_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage7_01001) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6_01001) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5_01001) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4_01001) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3_01001) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2_01001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1_01001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_01001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0)))) begin
        Output_1_V_V = reg_321;
    end else if (((~((ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state4)))) begin
        Output_1_V_V = Input_1_V_V;
    end else begin
        Output_1_V_V = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (ap_predicate_op70_read_state1 == 1'b1) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == Input_1_V_V_ap_vld) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_pp4_stage7_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_01001) & (ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0)))) begin
        Output_1_V_V_ap_vld = 1'b1;
    end else begin
        Output_1_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (tmp_5_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_358_p2 == 1'd0)) | ((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0)) | ((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0)))) begin
        Output_1_V_V_blk_n = Output_1_V_V_ap_ack;
    end else begin
        Output_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0))) begin
        Output_2_V_V = tmp_V_25_fu_657_p5;
    end else if ((~((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0))) begin
        Output_2_V_V = Input_2_V_V;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0))) begin
        Output_2_V_V = tmp_V_24_fu_436_p5;
    end else begin
        Output_2_V_V = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0)) | ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0)) | (~((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0)) & (ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0)))) begin
        Output_2_V_V_ap_vld = 1'b1;
    end else begin
        Output_2_V_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0)))) begin
        Output_2_V_V_blk_n = Output_2_V_V_ap_ack;
    end else begin
        Output_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond5_fu_481_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond9_fu_670_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_904_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond6_reg_1026 == 1'd0))) begin
        ap_phi_mux_i2_phi_fu_279_p4 = i_3_reg_1030;
    end else begin
        ap_phi_mux_i2_phi_fu_279_p4 = i2_reg_275;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_1_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = Output_1_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_1_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Output_2_V_V_ap_ack == 1'b0)) begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = Output_2_V_V_ap_ack;
    end else begin
        ap_sig_ioackin_Output_2_V_V_ap_ack = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_popcount_fu_286_ap_ce = 1'b1;
    end else begin
        grp_popcount_fu_286_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        grp_popcount_fu_286_x_V = r_V_1_reg_998;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_popcount_fu_286_x_V = r_V_reg_963;
    end else begin
        grp_popcount_fu_286_x_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        training_set0_V_address0 = tmp_6_fu_840_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_set0_V_address0 = tmp_7_fu_493_p1;
    end else begin
        training_set0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state31)))) begin
        training_set0_V_ce0 = 1'b1;
    end else begin
        training_set0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state31))) begin
        training_set0_V_we0 = 1'b1;
    end else begin
        training_set0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        training_set1_V_address0 = tmp_8_fu_878_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        training_set1_V_address0 = tmp_10_fu_682_p1;
    end else begin
        training_set1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state40)))) begin
        training_set1_V_ce0 = 1'b1;
    end else begin
        training_set1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state40))) begin
        training_set1_V_we0 = 1'b1;
    end else begin
        training_set1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_4_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_s_fu_370_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (tmp_5_fu_364_p2 == 1'd0) & (tmp_4_fu_358_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (1'b1 == ap_CS_fsm_state1) & (tmp_s_fu_370_p2 == 1'd0) & (tmp_5_fu_364_p2 == 1'd0) & (tmp_4_fu_358_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if ((~((1'b1 == ap_block_state1_io) | (ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld))) & (tmp_5_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_358_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_io) & (exitcond4_fu_412_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_412_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0))) & (exitcond_fu_449_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if ((~((1'b1 == ap_block_state3_io) | ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state3) & (exitcond_fu_449_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) | (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond5_fu_481_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond5_fu_481_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17_io) & (exitcond7_fu_633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17) & (exitcond7_fu_633_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond9_fu_670_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond9_fu_670_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state24 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_828_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state24) & (exitcond1_fu_828_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_828_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state24) & (exitcond1_fu_828_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond3_fu_866_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_866_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if ((~((1'b0 == Input_1_V_V_ap_vld) & (exitcond3_fu_866_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_866_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == Input_1_V_V_ap_vld) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond6_fu_904_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond6_fu_904_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((1'b0 == ap_block_pp4_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((1'b0 == ap_block_pp4_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((1'b0 == ap_block_pp4_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_fu_904_p2 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = (((1'b1 == ap_block_state50_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_fu_904_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = (((1'b1 == ap_block_state50_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_fu_904_p2 == 1'd0)));
end

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage1_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage1_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state43_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage1_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state43_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage2_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage2_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state44_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage2_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state44_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage3_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage3_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state45_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage3_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state45_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

assign ap_block_pp4_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage4_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage4_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state46_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage4_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state46_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

assign ap_block_pp4_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage5_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage5_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state47_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage5_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state47_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

assign ap_block_pp4_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage6_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage6_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state48_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage6_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state48_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

assign ap_block_pp4_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage7_01001 = ((1'b0 == Input_1_V_V_ap_vld) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage7_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state49_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_pp4_stage7_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state49_io) | ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((ap_predicate_op70_read_state1 == 1'b1) & (1'b0 == Input_1_V_V_ap_vld)));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond7_fu_633_p2 == 1'd0));
end

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_io = ((ap_predicate_op70_read_state1 == 1'b1) & (ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0));
end

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond1_fu_828_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state2_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond4_fu_412_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state3 = ((1'b0 == Input_2_V_V_ap_vld) & (exitcond_fu_449_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state33 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond3_fu_866_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state3_io = ((ap_sig_ioackin_Output_2_V_V_ap_ack == 1'b0) & (exitcond_fu_449_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state42_pp4_stage0_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_fu_904_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state43_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state43_pp4_stage1_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state44_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state44_pp4_stage2_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state45_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state45_pp4_stage3_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state46_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state46_pp4_stage4_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state47_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state47_pp4_stage5_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state48_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state48_pp4_stage6_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state49_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state49_pp4_stage7_iter0 = ((1'b0 == Input_1_V_V_ap_vld) & (exitcond6_reg_1026 == 1'd0));
end

always @ (*) begin
    ap_block_state50_io = ((ap_sig_ioackin_Output_1_V_V_ap_ack == 1'b0) & (exitcond6_reg_1026 == 1'd0));
end

assign ap_block_state50_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_predicate_op70_read_state1 = ((tmp_5_fu_364_p2 == 1'd1) & (tmp_4_fu_358_p2 == 1'd0));
end

assign dist_2_cast1_fu_603_p1 = grp_popcount_fu_286_ap_return;

assign dist_2_cast_fu_613_p1 = grp_popcount_fu_286_ap_return;

assign dist_2_fu_503_p1 = grp_popcount_fu_286_ap_return;

assign dist_3_cast1_fu_792_p1 = grp_popcount_fu_286_ap_return;

assign dist_3_cast_fu_802_p1 = grp_popcount_fu_286_ap_return;

assign dist_3_fu_692_p1 = grp_popcount_fu_286_ap_return;

assign exitcond1_fu_828_p2 = ((i_reg_251 == 9'd450) ? 1'b1 : 1'b0);

assign exitcond3_fu_866_p2 = ((i1_reg_263 == 9'd450) ? 1'b1 : 1'b0);

assign exitcond4_fu_412_p2 = ((i5_reg_196 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond5_fu_481_p2 = ((i4_reg_218 == 9'd450) ? 1'b1 : 1'b0);

assign exitcond6_fu_904_p2 = ((ap_phi_mux_i2_phi_fu_279_p4 == 14'd9900) ? 1'b1 : 1'b0);

assign exitcond7_fu_633_p2 = ((i6_reg_229 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond9_fu_670_p2 = ((i7_reg_240 == 9'd450) ? 1'b1 : 1'b0);

assign exitcond_fu_449_p2 = ((i8_reg_207 == 7'd66) ? 1'b1 : 1'b0);

assign extLd3_cast_fu_756_p1 = knn_set1_2;

assign extLd3_fu_752_p1 = knn_set1_2;

assign extLd5_fu_533_p1 = knn_set0_1;

assign extLd9_fu_722_p1 = knn_set1_1;

assign extLd_cast_fu_567_p1 = knn_set0_2;

assign extLd_fu_563_p1 = knn_set0_2;

assign i_1_fu_834_p2 = (i_reg_251 + 9'd1);

assign i_2_fu_872_p2 = (i1_reg_263 + 9'd1);

assign i_3_fu_910_p2 = (ap_phi_mux_i2_phi_fu_279_p4 + 14'd1);

assign i_4_fu_418_p2 = (i5_reg_196 + 2'd1);

assign i_5_fu_639_p2 = (i6_reg_229 + 2'd1);

assign i_6_fu_455_p2 = (i8_reg_207 + 7'd1);

assign i_7_fu_487_p2 = (i4_reg_218 + 9'd1);

assign i_8_fu_676_p2 = (i7_reg_240 + 9'd1);

assign knn_set0_0_load_cast_fu_511_p1 = knn_set0_0;

assign knn_set0_1_load_cast_fu_537_p1 = knn_set0_1;

assign knn_set1_0_load_cast_fu_700_p1 = knn_set1_0;

assign knn_set1_1_load_cast_fu_726_p1 = knn_set1_1;

assign max_dist_2_0_cast_fu_529_p1 = max_dist_2_0_s_fu_521_p3;

assign max_dist_2_0_s_fu_521_p3 = ((tmp_13_fu_515_p2[0:0] === 1'b1) ? knn_set0_0_load_cast_fu_511_p1 : 31'd0);

assign max_dist_2_1_max_dis_1_fu_555_p1 = max_dist_2_1_max_dis_fu_547_p3;

assign max_dist_2_1_max_dis_fu_547_p3 = ((tmp_14_1_fu_541_p2[0:0] === 1'b1) ? knn_set0_1_load_cast_fu_537_p1 : max_dist_2_0_s_fu_521_p3);

assign max_dist_2_2_max_dis_1_fu_585_p1 = max_dist_2_2_max_dis_fu_577_p3;

assign max_dist_2_2_max_dis_fu_577_p3 = ((tmp_14_2_fu_571_p2[0:0] === 1'b1) ? extLd_cast_fu_567_p1 : max_dist_2_1_max_dis_fu_547_p3);

assign max_dist_4_0_cast_fu_718_p1 = max_dist_4_0_s_fu_710_p3;

assign max_dist_4_0_s_fu_710_p3 = ((tmp_14_fu_704_p2[0:0] === 1'b1) ? knn_set1_0_load_cast_fu_700_p1 : 31'd0);

assign max_dist_4_1_max_dis_1_fu_744_p1 = max_dist_4_1_max_dis_fu_736_p3;

assign max_dist_4_1_max_dis_fu_736_p3 = ((tmp_19_1_fu_730_p2[0:0] === 1'b1) ? knn_set1_1_load_cast_fu_726_p1 : max_dist_4_0_s_fu_710_p3);

assign max_dist_4_2_max_dis_1_fu_774_p1 = max_dist_4_2_max_dis_fu_766_p3;

assign max_dist_4_2_max_dis_fu_766_p3 = ((tmp_19_2_fu_760_p2[0:0] === 1'b1) ? extLd3_cast_fu_756_p1 : max_dist_4_1_max_dis_fu_736_p3);

assign p_1_fu_778_p3 = ((tmp_19_2_fu_760_p2[0:0] === 1'b1) ? 2'd2 : p_2_fu_748_p1);

assign p_2_fu_748_p1 = tmp_19_1_fu_730_p2;

assign p_Result_3_fu_461_p9 = {{{{{{{{reg_321}, {reg_326}}, {reg_330}}, {reg_334}}, {reg_338}}, {reg_342}}, {reg_346}}, {Input_1_V_V}};

assign p_s_8_fu_589_p3 = ((tmp_14_2_fu_571_p2[0:0] === 1'b1) ? 2'd2 : p_s_fu_559_p1);

assign p_s_fu_559_p1 = tmp_14_1_fu_541_p2;

assign p_trunc10_ext_cast_fu_812_p1 = grp_popcount_fu_286_ap_return;

assign p_trunc_ext_cast_fu_623_p1 = grp_popcount_fu_286_ap_return;

assign r_V_1_fu_687_p2 = (training_set1_V_q0 ^ p_Result_3_reg_943);

assign r_V_fu_498_p2 = (training_set0_V_q0 ^ p_Result_3_reg_943);

assign tmp_10_fu_682_p1 = i7_reg_240;

assign tmp_11_fu_786_p2 = ((dist_3_fu_692_p1 < max_dist_4_2_max_dis_1_fu_774_p1) ? 1'b1 : 1'b0);

assign tmp_13_fu_515_p2 = (($signed(tmp_16_fu_507_p1) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign tmp_14_1_fu_541_p2 = ((extLd5_fu_533_p1 > max_dist_2_0_cast_fu_529_p1) ? 1'b1 : 1'b0);

assign tmp_14_2_fu_571_p2 = ((extLd_fu_563_p1 > max_dist_2_1_max_dis_1_fu_555_p1) ? 1'b1 : 1'b0);

assign tmp_14_fu_704_p2 = (($signed(tmp_17_fu_696_p1) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign tmp_15_fu_354_p1 = index[2:0];

assign tmp_16_fu_507_p1 = knn_set0_0[9:0];

assign tmp_17_fu_696_p1 = knn_set1_0[9:0];

assign tmp_19_1_fu_730_p2 = ((extLd9_fu_722_p1 > max_dist_4_0_cast_fu_718_p1) ? 1'b1 : 1'b0);

assign tmp_19_2_fu_760_p2 = ((extLd3_fu_752_p1 > max_dist_4_1_max_dis_1_fu_744_p1) ? 1'b1 : 1'b0);

assign tmp_4_fu_358_p2 = ((tmp_15_fu_354_p1 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_364_p2 = ((tmp_15_fu_354_p1 == 3'd1) ? 1'b1 : 1'b0);

assign tmp_6_fu_840_p1 = i_reg_251;

assign tmp_7_fu_493_p1 = i4_reg_218;

assign tmp_8_fu_878_p1 = i1_reg_263;

assign tmp_9_fu_597_p2 = ((dist_2_fu_503_p1 < max_dist_2_2_max_dis_1_fu_585_p1) ? 1'b1 : 1'b0);

assign tmp_V_24_fu_436_p1 = knn_set1_0;

assign tmp_V_24_fu_436_p2 = knn_set1_1;

assign tmp_V_24_fu_436_p3 = knn_set1_2;

assign tmp_V_25_fu_657_p1 = knn_set0_0;

assign tmp_V_25_fu_657_p2 = knn_set0_1;

assign tmp_V_25_fu_657_p3 = knn_set0_2;

assign tmp_s_fu_370_p2 = ((tmp_15_fu_354_p1 == 3'd2) ? 1'b1 : 1'b0);

assign training_set0_V_d0 = {{{{{{{{reg_321}, {reg_326}}, {reg_330}}, {reg_334}}, {reg_338}}, {reg_342}}, {reg_346}}, {Input_1_V_V}};

assign training_set1_V_d0 = {{{{{{{{reg_321}, {reg_326}}, {reg_330}}, {reg_334}}, {reg_338}}, {reg_342}}, {reg_346}}, {Input_1_V_V}};

always @ (posedge ap_clk) begin
    index[3:2] <= 2'b00;
    knn_set0_0[10:9] <= 2'b00;
    knn_set1_0[10:9] <= 2'b00;
    knn_set0_1[10:9] <= 2'b00;
    knn_set1_1[10:9] <= 2'b00;
    knn_set0_2[10:9] <= 2'b00;
    knn_set1_2[10:9] <= 2'b00;
end

endmodule //update_knn_cluster_8
